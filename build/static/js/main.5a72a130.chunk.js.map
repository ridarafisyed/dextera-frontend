{"version":3,"sources":["asserts/logo_white copy.png","components/Tabs/tabs.module.css","redux/features/sidebarSlice.js","components/Dashboard/Admin/DashboardLayout/DashboardContent.jsx","asserts/login_light.png","asserts/signup_light.png","reducers/profile.js","reducers/errors.js","reducers/messages.js","reducers/data.js","redux/features/tabSlice.js","redux/features/searchTabSlice.js","redux/features/favoriteSlice.js","api/MatterApi.js","redux/services/roleFnService.js","redux/features/roleFnSlice.js","redux/services/permissionService.js","redux/features/permissionSlice.js","redux/features/selectMemberSlice.js","redux/services/authService.js","redux/features/authSlice.js","reducers/index.js","actions/types.js","store.js","actions/messages.js","actions/auth.js","context/useToggle.jsx","styles/styles.jsx","actions/data.js","components/Navbars/NavbarResponsive.jsx","components/Navbars/Navbar.jsx","components/Chat/Chat.jsx","components/Dashboard/Calender.jsx","components/Favorite/Favorites.jsx","components/Navbars/DrawerComp.jsx","components/Navbars/NavbarSec.jsx","components/Sidebar/AdminSidebar.jsx","components/Sidebar/LawyerSidebar.jsx","components/Sidebar/FirmSidebar.jsx","components/Sidebar/CutomerSidebar.jsx","components/Sidebar/Sidebar.jsx","components/Footer/Footer.jsx","hocs/Layout.js","utils/PrivateRoute.js","context/User/reducer.js","context/User/index.js","hocs/Theme.js","components/Dashboard/Admin/DashBoard.jsx","components/Tabs/Tabs.jsx","components/Invoice/CreateInvoice.jsx","components/Invoice/Payment.jsx","components/Invoice/Filters.jsx","components/Invoice/InvoiceList.jsx","components/Invoice/index.jsx","utils/ActionAlerts.js","components/Matter/MatterList.jsx","components/Matter/Cards.jsx","components/Matter/Calendar.jsx","components/Matter/Filters.jsx","components/Matter/MatterCards.jsx","components/Matter/MatterListLong.jsx","components/Matter/NewMatter.jsx","components/Matter/MatterDetail.jsx","components/Matter/index.jsx","components/Ledger/LedgerActivity.jsx","components/Ledger/Fillters.jsx","components/Ledger/LedgerCards.jsx","components/Ledger/LedgerTImeList.jsx","components/Ledger/LedgerDashbard.jsx","components/Ledger/LedgerDoc.jsx","components/Ledger/Time.jsx","components/Ledger/index.jsx","components/Category/SubCategory.jsx","components/Category/Category.jsx","components/Category/Classification.jsx","components/Category/ManageCategory.jsx","components/Contact/Contact.jsx","components/Profile/Profile.js","components/Tasks/ViewTasks.jsx","components/Tasks/CreateTask.jsx","components/Tasks/index.jsx","components/Dashboard/UserRoles/AdminDashboard.jsx","components/Dashboard/ProgressBar.jsx","components/Dashboard/Tasks.jsx","components/Dashboard/Cards.jsx","components/Dashboard/Client/DashBoard.jsx","components/Template/Templates.jsx","components/Dashboard/UserRoles/ClientDashboard.jsx","components/Dashboard/Lawyer/Chart.jsx","components/Dashboard/Lawyer/DashBoard.jsx","components/Dashboard/UserRoles/LawyerDashboard.jsx","components/Dashboard/Firm/Charts.jsx","components/Dashboard/Firm/DashBoard.jsx","components/Dashboard/UserRoles/FirmDashboard.jsx","containers/Home.js","containers/Auth/Login.js","containers/Auth/Signup.js","components/Profile/Company.jsx","containers/Matters/Matters.jsx","components/User/CreateUser.jsx","components/User/UpdateUser.jsx","components/User/ManageUser.jsx","components/User/index.jsx","components/Ledger/TimeList.jsx","components/Employee/Search.jsx","components/Employee/Result.jsx","components/Employee/Saved.jsx","components/Employee/index.jsx","components/User/RoleFuncions.jsx","components/User/ManageRole.jsx","components/User/ManageUserGroup.jsx","App.jsx","index.js","components/Dashboard/Admin/Charts.jsx","components/Dashboard/Admin/Cards/RevenueIn.jsx","components/Dashboard/Admin/Cards/RevenueOut.jsx","components/Dashboard/Admin/Cards/NewCustomer.jsx","components/Dashboard/Admin/Cards/LostCustomer.jsx","components/Dashboard/Admin/Map.jsx","components/Dashboard/Admin/NewAccounts.jsx","components/Dashboard/Admin/EmpOversite.jsx","components/Dashboard/Admin/DashboardLayout/Widget.jsx"],"names":["module","exports","__webpack_require__","p","tabs","current","content","d","__webpack_exports__","hideSidebar","showSidebar","revenueInActive","revenueOutActive","newCustomerActive","lostCustomerActive","newAccountActive","appointmentActive","marketingActive","empOversiteActive","emailsActive","callsActive","mapActive","_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__","sidebarSlice","createSlice","name","initialState","revenueIn","revenueOut","newCustomer","lostCustomer","newAccount","appointment","marketing","empOversite","emails","calls","map","display","reducers","isDisplay","state","actions","originalItems","initialLayouts","lg","i","x","y","w","h","md","sm","xs","xxs","withSize","refreshMode","refreshRate","_ref","width","size","sidebar","useSelector","dispatch","useDispatch","components","a","b","c","e","f","g","j","k","fnCall","_useState","useState","_useState2","Object","_home_supersis03_Projects_Dextera_Phase_3_dextera_project_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","items","_useState3","key","ls","global","localStorage","JSON","parse","getItem","getFromLS","_useState4","layouts","setLayouts","onRemoveItem","itemId","displayItemList","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","className","data-grid","Infinity","style","_Widget__WEBPACK_IMPORTED_MODULE_8__","id","backgroundColor","useEffect","Fragment","react_grid_layout__WEBPACK_IMPORTED_MODULE_4__","breakpoints","cols","rowHeight","onLayoutChange","_","allLayouts","profile","msg","status","isWeekly","tabSlice","addTab","action","newTask","payload","tab","push","removeTab","filter","item","reset","newTabSlice","addNewTab","removeNewTab","removeLastNewTab","pop","resetNewTab","favoriteSlice","addFav","newFav","page","favorite","length","isAvailable","removeFav","CONFIG","headers","Content-Type","Accept","API_URL","concat","process","getRoleFn","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","RoleId","response","wrap","_context2","prev","next","axios","get","sent","abrupt","data","stop","_x3","apply","this","arguments","roleFnService","goals","isError","isSuccess","isLoading","message","createGoal","createAsyncThunk","_callee","goalData","thunkAPI","token","_context","getState","auth","user","goalService","t0","toString","rejectWithValue","_x","_x2","getGoals","_x4","deleteGoal","_ref3","_callee3","_context3","_x5","_x6","goalSlice","extraReducers","builder","addCase","pending","fulfilled","rejected","goal","_id","createpermission","permissionData","getPermissions","updatePermission","value","patch","deletePermission","_ref4","_callee4","_context4","delete","permissionService","permissions","all","createPermission","_ref5","_x7","_x8","permissionSlice","permission","memberSlice","newMember","selectMember","signUp","userData","post","setItem","stringify","signIn","signOut","removeItem","authService","isAuthenticated","authSlice","combineReducers","undefined","type","objectSpread","errors","messages","sidebarReducer","favoriteReducer","tabsReducer","newTabs","newTabsReducer","permissionReducer","member","memberReducer","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","configureStore","reducer","persistor","persistStore","returnErrors","logout","tokenConfig","then","res","config","useToggle","slicedToArray","isToggled","setIsToggled","useCallback","SideBarBtn","styled","Button","theme","fontSize","textTransform","color","textAlign","height","margin","borderColor","padding","&:hover","palette","primary","main","&:visited","SecNavbar","boxShadow","overflow","position","FooterBar","bottom","left","alignContent","FooterLink","Link","fontFamily","fontWeight","textDecoration","marginTop","FooterButton","marginX","paddingX","LinkButton","_ref6","borderRadius","cursor","Search","_ref7","marginRight","spacing","marginLeft","SearchIconWrapper","_ref8","pointerEvents","alignItems","justifyContent","StyledInputBase","InputBase","_ref9","& .MuiInputBase-input","defineProperty","paddingLeft","transition","transitions","create","up","MainSearch","_ref10","MainSearchIconWrapper","_ref12","StyledMainInputBase","_ref13","updateIsWeekly","NavbarResponsive","Intl","DateTimeFormat","resolvedOptions","timeZone","Date","currentTime","_useState5","_useState6","dateValue","setDateValue","timeFormater","checked","toLocaleTimeString","hour","minute","hour12","_useToggle","_useToggle2","_useState7","_useState8","settingAcnchorEl","_useState9","Boolean","_useState10","_React$useState","React","_React$useState2","anchorEl","_React$useState3","_React$useState4","setChecked","handleChange","event","target","handleOnChage","_useState11","_useState12","openDrawer","setOpenDrawer","react_default","react","Typography","noWrap","component","sx","react_router_dom","to","src","Logo","alt","variant","Switch","onChange","inputProps","aria-label","transform","IconButton","float","onClick","Menu_default","Drawer","anchor","open","onClose","List","ListItemButton","ListItemIcon","Search_default","placeholder","Select","labelId","label","MenuItem","LocalizationProvider","dateAdapter","AdapterDateFns","DateRangePicker","startText","endText","newValue","renderInput","startProps","endProps","TextField","Box","mx","react_number_format_es","displayType","thousandSeparator","prefix","Navbar","isTabletOrMobile","useMediaQuery","query","redirect","flexGrow","AppBar","border","Toolbar","Navbars_NavbarResponsive","ml","mr","react_router","ChatHistory","Chip","avatar","Avatar","Chatting","Chat_ChatHistory","& .MuiTextField-root","m","endIcon","Send_default","Calender","setValue","tasks","Paper","Grid","container","StaticDatePicker","orientation","openTo","shouldDisableDate","isWeekend","params","task","Favorites","ListItem","disablePadding","Star","ListItemText","NavBarSecResponsive","openFav","setOpenFav","handleCloseFav","openCal","setOpenCal","handleCloseCal","openChat","setOpenChat","handleCloseChat","username","is_firm","is_lawyer","is_client","setLocalUser","setRedirect","setSettingAcnchorEl","_useState13","_useState14","settingAcnchorEl2","setSettingAcnchorEl2","openSetting2","openSetting","handleClose2","handleClose","_useState15","_useState16","anchorOrigin","vertical","horizontal","Message","Dialog","Validate","aria-labelledby","aria-describedby","right","DialogTitle","DialogContent","Chat","DialogActions","pathname","EmailRounded","CalendarToday","maxWidth","fullWidth","Dashboard_Calender","aria-controls","aria-expanded","aria-haspopup","currentTarget","CheckBox","Menu_Menu","MenuListProps","TransitionComponent","Fade","Divider","my","Favorite_Favorites","autoFocus","Settings","console","log","NotificationAdd","NavbarSec","handleLogout","handleClick","DrawerComp_NavBarSecResponsive","Person","Controls","px","AddCircle","Receipt","FileCopy","MoneyOff","esm_Task","Work","AssignmentTurnedIn","Marketing","Mail","HumanResources","Group","RevenueControls","AccountControls","EmployeeOversite","Phone","accordionData","tiles","AdminSidebar_Controls","AdminSidebar_HumanResources","AdminSidebar_RevenueControls","AdminSidebar_AccountControls","AdminSidebar_Marketing","AdminSidebar_EmployeeOversite","TestingSidebar","accordions","updateAccordions","mt","react_beautiful_dnd_esm","onDragEnd","result","destination","Array","from","_items$splice","splice","source","index","reorderedItem","droppableId","provided","assign","droppableProps","ref","innerRef","draggableId","Accordion","draggableProps","dragHandleProps","AccordionSummary","expandIcon","ExpandMore_default","align","AccordionDetails","LawyerSidebar","FirmSidebar","CustomerSidebar","Sidebar","Stack","elevation","overflowY","AdminSidebar","Sidebar_FirmSidebar","Sidebar_LawyerSidebar","CutomerSidebar","SidebarRedirect","Footer","setOpen","handleClickOpen","InnerLayout","children","_useSelector","isDesktopOrLaptop","useTheme","isBigScreen","sidebarToggle","drawerOpen","setDrawerOpen","openPopover","handleSidebarToggle","descriptionElementRef","useRef","descriptionElement","focus","contianer","rowSpacing","columnSpacing","Navbars_NavbarSec","Navbars_Navbar","direction","components_Sidebar_Sidebar","top","components_Footer_Footer","Fab","zIndex","Report","esm_Chat","Popover","transformOrigin","PrivateRoutes","rest","objectWithoutProperties","active","UserContext","createContext","UserProvider","_React$useReducer","useReducer","_React$useReducer2","Provider","createTheme","mode","error","warning","success","contrastThreshold","tonalOffset","typography","htmlFontSize","DashBoard","DashboardContent","Tabs","props","activeTab","setActiveTab","styles","startIcon","MoreVert","newActiveTab","preventDefault","one","CreateInvoice","approvel","setApprovel","matter","contact","billable","date_range","create_date","due_date","template","invoice_no","discount","submit","invoiceData","setInvoiceData","dateRange","setDateRange","onSubmit","autoComplete","FormControlLabel","control","Checkbox","varient","LocalizationProvider_LocalizationProvider","DateRangePicker_DateRangePicker","calendars","InputLabelProps","shrink","TableContainer","Table","TableHead","TableRow","TableCell","PaymentPlan","payment_no","due","amount","late_fee","total_due","payment","posted","method","paymentData","mb","TableBody","paddingInline","InvoicePayment","tax","interest","time","hard","soft","total","Payment","isPlan","setIsPlan","payment_type","date","retainer","menu","bank_account","payment_method","FormControl","RadioGroup","row","defaultValue","Radio","InputLabel","Payment_PaymentPlan","Payment_InvoicePayment","Filters","invoiceToggle","setInvoiceToggle","_useToggle3","_useToggle4","paymentToggle","setPaymentToggle","_useToggle5","_useToggle6","paid","setPaid","age","setAge","& .MuiFormControl-root","DialogContentText","Invoice_CreateInvoice","Invoice_Payment","styles_Search","styles_SearchIconWrapper","styles_StyledInputBase","InvoiceList","Invoice_Filters","Index","Invoice_InvoiceList","ActionAlerts","Alert","severity","TotalDays","date1","date2","dt1","dt2","Math","floor","UTC","getFullYear","getMonth","getDate","GetDate","MatterList","setTasks","setStatus","setLoading","redTask","setRedTask","greenTask","setGreenTask","yellowTask","setYellowTask","myTask","setMyTask","statusText","catch","err","FormGroup","Cards","Card","minWidth","CardContent","gutterBottom","Calendar","Box_Box","MatterCards","bgcolor","MatterListLong","setMatters","NewMatter","mask","openDate","setOpenDate","whenDate","setWhenDate","closeDate","setCloseDate","totalDays","setTotalDays","matter_name","matter_type","matter_source","matter_status","assign_to","assign_by","billing_rate","alerts","jurisdiction","status_limitaion","opposing_counsel","where","involved","witnesses","narrative","matterData","setMatterData","days","open_date","close_date","when","total_days","body","ActionAlerts_ActionAlerts","min","disabled","step","DatePicker","inputFormat","multiline","rows","Save_default","MatterTask","Activities","MatterDetail","MatterDetail_Activities","MatterDetail_MatterTask","MatterDetail_Cards","Matters","Matter_Filters","Matter_MatterCards","Matter_MatterListLong","MatterDashboard","Matter_MatterList","Matter_Calendar","Matter_Cards","components_Tabs_Tabs","Matter_MatterDashboard","Matter_Matters","Matter_NewMatter","Matter_MatterDetail","LedgerActivity","setActivityData","bgColor","Fillters","billedby","setBilledby","setFilter","LedgerCards","decimalScale","fixedDecimalScale","LedgerTImeList","setLedgerData","LegderDashbard","Ledger_LedgerCards","Ledger_Fillters","Ledger_LedgerTImeList","LedgerDoc","minHeight","Time","pickDate","setPickDate","timeToggle","setTimeToggle","setBillable","setTime","category","sub_category","unit","qty","rate","file","detail","bill_by","note","timeData","setTimeData","labelPlacement","FormLabel","format","customInput","onValueChange","LedgerDashbard","Ledger_LedgerActivity","Ledger_LedgerDoc","Ledger_Time","SubCategory","subCategory","setSubCategory","loading","formData","setFormData","FetchData","handleSubmit","required","Clear_default","Category","setCategory","setError","Classification","classification","setClassification","ManageCategory","components_Category_Category","Category_SubCategory","Category_Classification","Contact","_React$createElement","_React$createElement2","_React$createElement3","_React$createElement4","clientNo","setClientNo","dob","setDob","ssn","setSsn","mobileNo","setMobileNo","homeNo","setHomeNo","officeNo","setOfficeNo","faxNo","setFaxNo","otherNo","setOtherNo","_useState17","_useState18","zip","setZip","_useState19","_useState20","plus4","setPlus4","_useState21","_useState22","zip2","setZip2","_useState23","_useState24","plus42","setPlus42","_useState25","company_name","website","ger_email","billing_email","street","suite","city","f_name","l_name","email_1","email_2","email_3","street2","suite2","city2","state2","office","team","relation","_useState26","contactData","setContactData","persist","thousandsGroupStyle","autoWidth","connect","gradYear","setGradYear","barDate","setBarDate","underGradYear","setUnderGradYear","phoneNo","setPhoneNo","barNo","setBarNo","practiceTime","setPracticeTime","longestTenure","setLongestTenure","averageTenure","setAverageTenure","currentTenure","setCurrentTenure","email","mobile","phone","language","locate","search_active","law_school","grad_year","bar_admit_date","undergrad_school","undergrad_area","undergrad_year","bar_no","admitted_practice","practice_time","longest_tenure","average_tenure","current_tenure","past_bar_companies_no","primary_area","TabContext","borderBottom","TabList","Tab","TabPanel","defaultChecked","KeyboardArrowRight_default","ViewTasks","CreateTask","dueDate","setDueDate","bill","setBill","isPrivate","setIsPrivate","setFile","matter_id","matter_contact","filename","taskData","setTaskData","& .MuiSelect-root","due_at","is_billable","is_private","Tasks_ViewTasks","Tasks_CreateTask","Invoice","Matter","Ledger","Category_ManageCategory","components_Contact_Contact","components_Profile_Profile","Tasks","invoice","ledger","AdminDashboard","tabList","newTabList","wordEntered","setWordEntered","handleChangeSearch","addSearchTab","setTimeout","displayNewTabsName","handleRemoveNewTab","Close_default","displayTabsName","handleRemoveTab","displaySearchTabs","noValidate"," & .MuiOutlinedInput-notchedOutline","renderTabs","Tabs_Tabs","scrollButtons","allowScrollButtonsMobilearia-label","icon","iconPosition","Add_default","Admin_DashBoard","ProgressBar","progress","paddingRight","LinearProgress","randomDate","start","end","getDateTime","getTime","random","toLocaleDateString","getHours","getMinutes","Task","LawyerCards","postfix","FirmCards","CustomerCards","Cards_CustomerCards","Dashboard_Tasks","Dashboard_ProgressBar","Templates","ClientDashboard","Client_DashBoard","Template_Templates","PieChart","series","options","chart","plotOptions","pie","donut","dataLabels","enabled","formatter","val","title","text","horizontalAlign","colors","labels","legend","show","dropShadow","useSeriesColors","onItemClick","toggleDataSeries","seriesName","opts","globals","seriesIndex","react_apexcharts_min_default","Chart2","radialBar","startAngle","endAngle","track","background","hollow","fill","gradient","shade","gradientToColors","stops","BarChart","stacked","bar","stroke","xaxis","categories","yaxis","tooltip","opacity","offsetX","Cards_LawyerCards","Chart_PieChart","Chart_Chart2","Chart_BarChart","LawyerDashboard","Lawyer_DashBoard","Chart","BarChart2","columnWidth","distributed","BarChart3","barHeight","textAnchor","opt","dataPointIndex","floating","Cards_FirmCards","Charts_Chart2","Charts_Chart","Charts_BarChart","Charts_BarChart2","Charts_BarChart3","FirmDashboard","Firm_DashBoard","Dashboard","UserRoles_AdminDashboard","UserRoles_FirmDashboard","UserRoles_LawyerDashboard","UserRoles_ClientDashboard","dashboardRedirect","Login","password","prevState","backgroundImage","BackgroundImage","backgroundRepeat","t","grey","backgroundSize","backgroundPosition","square","flexDirection","LockOutlined_default","minLength","register","accountCreated","setAccountCreated","isFirm","setIsFirm","first_name","last_name","re_password","Company","m_name","c_email","role","time_zone","group","job_title","ext","home","work_no","phone_ext","setUserData","p_email","& .MuiButton-root","CreateUser","userId","roles","setRoles","setRole","setGroup","groups","setGroups","loading2","setLoading2","middle_name","rate_type","toLowerCase","input::-webkit-outer-spin-button","webkitAappearance","InputProps","max","select","defaults","xsrfHeaderName","xsrfCookieName","UpdateUser","put","is_active","User","usersData","setUsersData","setUserId","isActive","setIsActive","searchItem","setSearchItem","open2","setOpen2","handleClickOpen2","User_CreateUser","User_UpdateUser","includes","last_login","ManageUser","TimeList","practice_area","undergrad_study","lamguages","admitted_state","relocate","searchData","setSearchData","Result","Saved","pickTime","setPickTime","bar_adm_year","mail_add","link","notes","jobData","setJobData","TimePicker","Employee_Search","Employee_Result","Employee_Saved","RoleFuncions","is_view","isView","setIsView","is_edit","isEdit","setIsEdit","is_create","isCreate","setIsCreate","_useToggle7","is_delete","_useToggle8","isDelete","setIsDelete","_useToggle9","is_contacts","_useToggle10","isContacts","setIsContacts","_useToggle11","is_team","_useToggle12","isTeam","setIsTeam","_useToggle13","is_office","_useToggle14","isOffice","setIsOffice","_useToggle15","is_region","_useToggle16","isRegion","setIsRegion","_useToggle17","_useToggle18","isAll","setIsAll","updateFunctions","Rectangle_default","ManageRole","overflowX","&MuiTableCell","User_RoleFuncions","ManageUserGroup","loadingUser","setLoadingUser","App","es","integration_react","User_UserProvider","ThemeProvider","react_alert","AlertTemplate","timeout","Layout","path","Signup","PrivateRoute","exact","Home","Profile","Employee","ReactDOM","render","StrictMode","CssBaseline","src_App","document","getElementById","Appointments","fillColor","strokeColor","toolbar","onItemHover","highlightDataSeries","curve","Calls","lable","Email","listStyleType","mapboxgl","workerClass","MapboxWorker","Map","latitude","longitude","zoom","viewport","setViewport","esm","mapStyle","MAP_STYLE","onViewportChange","mapboxApiAccessToken","offsetLeft","offsetTop","Circle","NewAccounts","EmpOversite","Widget","widgetNames","RevenueIn","RevenueOut","NewCustomer","LostCustomer","Admin_NewAccounts","Admin_Map","Admin_EmpOversite","Charts_Calls","Charts_Appointments","Charts_Marketing","Charts_Email","paddingTop","CardActions"],"mappings":"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cAAComB,GAAA,EAAD,MACApU,EAAA/T,EAAA+B,cAAComB,GAAA,EAAD,MACApU,EAAA/T,EAAA+B,cAAComB,GAAA,EAAD,MACApU,EAAA/T,EAAA+B,cAAComB,GAAA,EAAD,MACApU,EAAA/T,EAAA+B,cAAComB,GAAA,EAAD,MACApU,EAAA/T,EAAA+B,cAAComB,GAAA,EAAD,MACApU,EAAA/T,EAAA+B,cAAComB,GAAA,EAAD,MACApU,EAAA/T,EAAA+B,cAAComB,GAAA,EAAD,MACApU,EAAA/T,EAAA+B,cAAComB,GAAA,EAAD,OAEFpU,EAAA/T,EAAA+B,cAACmmB,GAAA,EAAD,KACEnU,EAAA/T,EAAA+B,cAAComB,GAAA,EAAD,KACEpU,EAAA/T,EAAA+B,cAACylB,GAAA,EAAD,OAEFzT,EAAA/T,EAAA+B,cAAComB,GAAA,EAAD,MACApU,EAAA/T,EAAA+B,cAAComB,GAAA,EAAD,MACApU,EAAA/T,EAAA+B,cAAComB,GAAA,EAAD,MACApU,EAAA/T,EAAA+B,cAAComB,GAAA,EAAD,MACApU,EAAA/T,EAAA+B,cAAComB,GAAA,EAAD,MACApU,EAAA/T,EAAA+B,cAAComB,GAAA,EAAD,MACApU,EAAA/T,EAAA+B,cAAComB,GAAA,EAAD,MACApU,EAAA/T,EAAA+B,cAAComB,GAAA,EAAD,MACApU,EAAA/T,EAAA+B,cAAComB,GAAA,EAAD,MACApU,EAAA/T,EAAA+B,cAAComB,GAAA,EAAD,MACApU,EAAA/T,EAAA+B,cAAComB,GAAA,EAAD,OAEFpU,EAAA/T,EAAA+B,cAACmmB,GAAA,EAAD,KACEnU,EAAA/T,EAAA+B,cAAComB,GAAA,EAAD,KACEpU,EAAA/T,EAAA+B,cAACylB,GAAA,EAAD,OAEFzT,EAAA/T,EAAA+B,cAAComB,GAAA,EAAD,MACApU,EAAA/T,EAAA+B,cAAComB,GAAA,EAAD,MACApU,EAAA/T,EAAA+B,cAAComB,GAAA,EAAD,MACApU,EAAA/T,EAAA+B,cAAComB,GAAA,EAAD,MACApU,EAAA/T,EAAA+B,cAAComB,GAAA,EAAD,MACApU,EAAA/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","file":"static/js/main.5a72a130.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_white copy.aa470428.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"tabs_tabs__2iP2q\",\"current\":\"tabs_current__UH0Eq\",\"content\":\"tabs_content__Vh0J0\"};","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  revenueIn: true,\n  revenueOut: true,\n  newCustomer: true,\n  lostCustomer: true,\n  newAccount: true,\n  appointment: true,\n  marketing: true,\n  empOversite: true,\n  emails: true,\n  calls: true,\n  map: true,\n  display: true,\n};\n\nconst sidebarSlice = createSlice({\n  name: \"sidebar\",\n  initialState,\n  reducers: {\n    isDisplay: (state) => {\n      state.display = !state.display;\n    },\n    hideSidebar: (state) => {\n      state.display = false;\n    },\n    showSidebar: (state) => {\n      state.display = true;\n    },\n    // manageRoleActive: (state) => {\n    //   state.manageRole = !state.manageRole;\n    // },\n    // manageUserActive: (state) => {\n    //   state.manageUser = !state.manageUser;\n    // },\n    // manageGroupActive: (state) => {\n    //   state.manageGroup = !state.manageGroup;\n    // },\n    revenueInActive: (state) => {\n      state.revenueIn = !state.revenueIn;\n    },\n    revenueOutActive: (state) => {\n      state.revenueOut = !state.revenueOut;\n    },\n    newCustomerActive: (state) => {\n      state.newCustomer = !state.newCustomer;\n    },\n    lostCustomerActive: (state) => {\n      state.lostCustomer = !state.lostCustomer;\n    },\n    newAccountActive: (state) => {\n      state.newAccount = !state.newAccount;\n    },\n    appointmentActive: (state) => {\n      state.appointment = !state.appointment;\n    },\n    marketingActive: (state) => {\n      state.marketing = !state.marketing;\n    },\n    empOversiteActive: (state) => {\n      state.empOversite = !state.empOversite;\n    },\n    emailsActive: (state) => {\n      state.emails = !state.emails;\n    },\n    callsActive: (state) => {\n      state.calls = !state.calls;\n    },\n    mapActive: (state) => {\n      state.map = !state.map;\n    },\n  },\n});\n\nexport const {\n  isDisplay,\n  // manageRoleActive,\n  // manageGroupActive,\n  // manageUserActive,\n  hideSidebar,\n  showSidebar,\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  lostCustomerActive,\n  newAccountActive,\n  appointmentActive,\n  marketingActive,\n  empOversiteActive,\n  emailsActive,\n  callsActive,\n  mapActive,\n} = sidebarSlice.actions;\nexport default sidebarSlice.reducer;\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport { Responsive as ResponsiveGridLayout } from \"react-grid-layout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { withSize } from \"react-sizeme\";\n\nimport {\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  lostCustomerActive,\n  newAccountActive,\n  appointmentActive,\n  marketingActive,\n  empOversiteActive,\n  emailsActive,\n  callsActive,\n  mapActive,\n} from \"../../../../redux/features/sidebarSlice\";\n\nimport Widget from \"./Widget\";\n\nconst originalItems = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\"];\n\nconst initialLayouts = {\n  lg: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 4 },\n    { i: \"b\", x: 2, y: 0, w: 2, h: 4 },\n    { i: \"c\", x: 4, y: 0, w: 4, h: 4 },\n    { i: \"d\", x: 8, y: 0, w: 4, h: 4 },\n\n    { i: \"e\", x: 0, y: 2, w: 5, h: 6 },\n    { i: \"f\", x: 5, y: 2, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 6, w: 3, h: 6 },\n    { i: \"h\", x: 3, y: 6, w: 3, h: 6 },\n    { i: \"i\", x: 6, y: 6, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 12, w: 8, h: 5 },\n    { i: \"k\", x: 8, y: 12, w: 4, h: 5 },\n  ],\n  md: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 4 },\n    { i: \"b\", x: 2, y: 0, w: 2, h: 4 },\n    { i: \"c\", x: 4, y: 0, w: 4, h: 4 },\n    { i: \"d\", x: 8, y: 0, w: 4, h: 4 },\n\n    { i: \"e\", x: 0, y: 2, w: 5, h: 6 },\n    { i: \"f\", x: 5, y: 2, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 6, w: 3, h: 6 },\n    { i: \"h\", x: 3, y: 6, w: 3, h: 6 },\n    { i: \"i\", x: 6, y: 6, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 12, w: 8, h: 5 },\n    { i: \"k\", x: 8, y: 12, w: 4, h: 5 },\n  ],\n  sm: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 4 },\n    { i: \"b\", x: 2, y: 0, w: 2, h: 4 },\n    { i: \"c\", x: 4, y: 0, w: 4, h: 4 },\n    { i: \"d\", x: 8, y: 0, w: 4, h: 4 },\n\n    { i: \"e\", x: 0, y: 2, w: 5, h: 6 },\n    { i: \"f\", x: 5, y: 2, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 6, w: 3, h: 6 },\n    { i: \"h\", x: 3, y: 6, w: 3, h: 6 },\n    { i: \"i\", x: 6, y: 6, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 12, w: 8, h: 5 },\n    { i: \"k\", x: 8, y: 12, w: 4, h: 5 },\n  ],\n  xs: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 3 },\n    { i: \"b\", x: 0, y: 4, w: 2, h: 3 },\n    { i: \"c\", x: 0, y: 8, w: 4, h: 6 },\n    { i: \"d\", x: 0, y: 12, w: 4, h: 6 },\n\n    { i: \"e\", x: 0, y: 18, w: 5, h: 6 },\n    { i: \"f\", x: 0, y: 24, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 30, w: 3, h: 4 },\n    { i: \"h\", x: 0, y: 36, w: 3, h: 4 },\n    { i: \"i\", x: 0, y: 42, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 48, w: 8, h: 5 },\n    { i: \"k\", x: 0, y: 53, w: 4, h: 5 },\n  ],\n  xxs: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 3 },\n    { i: \"b\", x: 0, y: 4, w: 2, h: 3 },\n    { i: \"c\", x: 0, y: 8, w: 4, h: 6 },\n    { i: \"d\", x: 0, y: 12, w: 4, h: 6 },\n\n    { i: \"e\", x: 0, y: 18, w: 5, h: 6 },\n    { i: \"f\", x: 0, y: 24, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 30, w: 3, h: 4 },\n    { i: \"h\", x: 0, y: 36, w: 3, h: 4 },\n    { i: \"i\", x: 0, y: 42, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 48, w: 8, h: 5 },\n    { i: \"k\", x: 0, y: 53, w: 4, h: 4 },\n  ],\n};\n\nfunction Content({ size: { width } }) {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  const components = {\n    a: sidebar.revenueIn,\n    b: sidebar.revenueOut,\n    c: sidebar.newCustomer,\n    d: sidebar.lostCustomer,\n    e: sidebar.newAccount,\n    f: sidebar.map,\n    g: sidebar.empOversite,\n    h: sidebar.calls,\n    i: sidebar.appointment,\n    j: sidebar.marketing,\n    k: sidebar.emails,\n  };\n  const fnCall = {\n    a: revenueInActive(),\n    b: revenueOutActive(),\n    c: newCustomerActive(),\n    d: lostCustomerActive(),\n    e: newAccountActive(),\n    f: mapActive(),\n    g: empOversiteActive(),\n    h: callsActive(),\n    i: appointmentActive(),\n    j: marketingActive(),\n    k: emailsActive(),\n  };\n  const [items, setItems] = useState(originalItems);\n  const [layouts, setLayouts] = useState(\n    getFromLS(\"layouts\") || initialLayouts,\n  );\n  const onLayoutChange = (_, allLayouts) => {\n    setLayouts(allLayouts);\n  };\n  const onLayoutSave = () => {\n    saveToLS(\"layouts\", layouts);\n  };\n  const onRemoveItem = (itemId) => {\n    // setItems(items.filter((i) => i !== itemId));\n    dispatch(fnCall[itemId]);\n  };\n  const onAddItem = (itemId) => {\n    setItems([...items, itemId]);\n    dispatch(fnCall[itemId]);\n  };\n  const displayItemList = () => {\n    return items.map((key) => (\n      <div\n        key={key}\n        className=\"widget\"\n        data-grid={{ w: 3, h: 2, x: 0, y: Infinity }}\n        style={components[key] ? { display: \"block\" } : { display: \"none\" }}\n      >\n        <Widget\n          id={key}\n          onRemoveItem={onRemoveItem}\n          backgroundColor=\"#867ae9\"\n        />\n      </div>\n    ));\n  };\n  useEffect(() => {\n    displayItemList();\n  }, [sidebar]);\n\n  return (\n    <>\n      <ResponsiveGridLayout\n        className=\"layout\"\n        layouts={layouts}\n        breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}\n        cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}\n        rowHeight={60}\n        width={width}\n        onLayoutChange={onLayoutChange}\n      >\n        {displayItemList()}\n      </ResponsiveGridLayout>\n    </>\n  );\n}\n\nexport default withSize({ refreshMode: \"debounce\", refreshRate: 60 })(Content);\n\nfunction getFromLS(key) {\n  let ls = {};\n  if (global.localStorage) {\n    try {\n      ls = JSON.parse(global.localStorage.getItem(\"rgl-8\")) || {};\n    } catch (e) {}\n  }\n  return ls[key];\n}\n\nfunction saveToLS(key, value) {\n  if (global.localStorage) {\n    global.localStorage.setItem(\n      \"rgl-8\",\n      JSON.stringify({\n        [key]: value,\n      }),\n    );\n  }\n}\n","module.exports = __webpack_public_path__ + \"static/media/login_light.a12d3677.png\";","module.exports = __webpack_public_path__ + \"static/media/signup_light.181ee8a6.png\";","/** @format */\n\nimport { GET_PROFILE } from \"../actions/types\";\n\nconst initialState = {\n  profile: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROFILE:\n      return {\n        ...state,\n        profile: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {\n\tmsg: {},\n\tstatus: null,\n};\n\nexport default function(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase GET_ERRORS:\n\t\t\treturn {\n\t\t\t\tmsg: action.payload.msg,\n\t\t\t\tstatus: action.payload.status,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","/** @format */\n\nimport { CREATE_MESSAGE } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase CREATE_MESSAGE:\n\t\t\treturn (state = action.payload);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","/** @format */\n\nimport {\n  GET_IS_WEEKLY,\n  MONTLY_REVENUE,\n  WEEKLY_REVENUE,\n} from \"../actions/types\";\n\nconst initialState = {\n  isWeekly: \"daily\",\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_IS_WEEKLY:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n    case MONTLY_REVENUE:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n    case WEEKLY_REVENUE:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst tabSlice = createSlice({\n  name: \"tab\",\n  initialState: initialState,\n  reducers: {\n    addTab: (state, action) => {\n      const newTask = {\n        id: action.payload.id,\n        name: action.payload.tab,\n      };\n      state.push(newTask);\n    },\n    removeTab: (state, action) => {\n      return state.filter((item) => item.id !== action.payload.id);\n    },\n    reset: (state) => initialState,\n  },\n});\n\nexport const { addTab, removeTab, reset } = tabSlice.actions;\nexport default tabSlice.reducer;\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst newTabSlice = createSlice({\n  name: \"tab\",\n  initialState: initialState,\n  reducers: {\n    addNewTab: (state, action) => {\n      state.push({\n        id: action.payload.id,\n        name: action.payload.name,\n      });\n    },\n    removeNewTab: (state, action) => {\n      return state.filter((item) => item.id !== action.payload.id);\n    },\n\n    removeLastNewTab: (state) => {\n      state.pop();\n    },\n    resetNewTab: (state) => initialState,\n  },\n});\n\nexport const {\n  addNewTab,\n  removeNewTab,\n  resetNewTab,\n  removeLastNewTab,\n} = newTabSlice.actions;\nexport default newTabSlice.reducer;\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  favorite: {},\n  isAvailable: true,\n};\n\nconst favoriteSlice = createSlice({\n  name: \"favorite\",\n  initialState: [],\n  reducers: {\n    addFav: (state, action) => {\n      const newFav = {\n        id: action.payload.id,\n        name: action.payload.name,\n        page: action.payload.page,\n      };\n      if (state.favorite.length < 10) {\n        state.favorite.push(newFav);\n      } else state.isAvailable = false;\n    },\n\n    removeFav: (state, action) => {\n      return state.filter((item) => item.id !== action.payload.id);\n    },\n  },\n});\n\nexport const { addFav, removeFav } = favoriteSlice.actions;\nexport default favoriteSlice.reducer;\n","/** @format */\n\n// import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport const CONFIG = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n};\n\nexport const CreateMatter = (\n  contact,\n  matter_name,\n  matter_type,\n  matter_source,\n  matter_status,\n  assign_to,\n  assign_by,\n  billing_rate,\n  alerts,\n  open_date,\n  close_date,\n  total_days,\n  jurisdiction,\n  status_limitaion,\n  opposing_counsel,\n  where,\n  when,\n  involved,\n  witnesses,\n  narrative,\n) => {\n  let status = \"\";\n  const body = JSON.stringify({\n    contact,\n    matter_name,\n    matter_type,\n    matter_source,\n    matter_status,\n    assign_to,\n    assign_by,\n    billing_rate,\n    alerts,\n    open_date,\n    close_date,\n    total_days,\n    jurisdiction,\n    status_limitaion,\n    opposing_counsel,\n    where,\n    when,\n    involved,\n    witnesses,\n    narrative,\n  });\n\n  axios\n    .post(`${process.env.REACT_APP_API_URL}/api/new-matter/`, body, CONFIG)\n    .then((res) => {\n      status = res.statusText;\n    })\n    .catch((err) => {\n      status = err.message;\n    });\n\n  return status;\n};\n\nexport const retrive_matter = () => {};\n","import axios from 'axios'\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst API_URL = `${process.env.REACT_APP_API_URL}/user/auth/`\n\n// Create new goal\nconst createRole = async (roleData, token) => {\n  // const config = {\n  //   headers: {\n  //     Authorization: `Bearer ${token}`,\n  //   },\n  // }\n\n  const response = await axios.post(API_URL, roleData, CONFIG)\n\n  return response.data\n}\n\n// Get user goals\nconst getRoleFn = async (RoleId) => {\n\n  const response = await axios.get(API_URL + RoleId , CONFIG)\n\n  return response.data\n}\n\n// Delete user goal\nconst deleteGoal = async (goalId, token) => {\n\n  const response = await axios.delete(API_URL + goalId, CONFIG)\n\n  return response.data\n}\n\nconst roleFnService = {\n  // createGoal,\n  getRoleFn,\n  // deleteGoal,\n}\n\nexport default roleFnService","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport goalService from '../services/roleFnService'\n\nconst initialState = {\n  goals: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: '',\n}\n\n// Create new goal\nexport const createGoal = createAsyncThunk(\n  'goals/create',\n  async (goalData, thunkAPI) => {\n    try {\n      const token = thunkAPI.getState().auth.user.token\n      return await goalService.createGoal(goalData, token)\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\n// Get user goals\nexport const getGoals = createAsyncThunk(\n  'goals/getAll',\n  async (_, thunkAPI) => {\n    try {\n      const token = thunkAPI.getState().auth.user.token\n      return await goalService.getGoals(token)\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\n// Delete user goal\nexport const deleteGoal = createAsyncThunk(\n  'goals/delete',\n  async (id, thunkAPI) => {\n    try {\n      const token = thunkAPI.getState().auth.user.token\n      return await goalService.deleteGoal(id, token)\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\nexport const goalSlice = createSlice({\n  name: 'goal',\n  initialState,\n  reducers: {\n    reset: (state) => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(createGoal.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(createGoal.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.goals.push(action.payload)\n      })\n      .addCase(createGoal.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n      .addCase(getGoals.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(getGoals.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.goals = action.payload\n      })\n      .addCase(getGoals.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n      .addCase(deleteGoal.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(deleteGoal.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.goals = state.goals.filter(\n          (goal) => goal._id !== action.payload.id\n        )\n      })\n      .addCase(deleteGoal.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n  },\n})\n\nexport const { reset } = goalSlice.actions\nexport default goalSlice.reducer","/** @format */\n\nimport axios from \"axios\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst API_URL = `${process.env.REACT_APP_API_URL}/user/auth/`;\n// Create new permission\nconst createpermission = async (permissionData, token) => {\n\t//   const config = {\n\t//     headers: {\n\t//       Authorization: `Bearer ${token}`,\n\t//     },\n\t//   }\n\t//   const response = await axios.post(API_URL, permissionData, config)\n\t//   return response.data\n};\n\n// Get user permissions\nconst getPermissions = async (id) => {\n\tconst response = await axios.get(\n\t\t`${process.env.REACT_APP_API_URL}/user/auth/role-permissions/${id}/`,\n\t\tCONFIG,\n\t);\n\n\treturn response.data;\n};\n// update user permission\n\nconst updatePermission = async (id, value) => {\n\t\n\tconst response = await axios.patch(\n\t\t`${process.env.REACT_APP_API_URL}/user/auth/permissions/${id}/`,\n\t\tvalue, \n\t\tCONFIG,\n\t);\n\n\treturn response.data;\n};\n\n\n// Delete user permission\nconst deletePermission = async (id) => {\n\tconst response = await axios.delete(\n\t\t`${process.env.REACT_APP_API_URL}/user/auth/role-permissions/${id}/`,\n\t\tCONFIG,\n\t);\n\n\treturn response.data;\n};\n\nconst permissionService = {\n\tcreatepermission,\n\tgetPermissions,\n\tupdatePermission,\n\tdeletePermission,\n};\n\nexport default permissionService;\n","/** @format */\n\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport permissionService from \"../services/permissionService\";\n\nconst initialState = {\n\tpermissions: [],\n\tisError: false,\n\tisSuccess: false,\n\tisLoading: false,\n\tmessage: \"\",\n\tall: false,\n};\n\n// Create new permissions\nexport const createPermission = createAsyncThunk(\n\t\"permissions/create\",\n\tasync (permissionData, thunkAPI) => {\n\t\ttry {\n\t\t\treturn await permissionService.createPermission(permissionData);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\n\n// Get user permissions\nexport const getPermissions = createAsyncThunk(\n\t\"permissions/getAll\",\n\tasync (id, thunkAPI) => {\n\t\ttry {\n\t\t\treturn await permissionService.getPermissions(id);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\nexport const updatePermission = createAsyncThunk(\n\t\"permissions/update\",\n\tasync ({id, value}, thunkAPI) => {\n\n\t\ttry {\n\t\t\treturn await permissionService.updatePermission(id, value);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\n\n// Delete user permission\nexport const deletePermission = createAsyncThunk(\n\t\"permissions/delete\",\n\tasync (id, thunkAPI) => {\n\t\ttry {\n\t\t\treturn await permissionService.deletePermission(id);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\n\nexport const permissionSlice = createSlice({\n\tname: \"permission\",\n\tinitialState,\n\treducers: {\n\t\treset: (state) => initialState,\n\t},\n\textraReducers: (builder) => {\n\t\tbuilder\n\t\t\t.addCase(createPermission.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(createPermission.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.permissions.push(action.payload);\n\t\t\t})\n\t\t\t.addCase(createPermission.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t})\n\t\t\t.addCase(getPermissions.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(getPermissions.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.permissions = action.payload;\n\t\t\t})\n\t\t\t.addCase(getPermissions.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t})\n\t\t\t.addCase(updatePermission.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(updatePermission.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\t\n\t\t\t\tgetPermissions()\n\n\t\t\t})\n\t\t\t.addCase(updatePermission.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t})\n\t\t\t.addCase(deletePermission.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(deletePermission.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.permissions = state.permissions.filter(\n\t\t\t\t\t(permission) => permission._id !== action.payload.id,\n\t\t\t\t);\n\t\t\t})\n\t\t\t.addCase(deletePermission.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t});\n\t},\n});\n\nexport const {\n\treset\n} = permissionSlice.actions;\nexport default permissionSlice.reducer;\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst memberSlice = createSlice({\n  name: \"member\",\n  initialState: initialState,\n  reducers: {\n    addTab: (state, action) => {\n      const newMember = {\n        id: action.payload.id,\n        name: action.payload.tab,\n      };\n      state.push(newMember);\n    },\n    \n    reset: (state) => initialState,\n  },\n});\n\nexport const { selectMember, reset } = memberSlice.actions;\nexport default memberSlice.reducer;\n","/** @format */\n\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst API_URL = `${process.env.REACT_APP_API_URL}/user/auth/`;\n\n// Register user\nconst signUp = async (userData) => {\n\tconst response = await axios.post(API_URL + \"register\", userData, CONFIG);\n\n\tif (response.data) {\n\t\tlocalStorage.setItem(\"user\", JSON.stringify(response.data.user));\n\t\tlocalStorage.setItem(\"token\", JSON.stringify(response.data.token));\n\t}\n\n\treturn response.data;\n};\n\n// Login user\nconst signIn = async (userData) => {\n\tconst response = await axios.post(API_URL + \"login\", userData, CONFIG);\n\n\tif (response.data) {\n\t\tlocalStorage.setItem(\"user\", JSON.stringify(response.data));\n\t}\n\n\treturn response.data;\n};\n\n// Logout user\nconst signOut = async (token) => {\n\tconst response = await axios.post(API_URL + \"logout\", token);\n\tif (response.data) {\n\t\tlocalStorage.removeItem(\"user\");\n\t\tlocalStorage.removeItem(\"token\");\n\t}\n\n\t// return response.data\n};\n\nconst authService = {\n\tsignIn,\n\tsignOut,\n\tsignUp,\n};\n\nexport default authService;\n","/** @format */\n\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"../services/authService\";\n\n// Get user from localStorage\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nconst token = JSON.parse(localStorage.getItem(\"token\"));\n\nconst initialState = {\n\tuser: user ? user : null,\n\tisAuthenticated: false,\n\tisError: false,\n\tisSuccess: false,\n\tisLoading: false,\n\tmessage: \"\",\n};\n\n// signUp user\nexport const signUp = createAsyncThunk(\n\t\"auth/signUp\",\n\tasync (user, thunkAPI) => {\n\t\ttry {\n\t\t\treturn await authService.signUp(user);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\n\n// signIn user\nexport const signIn = createAsyncThunk(\n\t\"auth/signIn\",\n\tasync (user, thunkAPI) => {\n\t\ttry {\n\t\t\treturn await authService.signIn(user);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\n\nexport const signOut = createAsyncThunk(\"auth/signOut\", async () => {\n\tawait authService.signOut(token);\n});\n\nexport const authSlice = createSlice({\n\tname: \"auth\",\n\tinitialState,\n\treducers: {\n\t\treset: (state) => {\n\t\t\tstate.isLoading = false;\n\t\t\tstate.isSuccess = false;\n\t\t\tstate.isError = false;\n\t\t\tstate.isAuthenticated = false;\n\t\t\tstate.message = \"\";\n\t\t},\n\t},\n\textraReducers: (builder) => {\n\t\tbuilder\n\t\t\t.addCase(signUp.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(signUp.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.isAuthenticated = true;\n\t\t\t\tstate.user = action.payload;\n\t\t\t})\n\t\t\t.addCase(signUp.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.isAuthenticated = false;\n\t\t\t\tstate.message = action.payload;\n\t\t\t\tstate.user = null;\n\t\t\t})\n\t\t\t.addCase(signIn.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(signIn.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.isAuthenticated = true;\n\t\t\t\tstate.user = action.payload;\n\t\t\t})\n\t\t\t.addCase(signIn.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t\tstate.user = null;\n\t\t\t})\n\t\t\t.addCase(signOut.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(signOut.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t})\n\t\t\t.addCase(signOut.fulfilled, (state) => {\n\t\t\t\tstate.user = null;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.isAuthenticated = false;\n\t\t\t});\n\t},\n});\n\nexport const { reset } = authSlice.actions;\nexport default authSlice.reducer;\n","/** @format */\n\nimport { combineReducers } from \"redux\";\n// import leads from \"./leads\";\nimport profile from \"./profile\";\nimport errors from \"./errors\";\nimport messages from \"./messages\";\n// import auth from \"./auth\";\nimport data from \"./data\";\nimport sidebarReducer from \"../redux/features/sidebarSlice\";\nimport tabsReducer from \"../redux/features/tabSlice\";\nimport newTabsReducer from \"../redux/features/searchTabSlice\";\nimport favoriteReducer from \"../redux/features/favoriteSlice\";\nimport rolefnsReducer from \"../redux/features/roleFnSlice\";\nimport permissionReducer from \"../redux/features/permissionSlice\";\nimport memberReducer from \"../redux/features/selectMemberSlice\"\nimport auth from \"../redux/features/authSlice\";\n\nexport default combineReducers({\n\tauth,\n\tprofile,\n\terrors,\n\tmessages,\n\tdata,\n\tsidebar: sidebarReducer,\n\tfavorite: favoriteReducer,\n\ttabs: tabsReducer,\n\tnewTabs: newTabsReducer,\n\tpermissions: permissionReducer,\n\tmember: memberReducer\n});\n","/** @format */\n\nexport const GET_PROFILE = \"GET_PROFILE\";\nexport const DELETE_PROFILE = \"DELETE_PROFILE\";\nexport const ADD_PROFILE = \"ADD_PROFILE\";\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const CREATE_MESSAGE = \"CREATE_MESSAGE\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const CLEAR_PROFILES = \"CLEAR_PROFILES\";\nexport const MONTLY_REVENUE = \"GET_MONTLY_REVENUE\";\nexport const WEEKLY_REVENUE = \"GET_WEEKLY_REVENUE\";\nexport const GET_IS_WEEKLY = \"GET_IS_WEEKLY\";\nexport const UPDATE_IS_WEEKLY = \"UPDATE_IS_WEEKLY\";\n\nexport const CREATE_MEMBER_SUCCESS = \"CREATE_MEMBER_SUCCESS\";\nexport const CREATE_MEMBER_FAIL = \"CREATE_MEMBER_FAIL\";\n\nexport const GET_MEMBER_SUCCESS = \"GET_MEMBER_SUCCESS\";\nexport const GET_MEMBER_FAIL = \"GET_MEMBER_FAIL\";\n\nexport const GET_TIMEZONE_SUCCESS = \"GET_TIMEZONE_SUCCESS\";\nexport const GET_TIMEZONE_FAIL = \"GET_TIMEZONE_FAIL\";\nexport const GET_CURRENT_TIME_SCUSSESS = \"GET_CURRENT_TIME_SCUSSESS\";\nexport const GET_CURRENT_TIME_FAIL = \"GET_CURRENT_TIME_FAIL\";\n// export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n// export const LOGIN_FAIL = 'LOGIN_FAIL';\n// export const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\n// export const SIGNUP_FAIL = 'SIGNUP_FAIL';\n// export const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\n// export const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\n// export const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\n// export const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\n// export const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\n// export const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\n// export const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\n// export const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\n// export const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\n// export const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\n// export const GOOGLE_AUTH_SUCCESS = 'GOOGLE_AUTH_SUCCESS';\n// export const GOOGLE_AUTH_FAIL = 'GOOGLE_AUTH_FAIL';\n// export const FACEBOOK_AUTH_SUCCESS = 'FACEBOOK_AUTH_SUCCESS';\n// export const FACEBOOK_AUTH_FAIL = 'FACEBOOK_AUTH_FAIL';\n// export const LOGOUT = 'LOGOUT';\n\n// export const PROFILE_CREATED_SUCCESS = 'PROFILE_CREATED_SUCCESS';\n// export const PROFILE_CREATED_FAIL = 'PROFILE_CREATED_FAIL';\n\n// export const PROFILE_LOADED_SUCCESS = 'PROFILE_LOADED_SUCCESS';\n// export const PROFILE_LOADED_FAIL = 'PROFILE_LOADED_FAIL';\n\n// export const PROFILE_UPDATE_SUCCESS = 'PROFILE_UPDATE_SUCCESS';\n// export const PROFILE_UPDATE_FAIL = 'PROFILE_UPDATE_FAIL';\n","/** @format */\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport rootReducer from \"./reducers\";\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({ reducer: persistedReducer,});\n\nexport const persistor = persistStore(store);\n\nexport default store;\n","/** @format */\n\nimport { CREATE_MESSAGE, GET_ERRORS } from \"./types\";\n\n// CREATE MESSAGE\nexport const createMessage = (msg) => {\n\treturn {\n\t\ttype: CREATE_MESSAGE,\n\t\tpayload: msg,\n\t};\n};\n\n// RETURN ERRORS\nexport const returnErrors = (msg, status) => {\n\treturn {\n\t\ttype: GET_ERRORS,\n\t\tpayload: { msg, status },\n\t};\n};\n","/** @format */\n\nimport axios from \"axios\";\n\nimport {\n\tUSER_LOADED,\n\tUSER_LOADING,\n\tAUTH_ERROR,\n\tLOGIN_SUCCESS,\n\tLOGIN_FAIL,\n\tLOGOUT_SUCCESS,\n\tREGISTER_SUCCESS,\n\tREGISTER_FAIL,\n} from \"./types\";\nimport { createMessage, returnErrors } from \"./messages\";\nimport { useSelector } from \"react-redux\";\nimport { reset } from \"../redux/features/tabSlice\";\nimport { resetNewTab } from \"../redux/features/searchTabSlice\";\n\n// CHECK TOKEN & LOAD USER\nexport const loadUser = () => (dispatch, getState) => {\n\t// User Loading\n\tdispatch({ type: USER_LOADING });\n\n\taxios\n\t\t.get(\n\t\t\t`${process.env.REACT_APP_API_URL}/user/auth/user`,\n\t\t\ttokenConfig(getState),\n\t\t)\n\t\t.then((res) => {\n\t\t\tdispatch({\n\t\t\t\ttype: USER_LOADED,\n\t\t\t\tpayload: res.data,\n\t\t\t});\n\t\t})\n\t\t.catch((err) => {\n\t\t\tdispatch(returnErrors(err.response.data.message, err.response.status));\n\t\t\tdispatch({\n\t\t\t\ttype: AUTH_ERROR,\n\t\t\t});\n\t\t});\n};\n\n// LOGIN USER\nexport const login = (username, email, password) => (dispatch) => {\n\t// Headers\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t};\n\n\t// Request Body\n\tconst body = JSON.stringify({ username, password });\n\n\taxios\n\t\t.post(`${process.env.REACT_APP_API_URL}/user/auth/login`, body, config)\n\t\t.then(function(response) {\n\t\t\tconsole.log(response);\n\t\t\tdispatch(createMessage({ LoginSuccess: \"Login Successful\" }));\n\t\t\tdispatch({\n\t\t\t\ttype: LOGIN_SUCCESS,\n\t\t\t\tpayload: response.data,\n\t\t\t});\n\t\t})\n\t\t.catch(function(error) {\n\t\t\tdispatch(returnErrors(error.response.data, error.response.status));\n\t\t\tdispatch({\n\t\t\t\ttype: LOGIN_FAIL,\n\t\t\t});\n\t\t\tconsole.log(error);\n\t\t});\n};\n\n// REGISTER USER\nexport const register = ({ username, email, password }) => (dispatch) => {\n\t// Headers\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t};\n\n\t// Request Body\n\tconst body = JSON.stringify({ username, email, password });\n\n\taxios\n\t\t.post(`${process.env.REACT_APP_API_URL}/user/auth/register`, body, config)\n\t\t.then((res) => {\n\t\t\tdispatch({\n\t\t\t\ttype: REGISTER_SUCCESS,\n\t\t\t\tpayload: res.data,\n\t\t\t});\n\t\t})\n\t\t.catch((err) => {\n\t\t\tdispatch(returnErrors(err.response.data, err.response.status));\n\t\t\tdispatch({\n\t\t\t\ttype: REGISTER_FAIL,\n\t\t\t});\n\t\t});\n};\n\n// LOGOUT USER\nexport const logout = () => (dispatch, getState) => {\n\taxios\n\t\t.post(\n\t\t\t`${process.env.REACT_APP_API_URL}/user/auth/logout`,\n\t\t\tnull,\n\t\t\ttokenConfig(getState),\n\t\t)\n\t\t.then((res) => {\n\t\t\tlocalStorage.removeItem(\"token\");\n\t\t\tdispatch(reset());\n\t\t\tdispatch(resetNewTab());\n\t\t\tdispatch({\n\t\t\t\ttype: LOGOUT_SUCCESS,\n\t\t\t});\n\t\t});\n};\n\n// Setup config with token - helper function\nexport const tokenConfig = (getState) => {\n\t// const token = useSelector((state) => state.auth.token);\n\t// Get token from state\n\tconst token = getState().auth.token;\n\n\t// Headers\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t};\n\n\t// If token, add to headers config\n\tif (token) {\n\t\tconfig.headers[\"Authorization\"] = `Token ${token}`;\n\t}\n\n\treturn config;\n};\n","/** @format */\n\nimport { useState, useCallback } from \"react\";\n\nexport const useToggle = (initialState) => {\n  const [isToggled, setIsToggled] = useState(initialState);\n\n  // put [setIsToggled] into the useCallback's dependencies array\n  // this value never changes so the callback is not going to be ever re-created\n  const toggle = useCallback(\n    () => setIsToggled((state) => !state),\n    [setIsToggled],\n  );\n\n  return [isToggled, toggle];\n};\n","/** @format */\n\n// import * as React from 'react';\nimport { styled } from \"@mui/material/styles\";\nimport { Link } from \"react-router-dom\";\nimport { Button, InputBase } from \"@mui/material\";\n\nexport const SideBarBtn = styled(Button)(({ theme }) => ({\n  fontSize: \"0.6em\",\n  textTransform: \"none\",\n  // color: theme.palette.primary.main,\n  color: \"#eee\",\n  textAlign: \"center\",\n  width: \"8em\",\n  height: \"8em\",\n  margin: \"0.7em\",\n  borderColor: \"#eee\",\n  padding: \"1em\",\n  \"&:hover\": {\n    backgroundColor: \"white\",\n    color: theme.palette.primary.main,\n  },\n  \"&:visited\": {\n    color: theme.palette.primary.main,\n  },\n}));\n\nexport const SecNavbar = styled(\"nav\")(({ theme }) => ({\n  boxShadow: \"none\",\n  backgroundColor: theme.palette.primary.main,\n  overflow: \"hidden\",\n  color: \"#eee\",\n  position: \"reletive\",\n  padding: \"0\",\n  margin: \"0\",\n  height: \"3.5rem\",\n  width: \"100%\",\n}));\n\nexport const FooterBar = styled(\"footer\")(({ theme }) => ({\n  boxShadow: \"none\",\n  backgroundColor: theme.palette.primary.main,\n  color: \"#eee\",\n  position: \"fixed\",\n  bottom: \"0\",\n  left: \"0\",\n\n  margin: \"0\",\n  height: \"2.5rem\",\n  textAlign: \"center\",\n  alignContent: \"center\",\n  width: \"100%\",\n}));\n\nexport const FooterLink = styled(Link)(({ theme }) => ({\n  color: \"#eee\",\n  fontFamily: \"Roboto\",\n  fontSize: \"1rem\",\n  textTransform: \"uppercase\",\n  fontWeight: 500,\n  textDecoration: \"none\",\n  marginTop: \"0.7rem\",\n  padding: \" 2rem\",\n  \"&:visited\": {\n    color: \"#eee\",\n  },\n}));\nexport const FooterButton = styled(Button)(({ theme }) => ({\n  color: \"#eee\",\n  fontFamily: \"Roboto\",\n  textTransform: \"uppercase\",\n  textDecoration: \"none\",\n  fontSize: \"1rem\",\n  fontWeight: 500,\n  marginX: \"2rem\",\n  paddingX: \"3rem\",\n  \"&:visited\": {\n    color: \"#eee\",\n  },\n}));\n\nexport const LinkButton = styled(Link)(({ theme }) => ({\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  textDecoration: \"none\",\n  margin: \"0.7em\",\n  backgroundColor: theme.palette.primary.main,\n  borderColor: \"#2979ff\",\n  color: \"white\",\n  padding: \"0.65rem 1.2rem\",\n  borderRadius: \"0.5rem\",\n  \"&:hover\": {\n    backgroundColor: \"#1c54b2\",\n    cursor: \"pointer\",\n    color: \"white\",\n  },\n}));\n\nexport const Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: \"1.5rem\",\n  backgroundColor: \"#eee\",\n  \"&:hover\": {\n    backgroundColor: \"#ddd\",\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: \"40%\",\n}));\n\nexport const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\nexport const MainSearch = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: \"1.5rem\",\n  backgroundColor: \"#eee\",\n  \"&:hover\": {\n    backgroundColor: \"#eee\",\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: \"100%\",\n  [theme.breakpoints.up(\"sm\")]: {\n    marginLeft: theme.spacing(3),\n    width: \"auto\",\n  },\n}));\n\nexport const MainSearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nexport const StyledMainInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\n\n","/** @format */\n\n/** @format */ // import axios from \"axios\";\n\nimport { GET_IS_WEEKLY, MONTLY_REVENUE, WEEKLY_REVENUE } from \"./types\";\n// GET LEADS\nexport const updateIsWeekly = (data) => (dispatch) => {\n  if (data) {\n    dispatch({\n      type: WEEKLY_REVENUE,\n      payload: data,\n    });\n  } else {\n    dispatch({\n      type: MONTLY_REVENUE,\n    });\n  }\n};\n\nexport const getIsWeekly = () => (dispatch) =>\n  dispatch({\n    type: GET_IS_WEEKLY,\n    // payload: this.state,\n  });\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport NumberFormat from \"react-number-format\";\nimport { useToggle } from \"../../context/useToggle\";\n\n// styling imports\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  Typography,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Switch,\n  ListSubheader,\n  TextField,\n} from \"@mui/material\";\nimport {\n  MainSearch,\n  MainSearchIconWrapper,\n  StyledMainInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport Logo from \"../../asserts/logo_white copy.png\";\nimport { updateIsWeekly } from \"../../actions/data\";\nimport {\n  IconButton,\n  Drawer,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\n\nconst NavbarResponsive = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const isWeekly = useSelector((state) => state.data.isWeekly);\n  const user = useSelector((state) => state.auth.user);\n\n  const dispatch = useDispatch();\n\n  let timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  const [today, setToday] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [dateValue, setDateValue] = useState([null, null]);\n\n  const timeFormater = () => {\n    if (checked) {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n      });\n    } else {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: false,\n      });\n    }\n  };\n  const [isChecked, setIsChecked] = useToggle(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n  const openSetting = Boolean(settingAcnchorEl);\n\n  const [redirect, setRedirect] = useState(false);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleOnChage = (e) => {\n    dispatch(updateIsWeekly(e.target.value));\n  };\n\n  const logout_user = () => {\n    dispatch(logout());\n    setRedirect(true);\n  };\n\n  const guestLinks = () => (\n    <Fragment>\n      <Button component={Link} color=\"inherit\" to=\"/login\">\n        Login{\" \"}\n      </Button>\n      <Button component={Link} color=\"inherit\" to=\"/signup\">\n        Sign Up\n      </Button>\n    </Fragment>\n  );\n\n  const authLinks = () => (\n    <Fragment>\n      <Typography variant=\"h5\" component=\"h5\">\n        <Typography\n          component=\"span\"\n          variant=\"h5\"\n          color=\"primary\"\n          style={{ marginRight: \"0.5rem\" }}\n        >\n          Expected Balance :\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">\n              Expected Balance\n            </InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={isWeekly}\n              label=\"Expected Balance\"\n              onChange={handleOnChage}\n            >\n              <MenuItem value=\"daily\">Daily</MenuItem>\n              <MenuItem value=\"weekly\">Weekly</MenuItem>\n              <MenuItem value=\"monthly\">Monthly</MenuItem>\n              <MenuItem value=\"quarterly\">Quarterly</MenuItem>\n              <MenuItem value=\"yearly\">Yearly</MenuItem>\n\n              <MenuItem value=\"range\">Custom Range</MenuItem>\n              {isWeekly === \"range\" ? (\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              ) : null}\n            </Select>\n          </FormControl>\n        </Typography>\n        <NumberFormat\n          value={isWeekly ? 3254 : 32564}\n          displayType={\"text\"}\n          thousandSeparator={true}\n          prefix=\"$\"\n        />\n      </Typography>\n\n      <Typography variant=\"h5\" component=\"h5\" ml={1} mr={1}>\n        {\" \"}\n        |{\" \"}\n      </Typography>\n      <Typography variant=\"h5\" component=\"h5\">\n        {timeFormater()}\n        <Switch\n          size=\"small\"\n          \n          checked={checked}\n          onChange={handleChange}\n          inputProps={{ \"aria-label\": \"controlled\" }}\n          sx={{ transform: \"rotate(90deg)\" }}\n        />\n      </Typography>\n    </Fragment>\n  );\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <Fragment>\n      <Typography noWrap component=\"div\" sx={{ display: \"block\" }}>\n        <Link to=\"/\">\n          <img\n            src={Logo}\n            alt=\"logo\"\n            style={{ height: \"2rem\", width: \"auto\" }}\n          />\n        </Link>\n      </Typography>\n      {isAuthenticated ? (\n        <>\n          <Typography variant=\"h5\" component=\"h5\" sx={{ marginLeft: \"1rem\" }}>\n            {timeFormater()}\n            <Switch\n              size=\"small\"\n              \n              checked={checked}\n              onChange={handleChange}\n              inputProps={{ \"aria-label\": \"controlled\" }}\n              sx={{ transform: \"rotate(90deg)\" }}\n            />\n          </Typography>\n          <IconButton\n            sx={{ color: \"#7a4ebf\", float: \"right\" }}\n            onClick={() => setOpenDrawer(!openDrawer)}\n          >\n            <MenuIcon color=\"#7a4ebf\" />\n          </IconButton>\n        </>\n      ) : (\n        guestLinks()\n      )}\n\n      <Drawer\n        anchor=\"right\"\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n      >\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <MainSearch>\n                <MainSearchIconWrapper>\n                  <SearchIcon />\n                </MainSearchIconWrapper>\n                <StyledMainInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </MainSearch>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <Typography variant=\"h5\" component=\"h5\">\n                <Typography\n                  component=\"span\"\n                  variant=\"h5\"\n                  color=\"primary\"\n                  style={{ marginRight: \"0.5rem\" }}\n                >\n                  Set Interval :\n                  <Select\n                    size=\"small\"\n                    sx={{ marginX: \"1rem\" }}\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={isWeekly}\n                    label=\"Expected Balance\"\n                    onChange={handleOnChage}\n                  >\n                    <MenuItem value=\"daily\">Daily</MenuItem>\n                    <MenuItem value=\"weekly\">Weekly</MenuItem>\n                    <MenuItem value=\"monthly\">Monthly</MenuItem>\n                    <MenuItem value=\"quarterly\">Quarterly</MenuItem>\n                    <MenuItem value=\"yearly\">Yearly</MenuItem>\n\n                    <MenuItem value=\"range\">Custom Range</MenuItem>\n                    {isWeekly === \"range\" ? (\n                      <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <DateRangePicker\n                          startText=\"Start Date\"\n                          endText=\"End Date\"\n                          value={dateValue}\n                          onChange={(newValue) => {\n                            setDateValue(newValue);\n                          }}\n                          renderInput={(startProps, endProps) => (\n                            <Fragment>\n                              <TextField {...startProps} />\n                              <Box sx={{ mx: 2 }}> to </Box>\n                              <TextField {...endProps} />\n                            </Fragment>\n                          )}\n                        />\n                      </LocalizationProvider>\n                    ) : null}\n                  </Select>\n                </Typography>\n              </Typography>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              {\" \"}\n              <Typography variant=\"h5\" component=\"h5\">\n                Expected Balance :{\" \"}\n                <NumberFormat\n                  value={isWeekly ? 3254 : 32564}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon></ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon></ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <MainSearch>\n                <MainSearchIconWrapper>\n                  <SearchIcon />\n                </MainSearchIconWrapper>\n                <StyledMainInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </MainSearch>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n      </Drawer>\n    </Fragment>\n  );\n};\n\nexport default NavbarResponsive;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport NumberFormat from \"react-number-format\";\nimport { useToggle } from \"../../context/useToggle\";\n\n// styling imports\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  Typography,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Switch,\n  ListSubheader,\n  TextField,\n} from \"@mui/material\";\nimport {\n  MainSearch,\n  MainSearchIconWrapper,\n  StyledMainInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport Logo from \"../../asserts/logo_white copy.png\";\nimport { updateIsWeekly } from \"../../actions/data\";\nimport { useMediaQuery } from \"react-responsive\";\nimport NavbarResponsive from \"./NavbarResponsive\";\n\nconst Navbar = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const isWeekly = useSelector((state) => state.data.isWeekly);\n  const user = useSelector((state) => state.auth.user);\n\n  const dispatch = useDispatch();\n\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n  let timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  const [today, setToday] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [dateValue, setDateValue] = useState([null, null]);\n\n  const timeFormater = () => {\n    if (checked) {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n      });\n    } else {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: false,\n      });\n    }\n  };\n  const [isChecked, setIsChecked] = useToggle(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n  const openSetting = Boolean(settingAcnchorEl);\n\n  const [redirect, setRedirect] = useState(false);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleOnChage = (e) => {\n    dispatch(updateIsWeekly(e.target.value));\n  };\n\n  const logout_user = () => {\n    dispatch(logout());\n    setRedirect(true);\n  };\n\n  const guestLinks = () => (\n    <Fragment>\n      <Button component={Link} color=\"inherit\" to=\"/login\">\n        Login{\" \"}\n      </Button>\n      <Button component={Link} color=\"inherit\" to=\"/signup\">\n        Sign Up\n      </Button>\n    </Fragment>\n  );\n\n  const authLinks = () => (\n    <Fragment>\n      <Typography variant=\"h5\" component=\"h5\">\n        <Typography\n          component=\"span\"\n          variant=\"h5\"\n          color=\"primary\"\n          style={{ marginRight: \"0.8rem\" }}\n        >\n          Expected Balance :\n          <Select\n            sx={{ marginX: \"1rem\" }}\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={isWeekly}\n            label=\"Expected Balance\"\n            onChange={handleOnChage}\n          >\n            <MenuItem value=\"daily\">Daily</MenuItem>\n            <MenuItem value=\"weekly\">Weekly</MenuItem>\n            <MenuItem value=\"monthly\">Monthly</MenuItem>\n            <MenuItem value=\"quarterly\">Quarterly</MenuItem>\n            <MenuItem value=\"yearly\">Yearly</MenuItem>\n\n            <MenuItem value=\"range\">Custom Range</MenuItem>\n            {isWeekly === \"range\" ? (\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DateRangePicker\n                  startText=\"Start Date\"\n                  endText=\"End Date\"\n                  value={dateValue}\n                  onChange={(newValue) => {\n                    setDateValue(newValue);\n                  }}\n                  renderInput={(startProps, endProps) => (\n                    <Fragment>\n                      <TextField {...startProps} />\n                      <Box sx={{ mx: 2 }}> to </Box>\n                      <TextField {...endProps} />\n                    </Fragment>\n                  )}\n                />\n              </LocalizationProvider>\n            ) : null}\n          </Select>\n        </Typography>\n        <NumberFormat\n          value={isWeekly ? 3254 : 32564}\n          displayType={\"text\"}\n          thousandSeparator={true}\n          prefix=\"$\"\n        />\n      </Typography>\n\n      <Typography variant=\"h5\" component=\"h5\" ml={1} mr={1}>\n        {\" \"}\n        |{\" \"}\n      </Typography>\n      <Typography variant=\"h5\" component=\"h5\">\n        {timeFormater()}\n        <Switch\n          size=\"small\"\n          \n          checked={checked}\n          onChange={handleChange}\n          inputProps={{ \"aria-label\": \"controlled\" }}\n          sx={{ transform: \"rotate(90deg)\" }}\n        />\n      </Typography>\n    </Fragment>\n  );\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <Fragment>\n      <Box sx={{ flexGrow: 1, backgroundColor: \"white\" }} component=\"nav\">\n        <AppBar position=\"static\" color=\"transparent\" sx={{ border: \"none\" }}>\n          <Toolbar>\n            {isTabletOrMobile ? (\n              <>\n                <NavbarResponsive />\n              </>\n            ) : (\n              <>\n                <Typography\n                  noWrap\n                  component=\"div\"\n                  sx={{ display: { xs: \"none\", sm: \"block\" } }}\n                >\n                  <Link to=\"/\">\n                    <img\n                      src={Logo}\n                      alt=\"logo\"\n                      style={{ height: \"2rem\", width: \"auto\" }}\n                    />\n                  </Link>\n                </Typography>\n                <MainSearch>\n                  <MainSearchIconWrapper>\n                    <SearchIcon />\n                  </MainSearchIconWrapper>\n                  <StyledMainInputBase\n                    placeholder=\"Search…\"\n                    inputProps={{ \"aria-label\": \"search\" }}\n                  />\n                </MainSearch>\n                <Box sx={{ flexGrow: 1 }} />\n                <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\n                  {isAuthenticated ? authLinks() : guestLinks()}\n                </Box>\n              </>\n            )}\n          </Toolbar>\n        </AppBar>\n      </Box>\n      {redirect ? <Redirect to=\"/\" /> : <Fragment></Fragment>}\n    </Fragment>\n  );\n};\n\nexport default Navbar;\n","/** @format */\n\nimport { Box, Typography, Button, TextField, Chip } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport React, { Fragment } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\n\nconst ChatHistory = () => {\n  return (\n    <Typography>\n      <Box\n        p={2}\n        sx={{\n          border: \"1px solid lightgray\",\n          borderRadius: \"1rem\",\n        }}\n      >\n        <Chip\n          label=\"Hi\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          size=\"large\"\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip label=\"Hello\" variant=\"outlined\" avatar={<Avatar>M</Avatar>} />\n        <br />\n        <Chip\n          label=\"Message by M\"\n          variant=\"outlined\"\n          avatar={<Avatar>M</Avatar>}\n          sx={{\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip\n          label=\"Message by D\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip\n          label=\"this is just a ui design\"\n          variant=\"outlined\"\n          avatar={<Avatar>M</Avatar>}\n          sx={{ marginTop: \"1rem\" }}\n        />\n        <br />\n        <Chip\n          label=\"the chat feature is not working at backend\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n\n        <br />\n      </Box>\n    </Typography>\n  );\n};\n\nconst Chatting = () => {\n  return (\n    <Fragment>\n      <ChatHistory />\n      <br />\n      <Box\n        component=\"form\"\n        sx={{\n          //   border: \"1px solid lightgray\",\n          //   borderRadius: \"1rem\",\n          \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n        }}\n      >\n        <TextField type=\"text\" size=\"small\" variant=\"outlined\" />\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          endIcon={<SendIcon />}\n          type=\"submit\"\n          sx={{\n            m: 1,\n          }}\n        >\n          Send\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Chatting;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport isWeekend from \"date-fns/isWeekend\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { StaticDatePicker } from \"@mui/x-date-pickers/StaticDatePicker\";\nimport { TextField, Box, Paper, Grid } from \"@mui/material\";\n\nconst Calender = () => {\n  const [value, setValue] = useState(new Date());\n  const [tasks, setTasks] = useState([]);\n\n  return (\n    <Box component={Paper} m={2}>\n      <Grid container>\n        {\" \"}\n        <Grid item lg={6} xs={12}>\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <StaticDatePicker\n              orientation=\"landscape\"\n              openTo=\"day\"\n              value={value}\n              shouldDisableDate={isWeekend}\n              onChange={(newValue) => {\n                setValue(newValue);\n              }}\n              renderInput={(params) => <TextField {...params} />}\n            />\n          </LocalizationProvider>\n        </Grid>{\" \"}\n        <Grid item lg={6} xs={12}>\n          {tasks.length !== 0 ? (\n            tasks.map((task) => (\n              <li>\n                {task.id} - {task.name}\n              </li>\n            ))\n          ) : (\n            <h4> No record found</h4>\n          )}\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Calender;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\n\nimport { Star } from \"@mui/icons-material\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Favorites = () => {\n  const favList = useSelector((state) => state.favorite.favorite);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <List>\n        <ListItem disablePadding>\n          <ListItemButton>\n            <ListItemIcon>\n              <Star sx={{ color: \"orange\" }} />\n            </ListItemIcon>\n          </ListItemButton>\n          <ListItemText primary=\"Favorite 1\" />\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nexport default Favorites;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport Chatting from \"../Chat/Chat\";\n\n// styling imports\nimport {\n  \n  IconButton,\n  Menu,\n  MenuItem,\n  Fade,\n  Divider,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n\n  DialogActions,\n  Button,\n} from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\n\n\nimport {\n  Message,\n  EmailRounded,\n  CalendarToday,\n  CheckBox,\n\n  NotificationAdd,\n  Settings,\n  Star,\n\n} from \"@mui/icons-material/\";\nimport { useToggle } from \"../../context/useToggle\";\nimport Calender from \"../Dashboard/Calender\";\n\nimport Favorites from \"../Favorite/Favorites\";\n\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport { useMediaQuery } from \"react-responsive\";\nimport {\n  Drawer,\n  List,\n  ListItemButton,\n  ListItemIcon,\n\n} from \"@mui/material\";\n\nexport const NavBarSecResponsive = () => {\n\n  const user = useSelector((state) => state.auth.user);\n\n  const dispatch = useDispatch();\n\n  const [openFav, setOpenFav] = useState(false);\n\n  const handleClickOpenFav = () => {\n    setOpenFav(true);\n  };\n\n  const handleCloseFav = () => {\n    setOpenFav(false);\n  };\n  const [openCal, setOpenCal] = useState(false);\n\n  const handleClickOpenCal = () => {\n    setOpenCal(true);\n  };\n\n  const handleCloseCal = () => {\n    setOpenCal(false);\n  };\n\n  const [openChat, setOpenChat] = useState(false);\n\n  const handleClickOpenChat = () => {\n    setOpenChat(true);\n  };\n\n  const handleCloseChat = () => {\n    setOpenChat(false);\n  };\n\n  const [localuser, setLocalUser] = useState({\n    username: \"Admin\",\n    is_firm: false,\n    is_lawyer: false,\n    is_client: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n  const [redirect, setRedirect] = useState(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const [settingAcnchorEl2, setSettingAcnchorEl2] = useState(null);\n\n\n\n  const handleLogout = () => {\n    console.log(\"logout button just clicked\");\n    dispatch(logout());\n    setRedirect(true);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const openSetting2 = Boolean(settingAcnchorEl2);\n\n  const handleClick2 = (event) => {\n    setSettingAcnchorEl2(event.currentTarget);\n  };\n  const openSetting = Boolean(settingAcnchorEl);\n  const handleClose2 = () => {\n    setSettingAcnchorEl2(null);\n  };\n\n  const handleClick = (event) => {\n    setSettingAcnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setSettingAcnchorEl(null);\n  };\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <Fragment>\n      <IconButton\n        sx={{ color: \"white\" }}\n        onClick={() => setOpenDrawer(!openDrawer)}\n      >\n        <MenuIcon color=\"white\" />\n      </IconButton>\n      <Drawer\n        anchor=\"left\"\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n      >\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                className=\"nav-items\"\n                size=\"large\"\n                onClick={handleClickOpenChat}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"#fff\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"left\",\n                }}\n              >\n                <Message />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Dialog\n          className=\"nav-items\"\n          Validate\n          open={openChat}\n          onClose={handleCloseChat}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          sx={{\n            position: \"absolute\",\n            right: \"20px\",\n            bottom: \"150px\",\n          }}\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Chatting Application\"}\n          </DialogTitle>\n          <DialogContent>\n            <Chatting />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseChat}>Close</Button>\n          </DialogActions>\n        </Dialog>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                size=\"large\"\n                className=\"nav-items\"\n                component={Link}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n                to={{\n                  pathname:\n                    \"https://mail.google.com/mail/?view=cm&fs=1&tf=1&to=someone@gmail.com\",\n                }}\n                target=\"_blank\"\n              >\n                <EmailRounded />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                size=\"large\"\n                className=\"nav-items\"\n                onClick={handleClickOpenCal}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n              >\n                <CalendarToday />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Dialog\n          Validate\n          open={openCal}\n          maxWidth=\"lg\"\n          fullWidth\n          onClose={handleCloseCal}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          sx={{\n            position: \"absolute\",\n            right: \"20px\",\n            bottom: \"150px\",\n          }}\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Calender\"}</DialogTitle>\n          <DialogContent>\n            <Calender />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseCal}>Close</Button>\n          </DialogActions>\n        </Dialog>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                aria-label=\"more\"\n                className=\"nav-items\"\n                id=\"long-button\"\n                aria-controls=\"long-menu\"\n                aria-expanded={openSetting2 ? \"true\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClick2}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n              >\n                <CheckBox />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Menu\n          id=\"fade-menu\"\n          MenuListProps={{\n            \"aria-labelledby\": \"fade-button\",\n          }}\n          className=\"nav-items\"\n          anchorEl={settingAcnchorEl2}\n          open={openSetting2}\n          onClose={handleClose2}\n          TransitionComponent={Fade}\n        >\n          <MenuItem onClick={handleClose2}>Task 1: This is task one</MenuItem>\n          <MenuItem onClick={handleClose2}>Task 2: This is task two</MenuItem>\n          <MenuItem onClick={handleClose2}>Task 3: This is task three</MenuItem>\n          <Divider sx={{ my: 0.5 }} />\n          <MenuItem onClick={handleClose2}>Task 4: This is task four</MenuItem>\n        </Menu>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                aria-label=\"more\"\n                id=\"long-button\"\n                aria-controls=\"long-menu\"\n                className=\"nav-items\"\n                aria-expanded={openSetting2 ? \"true\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClickOpenFav}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n              >\n                <Star />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Dialog\n          open={openFav}\n          onClose={handleCloseFav}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Favorites\"}</DialogTitle>\n          <DialogContent>\n            <Favorites />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseFav} autoFocus>\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <Menu\n                id=\"basic-menu\"\n                anchorEl={anchorEl}\n                className=\"nav-items\"\n                open={open}\n                onClose={handleClose}\n                MenuListProps={{\n                  \"aria-labelledby\": \"basic-button\",\n                }}\n              >\n                <MenuItem component={Link} to=\"/profile\">\n                  Profile\n                </MenuItem>\n                {/* <MenuItem component={Link} to=''>My account</MenuItem> */}\n              </Menu>\n              <IconButton\n                aria-label=\"more\"\n                id=\"long-button\"\n                aria-controls=\"long-menu\"\n                aria-expanded={openSetting ? \"true\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n                sx={{\n                  color: \"#7a4ebf\",\n                }}\n              >\n                <Settings />\n              </IconButton>\n              <Menu\n                id=\"fade-menu\"\n                MenuListProps={{\n                  \"aria-labelledby\": \"fade-button\",\n                }}\n                anchorEl={settingAcnchorEl}\n                open={openSetting}\n                onClose={handleClose}\n                TransitionComponent={Fade}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>Account</MenuItem>\n                <MenuItem onClick={handleClose}>Setting</MenuItem>\n                <Divider sx={{ my: 0.5 }} />\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n              </Menu>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n      </Drawer>\n\n      <NotificationAdd mr={2} />\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { signOut, reset } from \"../../redux/features/authSlice\";\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n// import { logout } from \"../../actions/auth\";\nimport Chatting from \"../Chat/Chat\";\n\n// styling imports\nimport {\n\tBox,\n\tToolbar,\n\tTypography,\n\tIconButton,\n\tMenu,\n\tMenuItem,\n\tFade,\n\tDivider,\n\tDialog,\n\tDialogTitle,\n\tDialogContent,\n\n\tDialogActions,\n\tButton,\n} from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { SecNavbar } from \"../../styles/styles\";\n\nimport {\n\tMessage,\n\tEmailRounded,\n\tCalendarToday,\n\tCheckBox,\n\tPerson,\n\tNotificationAdd,\n\tSettings,\n\tStar,\n\n} from \"@mui/icons-material/\";\nimport { useToggle } from \"../../context/useToggle\";\nimport Calender from \"../Dashboard/Calender\";\n\nimport Favorites from \"../Favorite/Favorites\";\n\n\nimport { useMediaQuery } from \"react-responsive\";\n\nimport { NavBarSecResponsive } from \"./DrawerComp\";\n\nconst NavbarSec = () => {\tconst { user } = useSelector((state) => state.auth.user);\n\n\n\t\n\tconst isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n\n\tconst dispatch = useDispatch();\n\n\tconst [openFav, setOpenFav] = useState(false);\n\n\tconst handleClickOpenFav = () => {\n\t\tsetOpenFav(true);\n\t};\n\n\tconst handleCloseFav = () => {\n\t\tsetOpenFav(false);\n\t};\n\tconst [openTask, setOpenTask] = useState(false);\n\n\n\n\n\tconst [openCal, setOpenCal] = useState(false);\n\n\tconst handleClickOpenCal = () => {\n\t\tsetOpenCal(true);\n\t};\n\n\tconst handleCloseCal = () => {\n\t\tsetOpenCal(false);\n\t};\n\n\tconst [openChat, setOpenChat] = useState(false);\n\n\tconst handleClickOpenChat = () => {\n\t\tsetOpenChat(true);\n\t};\n\n\tconst handleCloseChat = () => {\n\t\tsetOpenChat(false);\n\t};\n\n\tconst [localuser, setLocalUser] = useState({\n\t\tusername: \"Admin\",\n\t\tis_firm: false,\n\t\tis_lawyer: false,\n\t\tis_client: false,\n\t});\n\n\tuseEffect(() => {\n\t\tif (user) {\n\t\t\tsetLocalUser({\n\t\t\t\tusername: user.username,\n\t\t\t\tis_firm: user.is_firm,\n\t\t\t\tis_lawyer: user.is_lawyer,\n\t\t\t\tis_client: user.is_client,\n\t\t\t});\n\t\t}\n\t}, [user]);\n\tconst [redirect, setRedirect] = useState(false);\n\n\tconst [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\n\n\tconst [settingAcnchorEl2, setSettingAcnchorEl2] = useState(null);\n\n\tconst [anchorEl2, setAnchorEl2] = React.useState(null);\n\n\tconst handleLogout = () => {\n\t\tconsole.log(\"logout button just clicked\");\n\t\tdispatch(signOut());\n\t\tdispatch(reset());\n\t\tsetRedirect(true);\n\t};\n\n\tconst open = Boolean(anchorEl);\n\tconst open2 = Boolean(anchorEl);\n\n\tconst userRoleChecker = () => {\n\t\tswitch (user.username) {\n\t\t\tcase \"admin\":\n\t\t\t\treturn \"Admin\";\n\t\t\tcase \"firm\":\n\t\t\t\treturn \"Firm\";\n\t\t\tcase \"lawyer\":\n\t\t\t\treturn \"Lawyer\";\n\t\t\tdefault:\n\t\t\t\treturn \"Client\";\n\t\t}\n\t};\n\n\tconst openSetting2 = Boolean(settingAcnchorEl2);\n\n\tconst handleClick2 = (event) => {\n\t\tsetSettingAcnchorEl2(event.currentTarget);\n\t};\n\tconst openSetting = Boolean(settingAcnchorEl);\n\tconst handleClose2 = () => {\n\t\tsetSettingAcnchorEl2(null);\n\t};\n\n\tconst handleClick = (event) => {\n\t\tsetSettingAcnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetSettingAcnchorEl(null);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<SecNavbar>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t{isTabletOrMobile ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<NavBarSecResponsive />\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Box component='div' sx={{ flexGrow: 1 }}>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\tonClick={handleClickOpenChat}\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\"fontSize\": \"2rem\",\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#eee\",\n\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"#fff\",\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#7a4ebf\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tanchorOrigin={{\n\t\t\t\t\t\t\t\t\t\tvertical: \"top\",\n\t\t\t\t\t\t\t\t\t\thorizontal: \"left\",\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<Message />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<Dialog\n\t\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\t\tValidate\n\t\t\t\t\t\t\t\t\topen={openChat}\n\t\t\t\t\t\t\t\t\tonClose={handleCloseChat}\n\t\t\t\t\t\t\t\t\taria-labelledby='alert-dialog-title'\n\t\t\t\t\t\t\t\t\taria-describedby='alert-dialog-description'\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\t\t\t\tright: \"20px\",\n\t\t\t\t\t\t\t\t\t\tbottom: \"150px\",\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<DialogTitle id='alert-dialog-title'>\n\t\t\t\t\t\t\t\t\t\t{\"Chatting Application\"}\n\t\t\t\t\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t\t\t<Chatting />\n\t\t\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t\t\t<Button onClick={handleCloseChat}>Close</Button>\n\t\t\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t\t\t</Dialog>\n\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\"fontSize\": \"2rem\",\n\t\t\t\t\t\t\t\t\t\t\"color\": \"white\",\n\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#7a4ebf\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\t\t\t\tpathname:\n\t\t\t\t\t\t\t\t\t\t\t\"https://mail.google.com/mail/?view=cm&fs=1&tf=1&to=someone@gmail.com\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\ttarget='_blank'>\n\t\t\t\t\t\t\t\t\t<EmailRounded />\n\t\t\t\t\t\t\t\t</IconButton>\n\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\t\tonClick={handleClickOpenCal}\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\"fontSize\": \"2rem\",\n\t\t\t\t\t\t\t\t\t\t\"color\": \"white\",\n\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#7a4ebf\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<CalendarToday />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<Dialog\n\t\t\t\t\t\t\t\t\tValidate\n\t\t\t\t\t\t\t\t\topen={openCal}\n\t\t\t\t\t\t\t\t\tmaxWidth='lg'\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tonClose={handleCloseCal}\n\t\t\t\t\t\t\t\t\taria-labelledby='alert-dialog-title'\n\t\t\t\t\t\t\t\t\taria-describedby='alert-dialog-description'\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\t\t\t\tright: \"20px\",\n\t\t\t\t\t\t\t\t\t\tbottom: \"150px\",\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<DialogTitle id='alert-dialog-title'>\n\t\t\t\t\t\t\t\t\t\t{\"Calender\"}\n\t\t\t\t\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t\t\t<Calender />\n\t\t\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t\t\t<Button onClick={handleCloseCal}>Close</Button>\n\t\t\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\taria-label='more'\n\t\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\t\tid='long-button'\n\t\t\t\t\t\t\t\t\taria-controls='long-menu'\n\t\t\t\t\t\t\t\t\taria-expanded={openSetting2 ? \"true\" : undefined}\n\t\t\t\t\t\t\t\t\taria-haspopup='true'\n\t\t\t\t\t\t\t\t\tonClick={handleClick2}\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\"fontSize\": \"2rem\",\n\t\t\t\t\t\t\t\t\t\t\"color\": \"white\",\n\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#7a4ebf\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<CheckBox />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\t\t\tid='fade-menu'\n\t\t\t\t\t\t\t\t\tMenuListProps={{\n\t\t\t\t\t\t\t\t\t\t\"aria-labelledby\": \"fade-button\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\t\tanchorEl={settingAcnchorEl2}\n\t\t\t\t\t\t\t\t\topen={openSetting2}\n\t\t\t\t\t\t\t\t\tonClose={handleClose2}\n\t\t\t\t\t\t\t\t\tTransitionComponent={Fade}>\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose2}>\n\t\t\t\t\t\t\t\t\t\tTask 1: This is task one\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose2}>\n\t\t\t\t\t\t\t\t\t\tTask 2: This is task two\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose2}>\n\t\t\t\t\t\t\t\t\t\tTask 3: This is task three\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t<Divider sx={{ my: 0.5 }} />\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose2}>\n\t\t\t\t\t\t\t\t\t\tTask 4: This is task four\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\taria-label='more'\n\t\t\t\t\t\t\t\t\tid='long-button'\n\t\t\t\t\t\t\t\t\taria-controls='long-menu'\n\t\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\t\taria-expanded={openSetting2 ? \"true\" : undefined}\n\t\t\t\t\t\t\t\t\taria-haspopup='true'\n\t\t\t\t\t\t\t\t\tonClick={handleClickOpenFav}\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\"fontSize\": \"2rem\",\n\t\t\t\t\t\t\t\t\t\t\"color\": \"white\",\n\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#7a4ebf\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<Star />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<Dialog\n\t\t\t\t\t\t\t\t\topen={openFav}\n\t\t\t\t\t\t\t\t\tonClose={handleCloseFav}\n\t\t\t\t\t\t\t\t\taria-labelledby='alert-dialog-title'\n\t\t\t\t\t\t\t\t\taria-describedby='alert-dialog-description'>\n\t\t\t\t\t\t\t\t\t<DialogTitle id='alert-dialog-title'>\n\t\t\t\t\t\t\t\t\t\t{\"Favorites\"}\n\t\t\t\t\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t\t\t<Favorites />\n\t\t\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t\t\t<Button onClick={handleCloseFav} autoFocus>\n\t\t\t\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<NotificationAdd mr={2} />\n\t\t\t\t\t\t\t<Typography component='h5' variant='h6' ml={2} mr={2}>\n\t\t\t\t\t\t\t\t|\n\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\t\t\taria-controls='basic-menu'\n\t\t\t\t\t\t\t\taria-haspopup='true'\n\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\taria-expanded={open ? \"true\" : undefined}\n\t\t\t\t\t\t\t\tonClick={handleClick}>\n\t\t\t\t\t\t\t\t<Person /> {user.username} - ({user.username} )\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\tonClick={handleLogout}>\n\t\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\t\tid='basic-menu'\n\t\t\t\t\t\t\t\tanchorEl={anchorEl}\n\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\topen={open}\n\t\t\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t\t\t\tMenuListProps={{\n\t\t\t\t\t\t\t\t\t\"aria-labelledby\": \"basic-button\",\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<MenuItem component={Link} to='/profile'>\n\t\t\t\t\t\t\t\t\tProfile\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t{/* <MenuItem component={Link} to=''>My account</MenuItem> */}\n\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\taria-label='more'\n\t\t\t\t\t\t\t\tid='long-button'\n\t\t\t\t\t\t\t\taria-controls='long-menu'\n\t\t\t\t\t\t\t\taria-expanded={openSetting ? \"true\" : undefined}\n\t\t\t\t\t\t\t\taria-haspopup='true'\n\t\t\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<Settings />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\t\tid='fade-menu'\n\t\t\t\t\t\t\t\tMenuListProps={{\n\t\t\t\t\t\t\t\t\t\"aria-labelledby\": \"fade-button\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tanchorEl={settingAcnchorEl}\n\t\t\t\t\t\t\t\topen={openSetting}\n\t\t\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t\t\t\tTransitionComponent={Fade}>\n\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose}>Profile</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose}>Account</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose}>Setting</MenuItem>\n\t\t\t\t\t\t\t\t<Divider sx={{ my: 0.5 }} />\n\t\t\t\t\t\t\t\t<MenuItem onClick={handleLogout}>Logout</MenuItem>\n\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</Toolbar>\n\t\t\t</SecNavbar>\n\n\t\t\t{redirect ? <Redirect to='/' /> : <Fragment></Fragment>}\n\t\t</Fragment>\n\t);\n};\n\nexport default NavbarSec;\n","/** @format */\n\nimport React, { useState, Fragment } from \"react\";\nimport {\n  Box,\n  Accordion,\n  AccordionSummary,\n  Typography,\n  AccordionDetails,\n  Grid,\n} from \"@mui/material\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport {\n  Task,\n  MoneyOff,\n  FileCopy,\n  Receipt,\n  AssignmentTurnedIn,\n  Mail,\n  Phone,\n  Group,\n  AddCircle,\n  Work,\n  Person,\n} from \"@mui/icons-material\";\n\nimport { SideBarBtn } from \"../../styles/styles\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  lostCustomerActive,\n  newAccountActive,\n  marketingActive,\n  appointmentActive,\n  empOversiteActive,\n  emailsActive,\n  mapActive,\n  callsActive,\n} from \"../../redux/features/sidebarSlice\";\n\nimport \"./style.css\";\n\nconst Controls = () => {\n  return (\n    <Fragment>\n      <Box px={3} sx={{ color: \"#796ef0\" }}>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/\">\n              <Grid item>\n                <AddCircle fontSize=\"medium\" />\n              </Grid>\n              <Grid item>DashBoard</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/invoices\">\n              <Grid item>\n                <Receipt fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Invoices</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/manage-categories\">\n              <Grid item>\n                <FileCopy fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Categories</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/ledgers\">\n              <Grid item>\n                <MoneyOff fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Ledger</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/create-task\">\n              <Grid item>\n                <Task fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Task</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/employee-search\">\n              <Grid item>\n                <Work fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Employee Search</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/matter-dashboard\">\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Matters</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/contact\">\n              <Grid item>\n                <Person fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Contact</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Marketing = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(marketingActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.marketing ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Marketing</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(emailsActive())}>\n          <Grid>\n            <Box sx={sidebar.emails ? { color: \"#ddd\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <Mail fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Email</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst HumanResources = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          // onClick={() => dispatch(manageUserActive())}\n        >\n          <Grid>\n            <Box sx={{ color: \"#796ef0\" }} component={Link} to=\"/users\">\n              <Grid item>\n                <Person fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage User</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          // onClick={() => dispatch(manageRoleActive())}\n        >\n          <Grid>\n            <Box sx={{ color: \"#796ef0\" }} component={Link} to=\"/user-roles\">\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Role</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          // onClick={() => dispatch(manageGroupActive())}\n        >\n          <Grid>\n            <Box sx={{ color: \"#796ef0\" }} component={Link} to=\"/user-groups\">\n              <Grid item>\n                <Group fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Group</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst RevenueControls = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(revenueInActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.revenueIn ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Revenue In</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(revenueOutActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.revenueOut ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Revenue Out</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst AccountControls = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(newCustomerActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.newCustomer ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>New Customers</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(lostCustomerActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.lostCustomer ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Lost Customer</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(newAccountActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.newAccount ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>New Accounts</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(mapActive())}>\n          <Grid>\n            <Box sx={sidebar.map ? { color: \"#ddd\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Trouble Ticket Map</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\nconst EmployeeOversite = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(empOversiteActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.empOversite ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <Group fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Employee Oversite</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(callsActive())}>\n          <Grid>\n            <Box sx={sidebar.calls ? { color: \"#ddd\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <Phone fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Calls</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(appointmentActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.appointment ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <Mail fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Appointments</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport const accordionData = [\n  {\n    name: \"Controls\",\n    id: \"controls\",\n    tiles: <Controls />,\n  },\n\n  {\n    name: \"Human Resources\",\n    id: \"human_resource\",\n    tiles: <HumanResources />,\n  },\n  {\n    name: \"Revenue\",\n    id: \"revenue\",\n    tiles: <RevenueControls />,\n  },\n  {\n    name: \"Customers\",\n    id: \"customers\",\n    tiles: <AccountControls />,\n  },\n  {\n    name: \"Marketing\",\n    id: \"marketing\",\n    tiles: <Marketing />,\n  },\n  {\n    name: \"Employee Oversite\",\n    id: \"empOversite\",\n    tiles: <EmployeeOversite />,\n  },\n];\n\nconst TestingSidebar = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n\n  const [accordions, updateAccordions] = useState(accordionData);\n\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n\n    const items = Array.from(accordions);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    updateAccordions(items);\n  }\n\n  return (\n    <Fragment>\n      <Box mt={5}>\n        <DragDropContext onDragEnd={handleOnDragEnd}>\n          <Droppable droppableId=\"accordions\">\n            {(provided) => (\n              <Box\n                className=\"accordions\"\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {accordions.map((item, index) => {\n                  return (\n                    <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      index={index}\n                    >\n                      {(provided) => (\n                        <Accordion\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                        >\n                          <AccordionSummary\n                            expandIcon={<ExpandMoreIcon color=\"primary\" />}\n                            aria-controls=\"panel1a-content\"\n                            id=\"panel1a-header\"\n                          >\n                            <Typography\n                              align=\"center\"\n                              color=\"primary\"\n                              sx={{ textTransform: \"uppercase\" }}\n                            >\n                              {item.name}\n                            </Typography>\n                          </AccordionSummary>\n                          <AccordionDetails>{item.tiles}</AccordionDetails>\n                        </Accordion>\n                      )}\n                    </Draggable>\n                  );\n                })}\n                {provided.placeholder}\n              </Box>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default TestingSidebar;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box } from \"@mui/material\";\n\nimport {\n  Task,\n  MoneyOff,\n  FileCopy,\n  Receipt,\n  AssignmentTurnedIn,\n  AddCircle,\n  Work,\n  Person,\n} from \"@mui/icons-material\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nimport { SideBarBtn } from \"../../styles/styles\";\nimport { Link } from \"react-router-dom\";\n// import { UserContext } from '../../context/User';\nimport \"./style.css\";\n\nconst LawyerSidebar = () => {\n  return (\n    <Fragment>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/\">\n            <Grid item>\n              <AddCircle fontSize=\"medium\" />\n            </Grid>\n            <Grid item>DashBoard</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/invoices\">\n            <Grid item>\n              <Receipt fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Invoices</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/ledgers\">\n            <Grid item>\n              <MoneyOff fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Ledger</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/create-task\">\n            <Grid item>\n              <Task fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Manage Task</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/employee-search\">\n            <Grid item>\n              <Work fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Employee Search</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/matter-dashboard\">\n            <Grid item>\n              <AssignmentTurnedIn fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Matters</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/contact\">\n            <Grid item>\n              <AssignmentTurnedIn fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Contact</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n    </Fragment>\n  );\n};\n\nexport default LawyerSidebar;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box } from \"@mui/material\";\n\nimport {\n  Task,\n  MoneyOff,\n  FileCopy,\n  Receipt,\n  AssignmentTurnedIn,\n  AddCircle,\n  Work,\n  Person,\n} from \"@mui/icons-material\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nimport { SideBarBtn } from \"../../styles/styles\";\nimport { Link } from \"react-router-dom\";\n// import { UserContext } from '../../context/User';\nimport \"./style.css\";\n\nconst FirmSidebar = () => {\n  return (\n    <Fragment>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/\">\n            <Grid item>\n              <AddCircle fontSize=\"medium\" />\n            </Grid>\n            <Grid item>DashBoard</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/invoices\">\n            <Grid item>\n              <Receipt fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Invoices</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/users\">\n            <Grid item>\n              <Person fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Manage User</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/manage-categories\">\n            <Grid item>\n              <FileCopy fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Manage Categories</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/ledgers\">\n            <Grid item>\n              <MoneyOff fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Ledger</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/create-task\">\n            <Grid item>\n              <Task fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Manage Task</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/employee-search\">\n            <Grid item>\n              <Work fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Employee Search</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/matter-dashboard\">\n            <Grid item>\n              <AssignmentTurnedIn fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Matters</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/contact\">\n            <Grid item>\n              <AssignmentTurnedIn fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Contact</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n    </Fragment>\n  );\n};\n\nexport default FirmSidebar;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box } from \"@mui/material\";\n\nimport {\n  Task,\n  MoneyOff,\n  FileCopy,\n  Receipt,\n  AssignmentTurnedIn,\n  AddCircle,\n  Work,\n  Person,\n} from \"@mui/icons-material\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nimport { SideBarBtn } from \"../../styles/styles\";\nimport { Link } from \"react-router-dom\";\n// import { UserContext } from '../../context/User';\nimport \"./style.css\";\n\nconst CustomerSidebar = () => {\n  return (\n    <Fragment>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/\">\n            <Grid item>\n              <AddCircle fontSize=\"medium\" />\n            </Grid>\n            <Grid item>DashBoard</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/invoices\">\n            <Grid item>\n              <Receipt fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Invoices</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/create-task\">\n            <Grid item>\n              <Task fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Manage Task</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n    </Fragment>\n  );\n};\n\nexport default CustomerSidebar;\n","/** @format */\n\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { Box, Paper, Stack,} from \"@mui/material\";\n\nimport AdminSidebar from \"./AdminSidebar\";\nimport LawyerSidebar from \"./LawyerSidebar\";\nimport FirmSidebar from \"./FirmSidebar\";\nimport CustomerSidebar from \"./CutomerSidebar\";\nimport \"./style.css\";\n\nconst Sidebar = () => {\n\n  const { user } = useSelector((state) => state.auth.user);\n  const [localuser, setLocalUser] = useState({\n    username: \"Admin\",\n    is_firm: false,\n    is_lawyer: true,\n    is_client: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n\n  const SidebarRedirect = () => {\n    switch (user.username) {\n      case \"admin\":\n        return <AdminSidebar />;\n      case \"firm\":\n        return <FirmSidebar />;\n      case \"lawyer\":\n        return <LawyerSidebar />;\n      default:\n        return <CustomerSidebar />;\n    }\n  };\n\n\n  return (\n    <Fragment>\n      <Paper component={Stack} elevation={3} spacing={1}>\n        <Box\n          sx={{\n            height: \"calc(83vh - 40px)\",\n            overflowY: \"scroll\",\n          }}\n        >\n          {SidebarRedirect()}\n\n        </Box>\n      </Paper>\n    </Fragment>\n  );\n};\n\nexport default Sidebar;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  BottomNavigation,\n  BottomNavigationAction,\n  Link,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@mui/material\";\nimport { FooterBar, FooterLink, FooterButton } from \"../../styles/styles\";\nimport {\n  Drawer,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\nimport Favorites from \"../Favorite/Favorites\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst Footer = () => {\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Fragment>\n      <Box mt={3}>\n        {isTabletOrMobile ? (\n          <Box sx={{ color: \"#eee\", backgroundColor: \"#7a4ebf\" }}>\n            <List>\n              <FooterLink to={\"/ledgers\"}>Accounting</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/\"}> Calendar</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/\"}>Contacts</FooterLink>\n            </List>\n            <List>\n              <FooterButton\n                sx={{\n                  color: \"#eee\",\n                  marginLeft: \"1.2rem\",\n                  textTransform: \"uppercase\",\n                  textDecoration: \"none\",\n                  \"&:visited\": {\n                    color: \"#eee\",\n                  },\n                }}\n                variant=\"text\"\n                onClick={handleClickOpen}\n              >\n                Favorites\n              </FooterButton>\n            </List>\n            <Dialog\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">{\"Favorites\"}</DialogTitle>\n              <DialogContent>\n                <Favorites />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} autoFocus>\n                  Close\n                </Button>\n              </DialogActions>\n            </Dialog>\n            <List>\n              <FooterLink to={\"/matters\"}>Matters</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/tasks\"}>Tasks</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/\"}>Workflow</FooterLink>\n            </List>\n          </Box>\n        ) : (\n          <FooterBar>\n            <FooterLink to={\"/ledgers\"}>Accounting</FooterLink> |\n            <FooterLink to={\"/\"}> Calendar</FooterLink> |\n            <FooterLink to={\"/\"}>Contacts</FooterLink> |\n            <FooterButton\n              sx={{\n                color: \"#eee\",\n                textTransform: \"uppercase\",\n                textDecoration: \"none\",\n                \"&:visited\": {\n                  color: \"#eee\",\n                },\n              }}\n              variant=\"text\"\n              onClick={handleClickOpen}\n            >\n              Favorites\n            </FooterButton>\n            <Dialog\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">{\"Favorites\"}</DialogTitle>\n              <DialogContent>\n                <Favorites />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} autoFocus>\n                  Close\n                </Button>\n              </DialogActions>\n            </Dialog>\n            |<FooterLink to={\"/matters\"}>Matters</FooterLink> |\n            <FooterLink to={\"/tasks\"}>Tasks</FooterLink> |\n            <FooterLink to={\"/\"}>Workflow</FooterLink>\n          </FooterBar>\n        )}\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Footer;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport Navbar from \"../components/Navbars/Navbar\";\nimport NavbarSec from \"../components/Navbars/NavbarSec\";\nimport Sidebar from \"../components/Sidebar/Sidebar\";\nimport { connect } from \"react-redux\";\nimport Chatting from \"../components/Chat/Chat\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  isDisplay,\n  hideSidebar,\n  showSidebar,\n} from \"../redux/features/sidebarSlice\";\n\nimport { Paper, Fab, Popover } from \"@mui/material\";\nimport { Grid, Box, Button } from \"@mui/material\";\nimport { useMediaQuery } from \"react-responsive\";\n\nimport { Chat, Report } from \"@mui/icons-material\";\n\nimport Footer from \"../components/Footer/Footer\";\n\nconst InnerLayout = ({ children }) => {\n  const { user, isAuthenticated} = useSelector(\n    (state) => state.auth\n  )\n\n  const theme = useTheme();\n\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n  const sidebarToggle = useSelector((state) => state.sidebar.display);\n  const dispatch = useDispatch();\n\n  const [drawerOpen, setDrawerOpen] = React.useState(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handlePopoverOpen = (event) => {\n    setDrawerOpen(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setDrawerOpen(null);\n  };\n\n  const openPopover = Boolean(drawerOpen);\n  const id = openPopover ? \"simple-popover\" : undefined;\n\n  const handleDrawerOpen = () => {\n    setDrawerOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setDrawerOpen(false);\n  };\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleSidebarToggle = () => {\n    if (sidebarToggle) {\n      dispatch(hideSidebar());\n    } else {\n      dispatch(showSidebar());\n    }\n  };\n  const descriptionElementRef = React.useRef(null);\n\n  useEffect(() => {\n    if (isBigScreen) {\n      dispatch(showSidebar());\n    } else if (isTabletOrMobile) {\n      dispatch(hideSidebar());\n    }\n  }, []);\n  useEffect(() => {\n    if (drawerOpen) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [drawerOpen]);\n\n  return (\n    <Paper style={{ margin: \"0\" }}>\n      <Grid contianer rowSpacing={2} columnSpacing={2}>\n        <Grid item lg={12} md={12}>\n          {isAuthenticated ? (\n            <Fragment>\n              <NavbarSec />\n            </Fragment>\n          ) : (\n            <Navbar />\n          )}\n        </Grid>\n\n        {isAuthenticated ? (\n          <Fragment>\n            <Grid item lg={12}>\n              <Navbar />\n            </Grid>\n            <Grid container direction=\"row\" wrap=\"nowrap\">\n              {sidebarToggle ? (\n                <Fragment>\n                  <Grid item lg={2} xs={12} m={3}>\n                    <Sidebar />\n                  </Grid>\n                  <Grid item lg={10} xs={12} p={1}>\n                    <Box>\n                      <Button\n                        onClick={handleSidebarToggle}\n                        p={5}\n                        sx={{\n                          left: \"-8rem\",\n                          top: \"2rem\",\n                        }}\n                      >\n                        {sidebarToggle ? (\n                          <i className=\"fas fa-angle-double-left\"></i>\n                        ) : (\n                          <i className=\"fas fa-angle-double-right\"></i>\n                        )}\n                      </Button>\n                    </Box>\n                    {children}\n                  </Grid>\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <Grid item lg={12} xs={12} p={1}>\n                    <Box>\n                      <Button onClick={handleSidebarToggle}>\n                        {sidebarToggle ? (\n                          <i className=\"fas fa-angle-double-left\"></i>\n                        ) : (\n                          <i className=\"fas fa-angle-double-right\"></i>\n                        )}\n                      </Button>\n                    </Box>\n                    {children}\n                  </Grid>\n                </Fragment>\n              )}\n            </Grid>\n            <Grid item lg={12}>\n              <Footer />\n            </Grid>\n          </Fragment>\n        ) : (\n          <Grid item lg={12} xs={12}>\n            {children}\n          </Grid>\n        )}\n        {isAuthenticated? \n        <>\n        <Fab\n          size=\"large\"\n          sx={\n            isDesktopOrLaptop\n              ? {\n                  borderRadius: \"50%\",\n                  backgroundColor: \"#edb4b6\",\n                  position: \"fixed\",\n                  bottom: \"16px\",\n                  left: \"16px\",\n                  color: \"red\",\n                  zIndex: \"200\",\n                  \"&:hover\": {\n                    color: \"red\",\n                  },\n                }\n              : { display: \"none\" }\n          }\n          aria-label=\"report\"\n        >\n          <Report />\n        </Fab>\n        <Fab\n          size=\"large\"\n          onClick={handlePopoverOpen}\n          sx={\n            isDesktopOrLaptop\n              ? {\n                  borderRadius: \"50%\",\n                  backgroundColor: \"#eee\",\n                  position: \"fixed\",\n                  bottom: \"16px\",\n                  right: \"16px\",\n                  color: \"#461594\",\n                  zIndex: \"200\",\n                  \"&:hover\": {\n                    color: \"#7a4ebf\",\n                  },\n                }\n              : { display: \"none\" }\n          }\n          aria-label=\"chat\"\n        >\n          <Chat />\n        </Fab>\n        <Popover\n          open={openPopover}\n          anchorEl={drawerOpen}\n          onClose={handlePopoverClose}\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          sx={{ margin: \"-2rem\" }}\n        >\n          <Chatting />\n        </Popover>\n        </>\n        : null}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default InnerLayout;\n","/** @format */\n\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst PrivateRoutes = ({ children, ...rest }) => {\n\tconst { isAuthenticated } = useSelector((state) => state.auth);\n\n\treturn (\n\t\t<Route {...rest}>\n\t\t\t{isAuthenticated ? children : <Redirect to='/login' />}\n\t\t</Route>\n\t);\n};\n\nexport default PrivateRoutes;\n","/** @format */\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case 'toggle_button':\n      return {\n        ...state,\n        active: !state.active,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const initialState = {\n  active: false,\n};\n","/** @format */\n\nimport React from 'react';\nimport { reducer, initialState } from './reducer';\n\nexport const UserContext = React.createContext({\n  state: initialState,\n  dispatch: () => null,\n});\n\nexport const UserProvider = ({ children }) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  return (\n    <UserContext.Provider value={[state, dispatch]}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n","/** @format */\n\n// import styled from \"styled-components\";\nimport { createTheme } from \"@mui/material/styles\";\n\n// A custom theme for this app\nconst theme = createTheme({\n  palette: {\n    mode: \"light\",\n    primary: {\n      main: \"#796ef0\", //blueish purple\n    },\n    // secondary: {\n    //   main: \"\",\n    // },\n    error: {\n      main: \"#e85355\", //red\n    },\n    warning: {\n      main: \"#fd9905\", // orange\n    },\n    success: {\n      main: \"#28c570\", //green\n    },\n\n    contrastThreshold: 3,\n    tonalOffset: 0.2,\n  },\n  typography: {\n    htmlFontSize: 14,\n    fontSize: 12,\n    color: \"#333\",\n  },\n});\n\nexport default theme;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport \"./DashboardLayout/style.css\";\n\nimport DashboardContent from \"./DashboardLayout/DashboardContent\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <DashboardContent />\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport { MoreVert, Close } from \"@mui/icons-material\";\nimport { Button, Stack, IconButton } from \"@mui/material\";\nimport styles from \"./tabs.module.css\";\n\nconst Tabs = ({ children }) => {\n  const [activeTab, setActiveTab] = useState(children[0].props.label);\n  const handleClick = (e, newActiveTab) => {\n    e.preventDefault();\n    setActiveTab(newActiveTab);\n  };\n  return (\n    <Fragment>\n      <Stack direction=\"row\" spacing={1}>\n        <ul className={styles.tabs}>\n          {children.map((tab) => (\n            <li\n              className={tab.props.label === activeTab ? styles.current : \"\"}\n              key={tab.props.label}\n            >\n              <Button\n                variant=\"text\"\n                size=\"small\"\n                startIcon={<MoreVert />}\n                onClick={(e) => handleClick(e, tab.props.label)}\n              >\n                {tab.props.label}\n              </Button>\n            </li>\n          ))}\n        </ul>\n      </Stack>\n\n      {children.map((one) =>\n        one.props.label === activeTab ? (\n          <div className={styles.content} key={one.props.label}>\n            {one.props.children}\n          </div>\n        ) : (\n          \"\"\n        ),\n      )}\n    </Fragment>\n  );\n};\n\nexport default Tabs;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Typography,\n  Grid,\n  TextField,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n  FormControlLabel,\n  Switch,\n  Button,\n  Stack,\n} from \"@mui/material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { LinkButton } from \"../../styles/styles\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nconst CreateInvoice = () => {\n  const [approvel, setApprovel] = useToggle(false);\n  const [invoiceData, setInvoiceData] = useState({\n    matter: \"\",\n    contact: \"\",\n    billable: false,\n    date_range: \"\",\n    create_date: \"\",\n    due_date: \"\",\n    template: \"\",\n    invoice_no: \"\",\n    discount: \"\",\n    submit: false,\n  });\n\n  // const {\n  //   matter,\n  //   contact,\n  //   billable,\n  //   date_range,\n  //   create_date,\n  //   due_date,\n  //   template,\n  //   invoice_no,\n  //   discount,\n  //   submit,\n  // } = invoiceData;\n  const onChange = (e) =>\n    setInvoiceData({ ...invoiceData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  const [invoice, setInvoice] = useState(null);\n  // useEffect(() => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   };\n  //   const res = axios.get(\n  //     `${process.env.REACT_APP_API_URL}/api/invoice`,\n  //     config,\n  //   );\n  //   setInvoice(res.data);\n  // }, []);\n\n  const [dateRange, setDateRange] = React.useState([null, null]);\n  return (\n    <Fragment>\n      {/* <Typography component=\"h3\" variant=\"h4\">\n        Create New Invoice\n      </Typography>\n      <Box p={3}>\n        <LinkButton to=\"/invoices\" sx={{ float: \"right\" }}>\n          Invoice Dashboard\n        </LinkButton>\n      </Box> */}\n      <Box component=\"form\" Validate onSubmit={(e) => onSubmit(e)}>\n        <Grid\n          spacing={3}\n          container\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter\"\n              label=\"Matter\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"matter\"\n              autoComplete=\"matter\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"contact\"\n              label=\"Contact\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"contact\"\n              autoComplete=\"contact\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <FormControlLabel\n              sx={{ fontSize: \"12px\", marginLeft: \"1rem\" }}\n              control={\n                <Checkbox\n                  name=\"billable\"\n                  value=\"billable\"\n                  onChange={(e) => onChange(e)}\n                  id=\"billable\"\n                />\n              }\n              label=\"Unbillable\"\n            />\n          </Grid>\n          <Grid item lg={4} xs={12}>\n            <Stack direction=\"row\">\n              <Typography varient=\"caption\" sx={{ marginTop: \"0.7rem\" }}>\n                Range:\n              </Typography>\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DateRangePicker\n                  calendars={1}\n                  value={dateRange}\n                  onChange={(newValue) => {\n                    setDateRange(newValue);\n                  }}\n                  renderInput={(startProps, endProps) => (\n                    <Fragment>\n                      <TextField size=\"small\" {...startProps} />\n                      <Box sx={{ mx: 2 }}> to </Box>\n                      <TextField size=\"small\" {...endProps} />\n                    </Fragment>\n                  )}\n                />\n              </LocalizationProvider>\n            </Stack>\n          </Grid>\n        </Grid>\n\n        <Grid\n          container\n          spacing={3}\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              id=\"create_date\"\n              label=\"Create Date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              id=\"due_date\"\n              label=\"Due Date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"template\"\n              label=\"Template\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"template\"\n              autoComplete=\"template\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"invoice_no\"\n              label=\"Invoice #\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"invoice_no\"\n              autoComplete=\"invoice_no\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"discount\"\n              label=\"Discount\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"discount\"\n              autoComplete=\"discount\"\n            />\n          </Grid>\n          <Grid item lg={12} xs={12}>\n            <FormControlLabel\n              label=\"Submit For Approvel\"\n              control={\n                <Switch\n                  checked={approvel}\n                  onChange={() => setApprovel(approvel)}\n                />\n              }\n            />\n          </Grid>\n        </Grid>\n\n        <Grid item lg={12} mt={2}>\n          <TableContainer>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell>Sub-Category</TableCell>\n                  <TableCell>Description</TableCell>\n                  <TableCell>Date</TableCell>\n                  <TableCell>Hours</TableCell>\n                  <TableCell>Rate</TableCell>\n                  <TableCell>Sub</TableCell>\n                  <TableCell>Tax</TableCell>\n                  <TableCell>int</TableCell>\n                  <TableCell>Disc.</TableCell>\n                  <TableCell>Total</TableCell>\n                  <TableCell>Biller</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                {/* {invoice?.map((invoice) => (\n                  <TableRow id={invoice.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n\n                    <TableCell>{invoice.sub_cat}</TableCell>\n                    <TableCell>{invoice.discription}</TableCell>\n                    <TableCell>{invoice.date}</TableCell>\n                    <TableCell>{invoice.hours}</TableCell>\n                    <TableCell>{invoice.rate}</TableCell>\n                    <TableCell>{invoice.sub}</TableCell>\n                    <TableCell>{invoice.tax}</TableCell>\n                    <TableCell>{invoice.int}</TableCell>\n                    <TableCell>{invoice.dics}</TableCell>\n                    <TableCell>{invoice.total}</TableCell>\n                    <TableCell>{invoice.biller}</TableCell>\n                  </TableRow>\n                ))} */}\n              </TableHead>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item mt={3} direction=\"row\">\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Notes\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"Accept Online Payment\"\n              />\n            }\n            label=\"Accept Online Payment\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Accept Payments for Less\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add interest (Compound / Simple)\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Terms and Conditions\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add interest (compund/ simple)\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Use Trust Balance\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add all unpaid invoices\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"use Operating Balance\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Send Reminders Every\"\n          />\n          <TextField size=\"small\" sx={{ width: \"5rem\" }} />\n          <Typography\n            varient=\"caption\"\n            component=\"span\"\n            sx={{ marginLeft: \"0.5rem \" }}\n          >\n            day(s)/week(s)\n          </Typography>\n\n          {/* <Button\n            variant=\"contained\"\n            sx={{ float: \"right\" }}\n            endIcon={<SaveIcon />}\n          >\n            Send\n          </Button> */}\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateInvoice;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  Grid,\n  Box,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  FormControl,\n  Checkbox,\n  Typography,\n  TextField,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableCell,\n  MenuItem,\n  InputLabel,\n  Select,\n  Button,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nconst PaymentPlan = () => {\n  const [paymentData, setPaymentData] = useState({\n    payment_no: \"File# - 001\",\n    due: \"2020/07/01\",\n    amount: \"$ 750.00\",\n    late_fee: \"$22.00\",\n    total_due: \"$ 775.00\",\n    payment: \"$775.00\",\n    posted: \"$2020/07/05\",\n    method: \"Check\",\n  });\n\n  return (\n    <Fragment>\n      <Grid container mt={3} mb={3}>\n        <Grid item lg={4}>\n          <Typography>Start Balance:</Typography>\n          <Typography>Start Date:</Typography>\n          <Typography>Interest Rate:</Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Typography>Payment Amout:</Typography>\n          <Typography>Payment Date:</Typography>\n          <Typography>No Payments:</Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Typography>Payment Remaining:</Typography>\n          <Typography>Last Payment:</Typography>\n          <Typography>Last Payment $:</Typography>\n        </Grid>\n      </Grid>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Payment #</TableCell>\n            <TableCell>Due</TableCell>\n            <TableCell>Amout</TableCell>\n            <TableCell>Late Fee</TableCell>\n            <TableCell>Total Due</TableCell>\n            <TableCell>Payment</TableCell>\n            <TableCell>Posted</TableCell>\n            <TableCell>Method</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableCell>\n            <Checkbox />\n          </TableCell>\n          <TableCell>{paymentData.payment_no}</TableCell>\n          <TableCell>{paymentData.due}</TableCell>\n          <TableCell>{paymentData.amount} </TableCell>\n          <TableCell>{paymentData.late_fee}</TableCell>\n          <TableCell>{paymentData.total_due}</TableCell>\n          <TableCell>{paymentData.payment}</TableCell>\n          <TableCell>{paymentData.posted}</TableCell>\n          <TableCell>{paymentData.method}</TableCell>\n        </TableBody>\n      </Table>\n      <Button\n        variant=\"contained\"\n        sx={{\n          float: \"right\",\n          borderRadius: \"0.5rem\",\n          paddingInline: \"2rem\",\n          marginTop: \"2rem\",\n        }}\n      >\n        Close\n      </Button>\n      <Grid container>\n        <Grid item lg={6}>\n          <Typography>Post agreement Balance:</Typography>\n        </Grid>\n        <Grid item lg={6}>\n          <Typography>Start Date:</Typography>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst InvoicePayment = () => {\n  const [invoiceData, setInvoiceData] = useState({\n    invoice_no: \"i-2106-0004542\",\n    due: \"2020/07/01\",\n    tax: \"$ 15.00\",\n    interest: \"$2.35\",\n    time: \"$ 1,234.50\",\n    hard: \"$457.00\",\n    soft: \"$45.00\",\n    total: \"$ 1,753.85\",\n  });\n\n  return (\n    <Fragment>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Invoice</TableCell>\n            <TableCell>Due</TableCell>\n            <TableCell>Tax</TableCell>\n            <TableCell>Interest</TableCell>\n            <TableCell>Time</TableCell>\n            <TableCell>Hard</TableCell>\n            <TableCell>Soft</TableCell>\n            <TableCell>Total</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableCell>\n            <Checkbox />\n          </TableCell>\n          <TableCell>{invoiceData.invoice_no}</TableCell>\n          <TableCell>{invoiceData.due}</TableCell>\n          <TableCell>{invoiceData.tax} </TableCell>\n          <TableCell>{invoiceData.interest}</TableCell>\n          <TableCell>{invoiceData.time}</TableCell>\n          <TableCell>{invoiceData.hard}</TableCell>\n          <TableCell>{invoiceData.soft}</TableCell>\n          <TableCell>{invoiceData.total}</TableCell>\n        </TableBody>\n      </Table>{\" \"}\n      <Button\n        variant=\"contained\"\n        sx={{\n          float: \"right\",\n          borderRadius: \"0.5rem\",\n          paddingInline: \"2rem\",\n          marginTop: \"2rem\",\n        }}\n      >\n        Pay\n      </Button>{\" \"}\n    </Fragment>\n  );\n};\n\nconst Payment = () => {\n  const [dateRange, setDateRange] = useState([null, null]);\n  const [isPlan, setIsPlan] = useToggle(false);\n  const [invoiceData, setInvoiceData] = useState({\n    payment_type: \"\",\n    date: \"\",\n    retainer: \"\",\n    payment: \"\",\n    date_range: \"\",\n    menu: \"\",\n    bank_account: \"\",\n    payment_method: \"\",\n  });\n\n  const {\n    payment_type,\n    date,\n    retainer,\n    payment,\n    date_range,\n    menu,\n    bank_account,\n    payment_method,\n  } = invoiceData;\n  const onChange = (e) =>\n    setInvoiceData({ ...invoiceData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={12}>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{\n              \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n            }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            <FormControl component=\"fieldset\">\n              <RadioGroup\n                row\n                aria-label=\"payment_type\"\n                defaultValue=\"cash\"\n                name=\"payment_type\"\n                onChange={(e) => onChange(e)}\n                id=\"payment_type\"\n                autoComplete=\"payment_type\"\n              >\n                <FormControlLabel\n                  value=\"cash\"\n                  control={<Radio />}\n                  label=\"Cash\"\n                />\n                <FormControlLabel value=\"cc\" control={<Radio />} label=\"CC\" />\n                <FormControlLabel\n                  value=\"wire\"\n                  control={<Radio />}\n                  label=\"Wire\"\n                />\n                <FormControlLabel\n                  value=\"check\"\n                  control={<Radio />}\n                  label=\"Check\"\n                />\n              </RadioGroup>\n            </FormControl>\n            <TextField\n              size=\"small\"\n              id=\"date\"\n              label=\"date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <FormControlLabel\n              value=\"retainer\"\n              control={<Checkbox />}\n              label=\"Retainer\"\n            />\n            <FormControlLabel\n              value=\"payment\"\n              control={<Checkbox />}\n              label=\"Payment\"\n            />\n            {/* <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <Typography sx={{ mt: 2, mb: 1 }}> Date Range </Typography>\n              <DateRangePicker\n                calendars={1}\n                value={dateRange}\n                onChange={(newValue) => {\n                  setDateRange(newValue);\n                }}\n                renderInput={(startProps, endProps) => (\n                  <Fragment>\n                    <TextField size=\"small\" {...startProps} />\n                    <Box sx={{ mx: 2 }}> to </Box>\n                    <TextField size=\"small\" {...endProps} />\n                  </Fragment>\n                )}\n              />\n            </LocalizationProvider> */}\n            <FormControl sx={{ width: \"12rem\" }}>\n              <InputLabel id=\"demo-simple-select-label\">Date Range</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={date_range}\n                label=\"Age\"\n                onChange={(e) => onChange(e)}\n              >\n                <MenuItem value={10}>Ten</MenuItem>\n                <MenuItem value={20}>Twenty</MenuItem>\n                <MenuItem value={30}>Thirty</MenuItem>\n              </Select>\n            </FormControl>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"menu\"\n              label=\"menu\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"menu\"\n              autoComplete=\"menu\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bank_account\"\n              label=\"bank_account\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"bank_account\"\n              autoComplete=\"bank_account\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"payment_method\"\n              label=\"payment_method\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"payment_method\"\n              autoComplete=\"payment_method\"\n            />\n            <FormControl component=\"fieldset\">\n              <RadioGroup\n                row\n                aria-label=\"isPlan\"\n                defaultValue={isPlan}\n                name=\"isPlan\"\n                onChange={(e) => setIsPlan(e)}\n                id=\"isPlan\"\n                autoComplete=\"isPlan\"\n              >\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"Invoice Payment\"\n                />\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Payment Plan\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Box>\n        </Grid>\n        <Grid item lg={12}>\n          <TableContainer>\n            {isPlan ? <PaymentPlan /> : <InvoicePayment />}\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Payment;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Switch,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography,\n  FormControlLabel,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n  Button,\n} from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nimport { styled } from \"@mui/material/styles\";\n\nimport { useToggle } from \"../../context/useToggle\";\nimport CreateInvoice from \"./CreateInvoice\";\nimport Payment from \"./Payment\";\n\nconst Filters = () => {\n  const [invoiceToggle, setInvoiceToggle] = useToggle(false);\n  const [paymentToggle, setPaymentToggle] = useToggle(false);\n  const [paid, setPaid] = useToggle(false);\n\n  const [age, setAge] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid\n          spacing={2}\n          item\n          lg={12}\n          direction=\"Row\"\n          sx={{\n            \"& .MuiTextField-root\": { m: 1 },\n            \"& .MuiFormControl-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Button\n            variant=\"contained\"\n            onClick={() => setInvoiceToggle(invoiceToggle)}\n            sx={{ margin: \"0.5rem\" }}\n          >\n            Create Invoice\n          </Button>\n          <Dialog\n            fullWidth=\"lg\"\n            maxWidth=\"lg\"\n            open={invoiceToggle}\n            onClose={() => setInvoiceToggle(invoiceToggle)}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {\"Create Invoice\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                <CreateInvoice />\n              </DialogContentText>\n            </DialogContent>\n          </Dialog>\n          <Button\n            variant=\"contained\"\n            onClick={() => setPaymentToggle(paymentToggle)}\n            sx={{ margin: \"0.5rem\" }}\n          >\n            Receive Money\n          </Button>\n          <Dialog\n            fullWidth=\"lg\"\n            maxWidth=\"lg\"\n            open={paymentToggle}\n            onClose={() => setPaymentToggle(paymentToggle)}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Receive Money\"}</DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                <Payment />\n              </DialogContentText>\n            </DialogContent>\n          </Dialog>\n          <FormControlLabel\n            label=\" Paid/ Unpaid\"\n            control={<Switch checked={paid} onChange={() => setPaid(paid)} />}\n          />\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">All Invoice</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Bill Date</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">All Times</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n\n          <Typography\n            component=\"span\"\n            variant=\"caption\"\n            sx={{ width: \"8rem\", m: 2, fontSize: \"1.2rem\" }}\n          >\n            Status:\n          </Typography>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Any </InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Dropd-own</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Filters;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n} from \"@mui/material\";\nimport Filters from \"./Filters\";\n\nconst InvoiceList = () => {\n  const [invoice, setInvoice] = useState(null);\n\n  // useEffect(() => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   };\n  //   const res = axios.get(\n  //     `${process.env.REACT_APP_API_URL}/api/invoices`,\n  //     config,\n  //   );\n  //   setInvoice(res.data);\n  // }, []);\n\n  return (\n    <Fragment>\n      <Filters />\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Invoice</TableCell>\n              <TableCell>Created</TableCell>\n              <TableCell>Due</TableCell>\n              <TableCell>Tax</TableCell>\n              <TableCell>Interest</TableCell>\n              <TableCell>Discount</TableCell>\n              <TableCell>Total</TableCell>\n              <TableCell>Balance</TableCell>\n              <TableCell>Last Payment</TableCell>\n              <TableCell>Approval Date</TableCell>\n              <TableCell>Approval by</TableCell>\n              <TableCell>Created by</TableCell>\n            </TableRow>\n            {/* {invoice?.map((invoice) => (\n              <TableRow id={invoice.id}>\n                <TableCell>\n                  <Checkbox />\n                </TableCell>\n                <TableCell>{invoice.id}</TableCell>\n                <TableCell>{invoice.created}</TableCell>\n                <TableCell>{invoice.due}</TableCell>\n                <TableCell>{invoice.tax}</TableCell>\n                <TableCell>{invoice.interest}</TableCell>\n                <TableCell>{invoice.discount}</TableCell>\n                <TableCell>{invoice.total}</TableCell>\n                <TableCell>{invoice.balance}</TableCell>\n                <TableCell>{invoice.last_payment}</TableCell>\n                <TableCell>{invoice.approvel_date}</TableCell>\n                <TableCell>{invoice.approvel.by}</TableCell>\n                <TableCell>{invoice.created_by}</TableCell>\n              </TableRow>\n            ))} */}\n          </TableHead>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default InvoiceList;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport InvoiceList from \"./InvoiceList\";\nimport Payment from \"./Payment\";\nimport CreateInvoice from \"./CreateInvoice\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <InvoiceList />\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React from \"react\";\nimport { Alert } from \"@mui/material\";\n\nexport const ActionAlerts = (status) => {\n  return <Alert severity=\"error\">{status}</Alert>;\n};\n\nexport const TotalDays = (date1, date2) => {\n  let dt1 = new Date(date1);\n  let dt2 = new Date(date2);\n  return Math.floor(\n    (Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) -\n      Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate())) /\n      (1000 * 60 * 60 * 24),\n  );\n};\n\nexport const GetDate = (date) => {\n  let newDate =\n    date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\n  return newDate;\n};\n\nexport const GetTime = (time) => {\n  let newTime =\n    time.getHours() + \":\" + time.getMinutes() + \":\" + time.getSeconds();\n  return newTime;\n};\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport {\n  Paper,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableBody,\n  TableRow,\n  Typography,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  Box,\n  containerClasses,\n} from \"@mui/material\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { GetDate } from \"../../utils/ActionAlerts\";\n\nconst MatterList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const [redTask, setRedTask] = useState(false);\n  const [greenTask, setGreenTask] = useState(false);\n  const [yellowTask, setYellowTask] = useState(false);\n  const [myTask, setMyTask] = useState(true);\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/tasks/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setTasks(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Box component={Paper} p={2}>\n      <FormGroup aria-label=\"position\" row>\n        <FormControlLabel\n          control={\n            <Checkbox value={myTask} onChange={() => setMyTask(!myTask)} />\n          }\n          label=\"My Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox value={redTask} onChange={() => setRedTask(!redTask)} />\n          }\n          label=\"Red Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              value={greenTask}\n              onChange={() => setGreenTask(!greenTask)}\n            />\n          }\n          label=\"Green Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              value={yellowTask}\n              onChange={() => setYellowTask(!yellowTask)}\n            />\n          }\n          label=\"Yellow Tasks\"\n        />\n      </FormGroup>\n      <Typography component=\"h3\">All Matters Task's List</Typography>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assign To</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* {loading\n              ? null\n              : tasks?.map((data) => {\n                  return (\n                    <TableRow id={data.id}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>\n                        {data.task_nature === \"urgent\" ? (\n                          <CircleIcon color=\"error\" />\n                        ) : (\n                          <CircleIcon color=\"success\" />\n                        )}\n                      </TableCell>\n                      <TableCell>{data.matter}</TableCell>\n                      <TableCell>\n                        {data.last_action ? data.next_action : \"-\"}\n                      </TableCell>\n                      <TableCell>\n                        {data.next_action ? data.next_action : \"-\"}\n                      </TableCell>\n                      <TableCell>{data.assign_to}</TableCell>\n                    </TableRow>\n                  );\n                })} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n\nexport default MatterList;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Card, CardContent, Typography } from \"@mui/material\";\n\nconst Cards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Tasks cleared Last day\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Goal Today\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Personal Best\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Company Record\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Cards;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Link, Typography, List, ListItem, Paper } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nconst Calendar = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography variant=\"h6\" component=\"h7\">\n          My Calendar at a Glance\n        </Typography>\n        <List>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Start motion for trail</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Calendar;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Select,\n  InputLabel,\n  FormControl,\n  MenuItem,\n  Typography,\n} from \"@mui/material\";\n\nconst Filters = () => {\n  // const [user, setUser] = useState(\"Any user\");\n  const [age, setAge] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item>\n          <Typography>Assign To</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography>Organized By</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography>Status</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography color=\"white\">-</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography color=\"white\">-</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Filters;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Card, Button, Typography } from \"@mui/material\";\n\nimport { LinkButton } from \"../../styles/styles\";\n\nconst MatterCards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2} mt={1.5}>\n        <Grid item lg={9}>\n          <Grid container spacing={2}>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"error.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Urgent\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"warning.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Concern\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"success.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Start\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"white\",\n                  color: \"black\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      New\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item lg={3}>\n          <Button\n            variant=\"outlined\"\n            sx={{\n              minWidth: 100,\n              height: 40,\n              borderRadius: \"0.5rem\",\n              bgcolor: \"white\",\n              color: \"black\",\n            }}\n          >\n            Import\n          </Button>\n          <LinkButton to=\"/create-matter\"> + New </LinkButton>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default MatterCards;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n  TableBody,\n} from \"@mui/material\";\nimport { LinkButton } from \"../../styles/styles\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst MatterListLong = () => {\n  const [matters, setMatters] = useState([]);\n\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/new-matter/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setMatters(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  return (\n    <Fragment>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Matter Contact</TableCell>\n              <TableCell>Matter Type</TableCell>\n              <TableCell>Bill Rate</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assigned to</TableCell>\n              <TableCell>Billable</TableCell>\n              <TableCell>Open Invoice</TableCell>\n              <TableCell>Trust Account</TableCell>\n              <TableCell>Last Payment</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* {loading\n              ? null\n              : matters?.map((data, index) => {\n                  return (\n                    <TableRow id={index}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>\n                        <CircleIcon color=\"error\" />\n                      </TableCell>\n                      <TableCell>{data.matter_name}</TableCell>\n                      <TableCell>{data.contact}</TableCell>\n                      <TableCell>{data.matter_type}</TableCell>\n                      <TableCell>{data.billing_rate}</TableCell>\n                      <TableCell>{data.open_date}</TableCell>\n                      <TableCell>{data.close_date}</TableCell>\n                      <TableCell>{data.assign_to}</TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 100)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        {\" \"}\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />{\" \"}\n                        - {data.close_date}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default MatterListLong;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { TextField, Box, Grid, Button, Typography } from \"@mui/material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\n\nimport { LocalizationProvider, DateRangePicker, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nimport { CreateMatter, CONFIG } from \"../../api/MatterApi\";\n\nimport { ActionAlerts, TotalDays, GetDate } from \"../../utils/ActionAlerts\";\n\nconst NewMatter = () => {\n  // const matter_number = Math.floor(Math.random() * 10000000);\n  const mask = \"____-__-__\";\n  const matter_number = 23568;\n  const [openDate, setOpenDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [whenDate, setWhenDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [closeDate, setCloseDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [totalDays, setTotalDays] = useState(0);\n  const [matterData, setMatterData] = useState({\n    contact: 0,\n    matter_name: \"\",\n    matter_type: \"\",\n    matter_source: \"\",\n    matter_status: \"\",\n    assign_to: 0,\n    assign_by: 0,\n    billing_rate: 0,\n    alerts: \"\",\n\n    jurisdiction: \"\",\n    status_limitaion: null,\n    opposing_counsel: \"\",\n    where: \"\",\n    involved: \"\",\n    witnesses: \"\",\n    narrative: \"\",\n  });\n\n  const {\n    contact,\n    matter_name,\n    matter_type,\n    matter_source,\n    matter_status,\n    assign_to,\n    assign_by,\n    billing_rate,\n    alerts,\n\n    jurisdiction,\n    status_limitaion,\n    opposing_counsel,\n    where,\n    involved,\n    witnesses,\n    narrative,\n  } = matterData;\n\n  const onChange = (e) =>\n    setMatterData({ ...matterData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let open_date = GetDate(openDate);\n    let close_date = GetDate(closeDate);\n    let when = GetDate(whenDate);\n    let total_days = totalDays;\n    const body = JSON.stringify({\n      contact,\n      matter_name,\n      matter_type,\n      matter_source,\n      matter_status,\n      assign_to,\n      assign_by,\n      billing_rate,\n      alerts,\n      open_date,\n      close_date,\n      total_days,\n      jurisdiction,\n      status_limitaion,\n      opposing_counsel,\n      where,\n      when,\n      involved,\n      witnesses,\n      narrative,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/new-matter/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  useEffect(() => {\n    let days = TotalDays(openDate, closeDate);\n    setTotalDays(days);\n  }, [openDate, closeDate]);\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create New Matter\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item lg={8}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"contact\"\n              label=\"contact\"\n              type=\"number\"\n              min=\"0\"\n              value={contact}\n              onChange={(e) => onChange(e)}\n              id=\"contact\"\n              sx={{\n                width: \"97%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_number\"\n              label=\"matter_number\"\n              type=\"text\"\n              value={matter_number}\n              // onChange={(e) => onChange(e)}\n              id=\"matter_number\"\n              disabled\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_name\"\n              label=\"matter_name\"\n              type=\"text\"\n              value={matter_name}\n              onChange={(e) => onChange(e)}\n              id=\"matter_name\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"alerts\"\n              label=\"alerts\"\n              type=\"text\"\n              value={alerts}\n              onChange={(e) => onChange(e)}\n              id=\"alerts\"\n              autoComplete=\"alerts\"\n              sx={{\n                width: \"97%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_type\"\n              label=\"matter_type\"\n              type=\"text\"\n              value={matter_type}\n              onChange={(e) => onChange(e)}\n              id=\"matter_type\"\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_source\"\n              label=\"matter_source\"\n              type=\"text\"\n              value={matter_source}\n              onChange={(e) => onChange(e)}\n              id=\"matter_source\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_status\"\n              label=\"matter_status\"\n              type=\"text\"\n              value={matter_status}\n              onChange={(e) => onChange(e)}\n              id=\"matter_status\"\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"assign_to\"\n              label=\"assign_to\"\n              type=\"number\"\n              value={assign_to}\n              onChange={(e) => onChange(e)}\n              id=\"assign_to\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"billing_rate\"\n              label=\"billing_rate\"\n              step=\"0.01\"\n              type=\"number\"\n              value={billing_rate}\n              onChange={(e) => onChange(e)}\n              id=\"billing_rate\"\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"Open Date\"\n                value={openDate}\n                name=\"open\"\n                id=\"open\"\n                onChange={(e) => setOpenDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"Close Date\"\n                value={closeDate}\n                name=\"closed\"\n                id=\"closed\"\n                onChange={(e) => setCloseDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"total_days\"\n              label=\"total_days\"\n              type=\"number\"\n              value={totalDays}\n              onChange={(e) => setTotalDays(TotalDays(openDate, closeDate))}\n              id=\"total_days\"\n              disabled\n            />\n          </Grid>\n\n          <Grid item lg={4}>\n            <br />\n            <Typography component=\"h5\" variant=\"h6\">\n              Legal Concerns\n            </Typography>\n            <br />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"jurisdiction\"\n              label=\"jurisdiction\"\n              type=\"text\"\n              value={jurisdiction}\n              onChange={(e) => onChange(e)}\n              id=\"jurisdiction\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"status_limitaion\"\n              label=\"status_limitaion\"\n              type=\"text\"\n              value={status_limitaion}\n              onChange={(e) => onChange(e)}\n              id=\"status_limitaion\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"opposing_counsel\"\n              label=\"opposing_counsel\"\n              type=\"text\"\n              value={opposing_counsel}\n              onChange={(e) => onChange(e)}\n              id=\"opposing_counsel\"\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <Typography component=\"h5\" variant=\"h6\" sx={{ fontSize: \"1rem\" }}>\n              Event Detail\n            </Typography>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"where\"\n              label=\"where\"\n              type=\"text\"\n              value={where}\n              onChange={(e) => onChange(e)}\n              id=\"where\"\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"When\"\n                value={whenDate}\n                name=\"when\"\n                id=\"when\"\n                onChange={(e) => setWhenDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"involved\"\n              label=\"Who was involved\"\n              type=\"text\"\n              value={involved}\n              onChange={(e) => onChange(e)}\n              id=\"involved\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"witnesses\"\n              label=\"witnesses\"\n              type=\"text\"\n              value={witnesses}\n              onChange={(e) => onChange(e)}\n              id=\"witnesses\"\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              label=\"Customer Narrative of the Event\"\n              multiline\n              type=\"text\"\n              rows={10}\n              value={narrative}\n              onChange={(e) => onChange(e)}\n              defaultValue=\"Narrative\"\n              name=\"narrative\"\n              id=\"narrative\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          sx={{ float: \"right\" }}\n          endIcon={<SaveIcon />}\n        >\n          Save\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default NewMatter;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { styled } from \"@mui/material/styles\";\n\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  CardContent,\n  Typography,\n  Card,\n  Grid,\n  Box,\n  List,\n  ListItem,\n  Paper,\n  InputBase,\n} from \"@mui/material\";\n\nconst MatterTask = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography sx={{ fontSize: \"0.8rem\" }}>Upcoming Activity</Typography>\n        <List mt={1} sx={{ fontSize: \"0.75rem\" }}>\n          <ListItem components=\"p\">\n            Date: - Activity - Responsible Party\n          </ListItem>\n          <ListItem components=\"p\">\n            YYYY/MM/DD: - Hearing for MSC - MJJ\n          </ListItem>\n          <ListItem components=\"p\">YYYY/MM/DD: - Trail - KSK</ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Activities = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography sx={{ fontSize: \"0.8rem\" }}>Upcoming Activity</Typography>\n        <List mt={1} sx={{ fontSize: \"0.75rem\" }}>\n          <ListItem components={Typography}>\n            Date: - Activity - Responsible Party\n          </ListItem>\n          <ListItem components={Typography}>\n            YYYY/MM/DD: - Hearing for MSC - MJJ\n          </ListItem>\n          <ListItem components={Typography}>YYYY/MM/DD: - Trail - KSK</ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Cards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                Classification\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                % time spent\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                Matter Completion\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst MatterDetail = () => {\n  const Search = styled(\"div\")(({ theme }) => ({\n    position: \"relative\",\n    borderRadius: \"1.5rem\",\n    backgroundColor: \"#eee\",\n    \"&:hover\": {\n      backgroundColor: \"#ddd\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"40%\",\n  }));\n\n  const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  }));\n\n  const StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: \"inherit\",\n    \"& .MuiInputBase-input\": {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"md\")]: {\n        width: \"20ch\",\n      },\n    },\n  }));\n  // const [matters, setMatters] = useState(null);\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={12}>\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n        </Grid>\n        <Grid item lg={12}>\n          <Grid container spacing={2}>\n            <Grid item mt={2} lg={7}>\n              <TableContainer>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>#</TableCell>\n                      <TableCell>Recent Document</TableCell>\n                      <TableCell>Version</TableCell>\n                      <TableCell>Last Open</TableCell>\n                      <TableCell>User</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>1</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>2</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>3</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                  </TableHead>\n                </Table>\n              </TableContainer>\n              <Grid container spacing={3}>\n                <Grid item>\n                  <Activities />\n                </Grid>\n                <Grid item>\n                  <MatterTask />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item mt={2} lg={5}>\n              <Cards />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default MatterDetail;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport MatterList from \"./MatterList\";\nimport { Grid, Box } from \"@mui/material\";\nimport Cards from \"./Cards\";\nimport Calendar from \"./Calendar\";\nimport Filters from \"./Filters\";\nimport MatterCards from \"./MatterCards\";\nimport MatterListLong from \"./MatterListLong\";\nimport NewMatter from \"./NewMatter\";\nimport MatterDetail from \"./MatterDetail\";\n\nconst Matters = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container>\n          <Grid item lg={12}>\n            <Filters />\n          </Grid>\n          <Grid item lg={12}>\n            <MatterCards />\n          </Grid>\n          <Grid item lg={12} mt={2}>\n            <MatterListLong />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst MatterDashboard = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container spacing={2}>\n          <Grid item lg={7}>\n            <MatterList />\n            <Calendar />\n          </Grid>\n          <Grid item lg={5}>\n            <Cards />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashboard\">\n          <MatterDashboard />\n        </div>\n        <div label=\"Matter\">\n          <Matters />\n        </div>\n        <div label=\"New Matter\">\n          <NewMatter />\n        </div>\n        <div label=\"Smith vs. Jhon\">\n          <MatterDetail />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LedgerActivity = () => {\n  const [activityData, setActivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setActivityData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Fragment>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow bgColor=\"#796ef0\">\n              <TableCell>\n                <Typography color=\"white\">Date</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Files</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Category</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Sub-Category</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Notes</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Source</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">User</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">In/Out</Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          {/* {loading\n            ? null\n            : activityData?.map((data) => {\n                return (\n                  <TableBody id={data.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n                    <TableCell>{data.date}</TableCell>\n                    <TableCell>x</TableCell>\n                    <TableCell>{data.category}</TableCell>\n                    <TableCell>{data.sub_category}</TableCell>\n                    <TableCell>{data.note}</TableCell>\n                    <TableCell>\n                      {data.billable ? \"email\" : \"workflow\"}\n                    </TableCell>\n                    <TableCell>{data.bill_by}</TableCell>\n                    <TableCell>{data.billable ? \"In\" : \"Out\"}</TableCell>\n                  </TableBody>\n                );\n              })} */}\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default LedgerActivity;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Switch,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography,\n  TextField,\n  FormControlLabel,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nconst Fillters = () => {\n  const [dateRange, setDateRange] = useState([null, null]);\n  const [billedby, setBilledby] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Filter By</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={filter}\n            label=\"Filter By\"\n            onChange={(e) => setFilter(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Billed by</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={billedby}\n            label=\"Billed By\"\n            onChange={(e) => setBilledby(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={status}\n            label=\"Age\"\n            onChange={(e) => setStatus(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <Typography sx={{ mt: 2, mb: 1 }}> Date Range </Typography>\n          <DateRangePicker\n            calendars={1}\n            value={dateRange}\n            onChange={(newValue) => {\n              setDateRange(newValue);\n            }}\n            renderInput={(startProps, endProps) => (\n              <Fragment>\n                <TextField size=\"small\" {...startProps} />\n                <Box sx={{ mx: 2 }}> to </Box>\n                <TextField size=\"small\" {...endProps} />\n              </Fragment>\n            )}\n          />\n        </LocalizationProvider>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Fillters;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nconst LedgerCards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item xs={7}>\n          <Grid container spacing={2}>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Time Entries\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={200}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      f\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Soft Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={65000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Hard Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={5000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Total Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={70000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Trust\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={4000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Total Due\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={100000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item={5}>\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>User</TableCell>\n                  <TableCell>Hours</TableCell>\n                  <TableCell>Total</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell> Jhon Johnson</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={74.3}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={39007.05}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Mark MacCalloff</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={4.0}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={800.0}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Cindy Madenuff</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={127.3}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={41372.5}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LedgerCards;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n  Button,\n} from \"@mui/material\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { LinkButton } from \"../../styles/styles\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst LedgerTImeList = () => {\n  const [ledgerData, setLedgerData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setLedgerData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  return (\n    <Fragment>\n      <Box>\n        <Button\n          variant=\"contained\"\n          sx={{ marginRight: \"1rem\", float: \"right\" }}\n        >\n          Print\n        </Button>\n        <Button\n          variant=\"contained\"\n          sx={{ marginRight: \"1rem\", float: \"right\" }}\n        >\n          Export\n        </Button>\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell></TableCell>\n                <TableCell>Cateagory</TableCell>\n                <TableCell>Sub-Category</TableCell>\n                <TableCell>Detail</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Qty</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Total</TableCell>\n                <TableCell>BillBy</TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading\n                ? null\n                : ledgerData?.map((data) => {\n                    return (\n                      <TableBody id={data.id}>\n                        <TableCell>\n                          <Checkbox />\n                        </TableCell>\n                        <TableCell>{data.category}</TableCell>\n                        <TableCell>{data.sub_category}</TableCell>\n                        <TableCell>{data.detail}</TableCell>\n                        <TableCell>{data.date}</TableCell>\n                        <TableCell>{data.qty}</TableCell>\n                        <TableCell>\n                          {data.billable ? \"Billable\" : \"Paid\"}\n                        </TableCell>\n                        <TableCell>\n                          <NumberFormat\n                            value={data.qty * 25}\n                            displayType={\"text\"}\n                            thousandSeparator={true}\n                            prefix=\"$\"\n                          />\n                        </TableCell>\n                        <TableCell>{data.bill_by}</TableCell>\n                      </TableBody>\n                    );\n                  })} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default LedgerTImeList;\n","/** @format */\n\nimport { Typography, Box, Grid } from \"@mui/material\";\nimport React, { Fragment } from \"react\";\nimport Fillters from \"./Fillters\";\nimport LedgerCards from \"./LedgerCards\";\nimport LedgerTimeList from \"./LedgerTImeList\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LegderDashbard = () => {\n  return (\n    <Fragment>\n      <Grid item xs={12}>\n        <Box>\n          <LedgerCards />\n          <Fillters />\n          <LedgerTimeList />\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LegderDashbard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box, Typography, Paper, TextField } from \"@mui/material\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LedgerDoc = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={1}>\n        <Grid item lg={4} sx={{}}>\n          <Box\n            sx={{\n              width: \"80%\",\n              minHeight: \"25rem\",\n              padding: \"5rem 2rem 5rem 2rem\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            MS Word Document On Pleading or Non Pleading Paper\n          </Box>\n        </Grid>\n        <Grid item lg={4}>\n          <Box\n            sx={{\n              padding: \"5rem 2rem 5rem 2rem\",\n              minHeight: \"25rem\",\n              width: \"80%\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            Space for 2nd Document to be opend if user wants it\n          </Box>\n        </Grid>\n        <Grid item lg={4}>\n          <Grid container>\n            <Grid item lg={12}>\n              <Box component={Paper} p={2} sx={{ borderRadius: \"1rem\" }}>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n              </Box>\n            </Grid>\n            <Grid item lg={12}>\n              <Box component={Paper} mt={2} p={2} sx={{ borderRadius: \"1rem\" }}>\n                <TextField\n                  fullWidth\n                  multiline\n                  rows={5}\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"filled\"\n                  name=\"detail\"\n                  type=\"text\"\n                  value=\"Quick Notes\"\n                  id=\"detail\"\n                  sx={{ borderRadius: \"1rem\" }}\n                />\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LedgerDoc;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  RadioGroup,\n  FormLabel,\n  FormControl,\n  FormControlLabel,\n  Radio,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { ActionAlerts, GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst Time = () => {\n  const [pickDate, setPickDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [timeToggle, setTimeToggle] = useToggle(true);\n  const [billable, setBillable] = useToggle(false);\n\n  // const [bill, setBill] = useToggle(false);\n  const [time, setTime] = useState(\"\");\n  const [timeData, setTimeData] = useState({\n    contact: 0,\n    matter_name: 0,\n    category: \"\",\n    sub_category: \"\",\n    // time: \"\",\n    hard: false,\n    soft: false,\n    unit: 0,\n    qty: 0,\n    rate: 0,\n    file: \"\",\n    detail: \"\",\n    bill_by: 0,\n    note: \"\",\n  });\n\n  const {\n    contact,\n    matter_name,\n    category,\n    sub_category,\n    hard,\n    soft,\n    unit,\n    // time,\n    qty,\n    rate,\n    file,\n    detail,\n    bill_by,\n\n    note,\n  } = timeData;\n  const onChange = (e) =>\n    setTimeData({ ...timeData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    let date = GetDate(pickDate);\n\n    const body = JSON.stringify({\n      contact,\n      matter_name,\n      category,\n      sub_category,\n      hard,\n      soft,\n      unit,\n      qty,\n      rate,\n      time,\n      date,\n      detail,\n      bill_by,\n      billable,\n      note,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/add-time/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  return (\n    <Fragment>\n      <Box component=\"form\" Validate onSubmit={(e) => onSubmit(e)}>\n        <Typography component=\"h3\" variant=\"h4\">\n          Time\n        </Typography>\n        <Grid\n          container\n          spacing={2}\n          mt={2}\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n          }}\n        >\n          <Grid item xs={12}>\n            <Grid container p={3}>\n              <Grid item xs={6}>\n                <FormControlLabel\n                  size=\"large\"\n                  label=\"Time\"\n                  labelPlacement=\"start\"\n                  control={\n                    <Switch\n                      size=\"large\"\n                      checked={timeToggle}\n                      onChange={(e) => setTimeToggle(e)}\n                    />\n                  }\n                />\n                {timeToggle ? null : (\n                  <Box>\n                    <FormControl component=\"fieldset\">\n                      <FormLabel component=\"legend\">Expense</FormLabel>\n                      <RadioGroup\n                        row\n                        aria-label=\"expense\"\n                        defaultValue=\"\"\n                        name=\"expense\"\n                        id=\"expense\"\n                      >\n                        <FormControlLabel\n                          value=\"hard\"\n                          control={<Radio />}\n                          label=\"Hard\"\n                        />\n                        <FormControlLabel\n                          value=\"soft\"\n                          control={<Radio />}\n                          label=\"Soft\"\n                        />\n                      </RadioGroup>\n                    </FormControl>\n                  </Box>\n                )}\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"matter\"\n                  label=\"matter\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"matter\"\n                  autoComplete=\"matter\"\n                  disabled\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"contact\"\n                  label=\"contact\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"contact\"\n                  autoComplete=\"contact\"\n                  disabled\n                />\n              </Grid>\n            </Grid>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"category\"\n              label=\"category\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"category\"\n              autoComplete=\"category\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"sub_category\"\n              label=\"sub_category\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"sub_category\"\n              autoComplete=\"sub_category\"\n            />\n            {timeToggle ? (\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"rate\"\n                label=\"rate\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"rate\"\n                autoComplete=\"rate\"\n              />\n            ) : (\n              <Fragment>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"unit\"\n                  label=\"unit\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"unit\"\n                  autoComplete=\"unit\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"qty\"\n                  label=\"Qty\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"qty\"\n                  autoComplete=\"qty\"\n                />\n                <Box m={1}>\n                  <Typography component=\"lable\"> Receipt(s) </Typography>\n\n                  <Button variant=\"contained\" disabled>\n                    + Attach File\n                  </Button>\n                </Box>\n              </Fragment>\n            )}\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"HH:MM\"\n              mask={[\"H\", \"H\", \"M\", \"M\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Time\"\n              name=\"time\"\n              id=\"time\"\n              value={time}\n              type=\"text\"\n              onValueChange={(e) => setTime(e.value)}\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask=\"____-__-__\"\n                label=\"Date\"\n                value={pickDate}\n                name=\"pickdate\"\n                id=\"pickdate\"\n                onChange={(e) => setPickDate(e)}\n                renderInput={(params) => <TextField size=\"small\" {...params} />}\n              />\n            </LocalizationProvider>\n\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"detail\"\n              label=\"detail\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"detail\"\n              autoComplete=\"detail\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bill_by\"\n              label=\"bill_by\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"bill_by\"\n              autoComplete=\"bill_by\"\n            />\n            <FormControlLabel\n              size=\"large\"\n              label=\"Billable\"\n              labelPlacement=\"start\"\n              control={\n                <Switch\n                  size=\"large\"\n                  checked={billable}\n                  onChange={() => setBillable(billable)}\n                />\n              }\n            />\n            <br />\n          </Grid>\n        </Grid>\n        <Grid container>\n          <Grid item lg={12}>\n            <TextField\n              fullWidth\n              multiline\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"note\"\n              rows={4}\n              // label=\"note\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              placeholder=\"Private / internal notes\"\n              id=\"note\"\n              autoComplete=\"note\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          sx={{ float: \"right\" }}\n          endIcon={<SaveIcon />}\n        >\n          Save\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Time;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport LedgerActivity from \"./LedgerActivity\";\nimport LegderDashbard from \"./LedgerDashbard\";\nimport LedgerDoc from \"./LedgerDoc\";\nimport LedgerTImeList from \"./LedgerTImeList\";\nimport Time from \"./Time\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Ledger\">\n          <LegderDashbard />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Documents\">\n          <LedgerDoc />\n        </div>\n        <div label=\"Time\">\n          <Time />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst SubCategory = () => {\n  const [subCategory, setSubCategory] = useState([]);\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/sub-category/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setSubCategory(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/sub-category/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        setStatus(res.statusText);\n      })\n      .catch((err) => setStatus(err.statusText));\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/sub-category/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n      })\n      .catch((err) => {\n        FetchData();\n      });\n  };\n  const showSubcategory = () => {\n    if (subCategory.length === 0) {\n      return <p>No data found...</p>;\n    } else\n      return subCategory.map((data) => (\n        <Box mt={1}>\n          <List>\n            <ListItem disablePadding>\n              <ListItemText>{data.name}</ListItemText>\n              <Button\n                variant=\"contained\"\n                value={data.id}\n                onClick={() => handleDelete(data.id)}\n                sx={{\n                  borderRadius: \"0.5rem\",\n                  float: \"right\",\n                }}\n              >\n                <ClearIcon />\n              </Button>\n            </ListItem>\n          </List>\n        </Box>\n      ));\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New Sub-Category\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Add New Sub-Category\"}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Sub-Category Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? showSubcategory() : <Typography>Loading ...</Typography>}\n    </Fragment>\n  );\n};\n\nexport default SubCategory;\n","/** @format */\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst catHandler = (id) => {\n  console.log(id);\n};\n\nconst Category = () => {\n  const [category, setCategory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/category/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setCategory(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/category/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/category/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const showCategory = () => {\n    if (category.length === 0) {\n      return <p> no data found...</p>;\n    } else\n      return category.map((data) => (\n        <Box mt={1}>\n          <List>\n            <ListItem disablePadding>\n              <ListItemText>{data.name}</ListItemText>\n              <Button\n                variant=\"contained\"\n                value={data.id}\n                onClick={() => handleDelete(data.id)}\n                sx={{\n                  borderRadius: \"0.5rem\",\n                  float: \"right\",\n                }}\n              >\n                <ClearIcon />\n              </Button>\n            </ListItem>\n          </List>\n        </Box>\n      ));\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New category\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Add New Category\"}</DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Category Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? showCategory() : <Typography>Loading ...</Typography>}\n    </Fragment>\n  );\n};\n\nexport default Category;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Classification = () => {\n  const [classification, setClassification] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/classification/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setClassification(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/classification/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        setStatus(res.statusText);\n        return <ActionAlerts value={{ status: status }} />;\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/api/classification/`,\n        body,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        return <ActionAlerts value={{ status: res.statusText }} />;\n      })\n      .catch((err) => {\n        FetchData();\n        return <ActionAlerts value={{ status: err.statusText }} />;\n      });\n  };\n  const showClassification = () => {\n    if (classification.length === 0) {\n      return <p>No data found...</p>;\n    } else\n      return classification.map((data) => (\n        <Box mt={1}>\n          <List>\n            <ListItem disablePadding>\n              <ListItemText>{data.name}</ListItemText>\n              <Button\n                variant=\"contained\"\n                value={data.id}\n                onClick={() => handleDelete(data.id)}\n                sx={{\n                  borderRadius: \"0.5rem\",\n                  float: \"right\",\n                }}\n              >\n                <ClearIcon />\n              </Button>\n            </ListItem>\n          </List>\n        </Box>\n      ));\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New Classification\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Add New Classification\"}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Classification Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? showClassification() : <Typography>Loading ...</Typography>}\n    </Fragment>\n  );\n};\n\nexport default Classification;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Typography, Grid, Button, Box } from \"@mui/material\";\n\nimport SubCategory from \"./SubCategory\";\nimport Category from \"./Category\";\nimport Classification from \"./Classification\";\n\nconst ManageCategory = () => {\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={8}>\n          <Typography component=\"h3\" variant=\"h5\">\n            Manage Category, Sub-category, Classification\n          </Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Box sx={{ float: \"right\" }}>\n            <Button variant=\"contained\" color=\"error\">\n              Delete Checked\n            </Button>\n          </Box>\n        </Grid>\n\n        <Grid item lg={12}>\n          <Grid container spacing={5} mt={1}>\n            <Grid item lg={4}>\n              <Category />\n            </Grid>\n            <Grid item lg={4}>\n              <SubCategory />\n            </Grid>\n            <Grid item lg={4}>\n              <Classification />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ManageCategory;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Button,\n  Typography,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport { ActionAlerts, GetTime, GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Contact = () => {\n  const [clientNo, setClientNo] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [ssn, setSsn] = useState(\"\");\n  const [mobileNo, setMobileNo] = useState(\"\");\n  const [homeNo, setHomeNo] = useState(\"\");\n  const [officeNo, setOfficeNo] = useState(\"\");\n  const [faxNo, setFaxNo] = useState(\"\");\n  const [otherNo, setOtherNo] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [plus4, setPlus4] = useState(\"\");\n  const [zip2, setZip2] = useState(\"\");\n  const [plus42, setPlus42] = useState(\"\");\n\n  const [contactData, setContactData] = useState({\n    // company info\n    company_name: \"\",\n    website: \"\",\n    ger_email: \"\",\n    billing_email: \"\",\n    // address\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    note: \"\",\n    f_name: \"\",\n    l_name: \"\",\n    email_1: \"\",\n    email_2: \"\",\n    email_3: \"\",\n    // other address\n    street2: \"\",\n    suite2: \"\",\n    city2: \"\",\n    state2: \"\",\n    office: \"\",\n    team: \"\",\n    member: \"\",\n    assign_to: \"\",\n    contact: \"\",\n    relation: \"\",\n  });\n\n  const {\n    company_name,\n    website,\n    ger_email,\n    billing_email,\n    street,\n    suite,\n    city,\n    state,\n    note,\n    f_name,\n    l_name,\n    email_1,\n    email_2,\n    email_3,\n    street2,\n    suite2,\n    city2,\n    state2,\n    office,\n    team,\n    member,\n    assign_to,\n    contact,\n    relation,\n  } = contactData;\n\n  const onChange = (e) => {\n    e.persist();\n    setContactData({ ...contactData, [e.target.name]: e.target.value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    //   let date = GetDate(pickDate);\n    //   const body = JSON.stringify({\n    //     company_name,\n    //     website,\n    //     ger_email,\n    //     billing_email,\n    //     street,\n    //     suite,\n    //     city,\n    //     state,\n    //     zip,\n    //     plus4,\n    //     client_no,\n    //     f_name,\n    //     l_name,\n    //     dob,\n    //     ssn,\n    //     mobile_no,\n    //     home_no,\n    //     office_no,\n    //     fax_no,\n    //     other_no,\n    //     email_1,\n    //     email_2,\n    //     email_3,\n    //     street2,\n    //     suite2,\n    //     city2,\n    //     state2,\n    //     zip2,\n    //     plus42,\n    //     office,\n    //     team,\n    //     member,\n    //     assign_to,\n    //     contact,\n    //     relation,\n    //   });\n    //   axios\n    //     .post(`${process.env.REACT_APP_API_URL}/api/contact/`, body, CONFIG)\n    //     .then((res) => {\n    //       <ActionAlerts value={{ status: res.statusText, message: \"Success\" }} />;\n    //     })\n    //     .catch((err) => {\n    //       <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />;\n    //     });\n    //   console.log(body);\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container p={2}>\n          <Grid item xs={6}>\n            <Typography component=\"h4\" variant=\"h5\">\n              Company info\n            </Typography>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"company_name\"\n              label=\"Company Name\"\n              type=\"text\"\n              value={company_name}\n              onChange={(e) => onChange(e)}\n              id=\"company_name\"\n              autoComplete=\"company_name\"\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Client #\"\n              id=\"clientno\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"clientno\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={clientNo}\n              onValueChange={(e) => setClientNo(e.value)}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"First Name\"\n              label=\"f_name\"\n              type=\"text\"\n              value={f_name}\n              onChange={(e) => onChange(e)}\n              id=\"f_name\"\n              autoComplete=\"f_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"Last Name\"\n              label=\"l_name\"\n              type=\"text\"\n              value={l_name}\n              onChange={(e) => onChange(e)}\n              id=\"l_name\"\n              autoComplete=\"l_name\"\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"DOB\"\n              id=\"dob\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              name=\"dob\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={dob}\n              onValueChange={(e) => setDob(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"#### #### ##\"\n              customInput={TextField}\n              label=\"SSN\"\n              id=\"ssn\"\n              name=\"ssn\"\n              value={ssn}\n              type=\"text\"\n              onValueChange={(e) => setSsn(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Mobile #\"\n              id=\"mobile_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"mobile_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={mobileNo}\n              onValueChange={(e) => setMobileNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Home #\"\n              id=\"home_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"home_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={homeNo}\n              onValueChange={(e) => setHomeNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Office #\"\n              id=\"offlice_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"office_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={officeNo}\n              onValueChange={(e) => setOfficeNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Fax #\"\n              id=\"fax_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"fax_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={faxNo}\n              onValueChange={(value) => setFaxNo(value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Other #\"\n              id=\"other_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"other_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={otherNo}\n              onValueChange={(e) => setOtherNo(e.value)}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_1\"\n              label=\"Email 1\"\n              type=\"email\"\n              value={email_1}\n              onChange={(e) => onChange(e)}\n              id=\"email_1\"\n              autoComplete=\"email_1\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_2\"\n              label=\"Email 2\"\n              type=\"email\"\n              value={email_2}\n              onChange={(e) => onChange(e)}\n              id=\"email_2\"\n              autoComplete=\"email_2\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_3\"\n              label=\"Email 3\"\n              value={email_3}\n              type=\"email\"\n              onChange={(e) => onChange(e)}\n              id=\"email_3\"\n              autoComplete=\"email_3\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"street\"\n              label=\"street\"\n              type=\"text\"\n              value={street}\n              onChange={(e) => onChange(e)}\n              id=\"street\"\n              autoComplete=\"street\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"suite\"\n              label=\"Suite\"\n              type=\"text\"\n              value={suite}\n              onChange={(e) => onChange(e)}\n              id=\"suite\"\n              autoComplete=\"suite\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"City\"\n              value={city}\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n              autoComplete=\"city\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"State\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n              autoComplete=\"state\"\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"zip\"\n              label=\"zip\"\n              type=\"text\"\n              id=\"zip\"\n              type=\"text\"\n              value={zip}\n              onValueChange={(e) => setZip(e.value)}\n            />\n\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"plus4\"\n              label=\"+4\"\n              type=\"text\"\n              id=\"plus4\"\n              type=\"text\"\n              value={plus4}\n              onValueChange={(e) => setPlus4(e.value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              multiline\n              rows={5}\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"Notes...\"\n              label=\"note\"\n              type=\"text\"\n              value={note}\n              onChange={(e) => onChange(e)}\n              id=\"note\"\n              autoComplete=\"note\"\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <Typography component=\"h4\" variant=\"h6\">\n              Alternate Information\n            </Typography>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"webiste\"\n              label=\"Webiste\"\n              type=\"text\"\n              value={website}\n              onChange={(e) => onChange(e)}\n              id=\"webiste\"\n              autoComplete=\"webiste\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"ger_email\"\n              label=\"General Email\"\n              type=\"text\"\n              value={ger_email}\n              onChange={(e) => onChange(e)}\n              id=\"ger_email\"\n              autoComplete=\"ger_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"billing_email\"\n              label=\"Invoice/ Billing Email\"\n              type=\"text\"\n              value={billing_email}\n              onChange={(e) => onChange(e)}\n              id=\"billing_email\"\n              autoComplete=\"billing_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"street\"\n              label=\"Street\"\n              type=\"text\"\n              value={street2}\n              onChange={(e) => onChange(e)}\n              id=\"street\"\n              autoComplete=\"street\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"suite\"\n              label=\"Suite\"\n              type=\"text\"\n              value={suite2}\n              onChange={(e) => onChange(e)}\n              id=\"suite\"\n              autoComplete=\"suite\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"City\"\n              type=\"text\"\n              value={city2}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n              autoComplete=\"city\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"State\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n              autoComplete=\"state\"\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"zip2\"\n              label=\"Zip\"\n              type=\"text\"\n              id=\"zip2\"\n              type=\"text\"\n              value={zip2}\n              onValueChange={(e) => setZip2(e.value)}\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"plus42\"\n              label=\"+4\"\n              type=\"text\"\n              id=\"plus42\"\n              type=\"text\"\n              value={plus42}\n              onValueChange={(e) => setPlus42(e.value)}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Source\n                </Typography>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"office\"\n                  label=\"Office\"\n                  type=\"text\"\n                  value={office}\n                  onChange={(e) => onChange(e)}\n                  id=\"office\"\n                  autoComplete=\"office\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"team\"\n                  label=\"Team\"\n                  type=\"text\"\n                  value={team}\n                  onChange={(e) => onChange(e)}\n                  id=\"team\"\n                  autoComplete=\"team\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"member\"\n                  label=\"Member\"\n                  type=\"text\"\n                  value={member}\n                  onChange={(e) => onChange(e)}\n                  id=\"member\"\n                  autoComplete=\"member\"\n                />\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Assigned To\n                </Typography>\n                <FormControl\n                  size=\"small\"\n                  sx={{ mt: 2, mb: 2, minWidth: \"14rem\" }}\n                >\n                  <InputLabel id=\"demo-simple-select-autowidth-label\">\n                    Assigned To\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-autowidth-label\"\n                    id=\"demo-simple-select-autowidth\"\n                    value={assign_to}\n                    onChange={(e) => onChange(e)}\n                    autoWidth\n                    label=\"assign_to\"\n                  >\n                    <MenuItem value=\"\">\n                      <em>Auto Assign</em>\n                    </MenuItem>\n                    <MenuItem value={10}>Twenty</MenuItem>\n                    <MenuItem value={21}>Twenty one</MenuItem>\n                    <MenuItem value={22}>Twenty one and a half</MenuItem>\n                  </Select>\n                </FormControl>\n\n                <Button variant=\"contained\" color=\"primary\">\n                  Auto Assign\n                </Button>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Linked Contacts\n                </Typography>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"contact\"\n                  label=\"Contact\"\n                  type=\"text\"\n                  value={contact}\n                  onChange={(e) => onChange(e)}\n                  id=\"contact\"\n                  autoComplete=\"contact\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"relation\"\n                  label=\"Relation\"\n                  type=\"text\"\n                  value={relation}\n                  onChange={(e) => onChange(e)}\n                  id=\"relation\"\n                  autoComplete=\"relation\"\n                />\n              </Grid>\n            </Grid>\n            <Box sx={{ float: \"right\" }}>\n              <Button variant=\"contained\" type=\"submit\" endIcon={<SaveIcon />}>\n                Save\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Contact;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  Button,\n  TextField,\n  Checkbox,\n  Grid,\n  FormControlLabel,\n  Tab,\n  Paper,\n  Box,\n  Typography,\n  Switch,\n} from \"@mui/material\";\nimport { TabList, TabContext, TabPanel } from \"@mui/lab\";\nimport { connect } from \"react-redux\";\nimport KeyboardArrowRightIcon from \"@mui/icons-material/KeyboardArrowRight\";\nimport axios from \"axios\";\n\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\nimport NumberFormat from \"react-number-format\";\n\n// import { update_profile } from \"../../store/actions/profile\";\n\nconst Profile = ({ profile }) => {\n  const [value, setValue] = React.useState(\"1\");\n  const [gradYear, setGradYear] = useState(\"\");\n  const [barDate, setBarDate] = useState(\"\");\n  const [underGradYear, setUnderGradYear] = useState(\"\");\n\n  const [mobileNo, setMobileNo] = useState(\"\");\n  const [phoneNo, setPhoneNo] = useState(\"\");\n  const [barNo, setBarNo] = useState(\"\");\n  const [practiceTime, setPracticeTime] = useState(\"\");\n  const [longestTenure, setLongestTenure] = useState(\"\");\n  const [averageTenure, setAverageTenure] = useState(\"\");\n  const [currentTenure, setCurrentTenure] = useState(\"\");\n  const [zip2, setZip2] = useState(\"\");\n  const [plus42, setPlus42] = useState(\"\");\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    mobile: 0,\n    phone: 0,\n    state: \"\",\n    city: \"\",\n    language: \"\",\n    locate: false,\n    search_active: false,\n    law_school: \"\",\n    grad_year: \"\",\n    bar_admit_date: \"\",\n    undergrad_school: \"\",\n    undergrad_area: \"\",\n    undergrad_year: \"\",\n    bar_no: 0,\n    admitted_practice: \"\",\n    practice_time: \"\",\n    longest_tenure: \"\",\n    average_tenure: \"\",\n    current_tenure: \"\",\n    past_bar_companies_no: \"\",\n    primary_area: \"\",\n  });\n  const {\n    username,\n    email,\n    mobile,\n    phone,\n    state,\n    city,\n    language,\n    locate,\n    search_active,\n    law_school,\n    grad_year,\n    bar_admit_date,\n    undergrad_school,\n    undergrad_area,\n    undergrad_year,\n    bar_no,\n    admitted_practice,\n    practice_time,\n    longest_tenure,\n    average_tenure,\n    current_tenure,\n    past_bar_companies_no,\n    primary_area,\n  } = formData;\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let id = profile.id;\n    const body = JSON.stringify({\n      username,\n      email,\n      mobile,\n      phone,\n      state,\n      city,\n      language,\n      locate,\n      search_active,\n      law_school,\n      grad_year,\n      bar_admit_date,\n      undergrad_school,\n      undergrad_area,\n      undergrad_year,\n      bar_no,\n      admitted_practice,\n      practice_time,\n      longest_tenure,\n      average_tenure,\n      current_tenure,\n      past_bar_companies_no,\n      primary_area,\n    });\n    console.log(body);\n    axios\n      .patch(\n        `${process.env.REACT_APP_API_URL}/api/profile/${id}/`,\n        body,\n        CONFIG,\n      )\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Fragment>\n      {/* {profile ? ( */}\n      <Box p={5}>\n        <Paper elevation={5} sx={{ borderRadius: 3 }}>\n          <TabContext value={value} p={8}>\n            <Box component=\"form\" onSubmit={(e) => onSubmit(e)}>\n              <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n                <TabList\n                  onChange={handleChange}\n                  aria-label=\"lab API tabs example\"\n                >\n                  <Tab label=\"Profile\" value=\"1\" />\n                  <Tab label=\"Education\" value=\"2\" />\n                  <Tab label=\"Work History\" value=\"3\" />\n                </TabList>\n              </Box>\n              <TabPanel value=\"1\">\n                <Grid container spacing={2}>\n                  <Grid item sx={12} xs={4}>\n                    <TextField\n                      margin=\"normal\"\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Username\"\n                      value={username}\n                      id=\"username\"\n                      name=\"username\"\n                      type=\"text\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.username}\n                      disabled\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Mobile #\"\n                      id=\"mobile\"\n                      thousandsGroupStyle=\"thousand\"\n                      format=\"+1 (###) ###-####\"\n                      mask=\"_\"\n                      customInput={TextField}\n                      name=\"mobile\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={mobileNo}\n                      onValueChange={(e) => setMobileNo(e.value)}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Phone #\"\n                      id=\"phone\"\n                      thousandsGroupStyle=\"thousand\"\n                      format=\"+1 (###) ###-####\"\n                      mask=\"_\"\n                      customInput={TextField}\n                      name=\"phone\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={phoneNo}\n                      onValueChange={(e) => setPhoneNo(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Email\"\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      value={email}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.email}\n                      disabled\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"State\"\n                      id=\"state\"\n                      name=\"state\"\n                      type=\"text\"\n                      value={state}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.state}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"City\"\n                      id=\"city\"\n                      name=\"city\"\n                      type=\"text\"\n                      value={city}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.city}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Language(s)\"\n                      value={language}\n                      id=\"language\"\n                      name=\"language\"\n                      type=\"text\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.language}\n                    />\n                    <FormControlLabel\n                      fullWidth\n                      control={<Switch defaultChecked />}\n                      label=\"Willing to locate\"\n                      id=\"locate\"\n                      name=\"locate\"\n                      value={locate}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.locate}\n                    />\n                    <FormControlLabel\n                      fullWidth\n                      control={<Switch defaultChecked />}\n                      label=\"Search Type (Active/ Passiv)\"\n                      id=\"search_active\"\n                      name=\"search_active\"\n                      value={search_active}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.search_active}\n                    />\n                    <br />\n                    <br />\n                    <Button\n                      m={5}\n                      variant=\"contained\"\n                      sx={{\n                        float: \"right\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                      onClick={() => setValue(\"2\")}\n                      endIcon={<KeyboardArrowRightIcon />}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n              <TabPanel value=\"2\">\n                <Grid container spacing={2}>\n                  <Grid item xs={4}>\n                    <TextField\n                      margin=\"normal\"\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Law School\"\n                      id=\"law_school\"\n                      name=\"law_school\"\n                      value={law_school}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.law_school}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Grad year\"\n                      id=\"grad_year\"\n                      format=\"####\"\n                      placeholder=\"YYYY\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n                      customInput={TextField}\n                      name=\"grad_year\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={gradYear}\n                      onValueChange={(e) => setGradYear(e.value)}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"####/##/##\"\n                      placeholder=\"YYYY/MM/DD\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n                      customInput={TextField}\n                      label=\"Bar Admittance Date\"\n                      id=\"bar_admit_date\"\n                      name=\"bar_admit_date\"\n                      value={barDate}\n                      onValueChange={(e) => setBarDate(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Undergrad school\"\n                      id=\"undergrad_school\"\n                      name=\"undergrad_school\"\n                      value={undergrad_school}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.undergrad_school}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Undergrade area of study\"\n                      id=\"undergrad_area\"\n                      name=\"undergrad_area\"\n                      value={undergrad_area}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.undergrad_area}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"####\"\n                      placeholder=\"YYYY\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n                      customInput={TextField}\n                      label=\"Undergrade year\"\n                      id=\"undergrad_year\"\n                      name=\"undergrad_year\"\n                      value={underGradYear}\n                      type=\"text\"\n                      onValueChange={(e) => setUnderGradYear(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"#### #### ##\"\n                      customInput={TextField}\n                      label=\"Bar #\"\n                      id=\"bar_no\"\n                      name=\"bar_no\"\n                      value={barNo}\n                      type=\"text\"\n                      onValueChange={(e) => setBarNo(e.value)}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Admitted practice (state & District)\"\n                      value={admitted_practice}\n                      id=\"admitted_practice\"\n                      name=\"admitted_practice\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.admitted_practice}\n                    />\n                    <br />\n                    <br />\n                    <Button\n                      variant=\"contained\"\n                      mb={5}\n                      sx={{\n                        float: \"right\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                      onClick={() => setValue(\"3\")}\n                      endIcon={<KeyboardArrowRightIcon />}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n              <TabPanel value=\"3\">\n                <Grid container spacing={2}>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Practive Time (months / years)\"\n                      id=\"practice_time\"\n                      name=\"practice_time\"\n                      value={practiceTime}\n                      type=\"text\"\n                      onValueChange={(e) => setPracticeTime(e.value)}\n                    />\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Longest tenure (months / years)\"\n                      id=\"longest_tenure\"\n                      name=\"longest_tenure\"\n                      value={longestTenure}\n                      type=\"text\"\n                      onValueChange={(e) => setLongestTenure(e.value)}\n                    />\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Average tenure (months / years)\"\n                      value={averageTenure}\n                      id=\"average_tenure\"\n                      name=\"average_tenure\"\n                      type=\"text\"\n                      onValueChange={(e) => setAverageTenure(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Time at Current Company (months / years)\"\n                      id=\"current_tenure\"\n                      name=\"current_tenure\"\n                      value={currentTenure}\n                      type=\"text\"\n                      onValueChange={(e) => setCurrentTenure(e.value)}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"# of Companies Post Bar\"\n                      id=\"past_bar_companies_no\"\n                      name=\"past_bar_companies_no\"\n                      value={past_bar_companies_no}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.past_bar_companies_no}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Primary areas of Law\"\n                      id=\"primary_area\"\n                      name=\"primary_area\"\n                      value={primary_area}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.primary_area}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <Button\n                      variant=\"contained\"\n                      type=\"submit\"\n                      sx={{\n                        float: \"right\",\n                        marginTop: \"10rem\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n            </Box>\n          </TabContext>\n        </Paper>\n      </Box>\n      {/* // ) : ( // <Typography>Something wend wrong!</Typography>\n      // )} */}\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n  profile: state.auth.profile,\n});\n\nexport default connect(mapStateToProps)(Profile);\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Menu, MenuItem, Divider } from \"@mui/material\";\n\nconst ViewTasks = () => {\n  return (\n    <Fragment>\n      <MenuItem>Profile</MenuItem>\n      <MenuItem>Account</MenuItem>\n      <MenuItem>Setting</MenuItem>\n      <Divider sx={{ my: 0.5 }} />\n      <MenuItem>Logout</MenuItem>\n    </Fragment>\n  );\n};\n\nexport default ViewTasks;\n","/** @format */\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  TextField,\n  Switch,\n  FormControlLabel,\n  Box,\n  Grid,\n  Button,\n  Typography,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport axios from \"axios\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nimport { ActionAlerts, GetDate } from \"../../utils/ActionAlerts\";\n\nconst CreateTask = () => {\n  const [dueDate, setDueDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [bill, setBill] = useToggle(true);\n  const [matterData, setMatterData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isPrivate, setIsPrivate] = useToggle(true);\n  const [file, setFile] = useState(\"\");\n  const [taskData, setTaskData] = useState({\n    matter_id: 0,\n    matter_contact: 0,\n    matter: \"\",\n    task: \"\",\n    filename: \"\",\n    assign_to: 0,\n    detail: \"\",\n  });\n\n  const {\n    matter_id,\n    matter_contact,\n    matter,\n    task,\n    filename,\n    assign_to,\n    detail,\n  } = taskData;\n\n  const onChange = (e) =>\n    setTaskData({ ...taskData, [e.target.name]: e.target.value });\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/matter/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setMatterData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    console.log(matter_id, matter_contact, matter, task);\n    let due_at = GetDate(dueDate);\n    let is_billable = bill;\n    let is_private = isPrivate;\n\n    const body = JSON.stringify({\n      matter_id,\n      matter_contact,\n      matter,\n      task,\n      file,\n      is_billable,\n      is_private,\n      due_at,\n      assign_to,\n      detail,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/new-task/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n          \"& .MuiSelect-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create New Task\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_id\"\n              label=\"matter_id\"\n              type=\"number\"\n              min=\"0\"\n              value={matter_id}\n              onChange={(e) => onChange(e)}\n              id=\"matter_id\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter\"\n              label=\"matter\"\n              type=\"text\"\n              min=\"0\"\n              value={matter}\n              onChange={(e) => onChange(e)}\n              id=\"matter\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"task\"\n              label=\"Task\"\n              type=\"text\"\n              value={task}\n              onChange={(e) => onChange(e)}\n              id=\"task\"\n              autoComplete=\"task\"\n            />\n            <Box ml={2} mt={1}>\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Attach File \"\n                labelPlacement=\"start\"\n                control={\n                  <input\n                    type=\"file\"\n                    name=\"filename\"\n                    id=\"file\"\n                    onChange={(e) => onChange(e)}\n                  />\n                }\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"file\"\n                label=\"please chose any file\"\n                type=\"text\"\n                min=\"0\"\n                value={filename}\n                onChange={(e) => setFile(filename)}\n                id=\"file\"\n                disabled\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_contact\"\n              label=\"matter_contact\"\n              type=\"number\"\n              min=\"0\"\n              value={matter_contact}\n              onChange={(e) => onChange(e)}\n              id=\"matter_contact\"\n            />\n            <Box p={1}>\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Billable\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    size=\"large\"\n                    checked={bill}\n                    onChange={() => setBill(bill)}\n                  />\n                }\n              />\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Private\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    size=\"large\"\n                    checked={isPrivate}\n                    onChange={() => setIsPrivate(isPrivate)}\n                  />\n                }\n              />\n            </Box>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask=\"____-__-__\"\n                label=\"Due Date\"\n                value={dueDate}\n                name=\"dueDate\"\n                id=\"dueDate\"\n                onChange={(e) => setDueDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"assign_to\"\n              label=\"Assign to\"\n              type=\"number\"\n              value={assign_to}\n              onChange={(e) => onChange(e)}\n              id=\"assign_to\"\n              autoComplete=\"assign_to\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              multiline\n              rows={5}\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"detail\"\n              label=\"Detail\"\n              type=\"text\"\n              value={detail}\n              onChange={(e) => onChange(e)}\n              id=\"detail\"\n            />\n\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{ float: \"right\" }}\n              endIcon={<SaveIcon />}\n            >\n              Save\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateTask;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport ViewTasks from \"./ViewTasks\";\nimport CreateTask from \"./CreateTask\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Task\">\n          <ViewTasks />\n        </div>\n        <div label=\"Create Task\">\n          <CreateTask />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport DashBoard from \"../Admin/DashBoard\";\n\nimport {\n  Box,\n  Typography,\n  Tabs,\n  Tab,\n  IconButton,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\n\nimport TabContext from \"@mui/lab/TabContext\";\nimport TabList from \"@mui/lab/TabList\";\n\nimport TabPanel from \"@mui/lab/TabPanel\";\nimport PropTypes from \"prop-types\";\n\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { MoreVert, Close } from \"@mui/icons-material\";\n\n// components of tabs\nimport Invoice from \"../../Invoice\";\nimport Matter from \"../../Matter\";\nimport Ledger from \"../../Ledger\";\nimport Favorite from \"../../Favorite/Favorites\";\nimport Category from \"../../Category/ManageCategory\";\nimport Contact from \"../../Contact/Contact\";\nimport Profile from \"../../Profile/Profile\";\nimport Tasks from \"../../Tasks\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport {\n  addNewTab,\n  removeNewTab,\n  removeLastNewTab,\n} from \"../../../redux/features/searchTabSlice\";\nimport { addTab, removeTab } from \"../../../redux/features/tabSlice\";\n\nconst data = [\n  { name: \"invoice\", content: <Invoice /> },\n  { name: \"matter\", content: <Matter /> },\n  { name: \"ledger\", content: <Ledger /> },\n  { name: \"favorite\", content: <Favorite /> },\n  { name: \"category\", content: <Category /> },\n  { name: \"contact\", content: <Contact /> },\n  { name: \"profile\", content: <Profile /> },\n  { name: \"tasks\", content: <Tasks /> },\n];\nconst component = {\n  invoice: <Invoice />,\n  matter: <Matter />,\n  ledger: <Ledger />,\n  favorite: <Favorite />,\n  category: <Category />,\n  contact: <Contact />,\n  profile: <Profile />,\n  tasks: <Tasks />,\n};\n\nconst AdminDashboard = () => {\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const tabList = useSelector((state) => state.tabs);\n  const newTabList = useSelector((state) => state.newTabs);\n  const dispatch = useDispatch();\n\n  // search tab will match the text and display tab\n  const [wordEntered, setWordEntered] = useState(\"\");\n\n  const searchItem = () => {\n    let selectedItem = data.filter((value) => {\n      if (value.name === wordEntered) {\n        return true;\n      }\n    });\n  };\n  const handleChangeSearch = (e) => {\n    setWordEntered(e.target.value);\n    let id = tabList.length + 1;\n    dispatch(\n      addTab({\n        id: id,\n        tab: e.target.value,\n      }),\n    );\n    dispatch(removeLastNewTab());\n    setValue(id);\n    searchItem();\n  };\n  const handleRemoveTab = (tab) => {\n    dispatch(removeTab(tab));\n    setValue(0);\n  };\n  const handleRemoveNewTab = (tab) => {\n    dispatch(removeNewTab(tab));\n    setValue(0);\n  };\n\n  const addSearchTab = () => {\n    let id = newTabList.length + 10;\n    setTimeout(\n      dispatch(\n        addNewTab({\n          id: id,\n          name: \"newtab\",\n        }),\n      ),\n      5000,\n    );\n\n    setValue(id);\n  };\n  const displayNewTabsName = () => {\n    if (newTabList) {\n      return newTabList.map((tab) => (\n        <Tab\n          key={tab.id}\n          value={tab.id}\n          label={\n            <span>\n              newtab\n              <IconButton\n                component=\"div\"\n                onClick={() => handleRemoveNewTab(tab)}\n              >\n                <CloseIcon />\n              </IconButton>\n            </span>\n          }\n        />\n      ));\n    } else return null;\n  };\n  const displayTabsName = () => {\n    if (tabList) {\n      return tabList.map((tab) => (\n        <Tab\n          key={tab.id}\n          value={tab.id}\n          label={\n            <span>\n              {\" \"}\n              {tab.name}\n              <IconButton component=\"div\" onClick={() => handleRemoveTab(tab)}>\n                <CloseIcon />\n              </IconButton>\n            </span>\n          }\n        />\n      ));\n    } else return null;\n  };\n  const searchTab = () => {\n    return (\n      <Box\n        noValidate\n        sx={{\n          p: \"2px 4px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          width: \"50%\",\n          borderRadius: \"5rem\",\n          backgroundColor: \"#dfdfdf\",\n        }}\n      >\n        <Select\n          fullWidth\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value=\"\"\n          label=\"Search....\"\n          onChange={handleChangeSearch}\n          sx={{\n            \" & .MuiOutlinedInput-notchedOutline\": {\n              border: \"none\",\n            },\n          }}\n        >\n          {data.map((item, index) => (\n            <MenuItem key={index} value={item.name}>\n              {item.name}\n            </MenuItem>\n          ))}\n        </Select>\n\n        <IconButton type=\"submit\" sx={{ p: \"10px\" }} aria-label=\"search\">\n          {wordEntered.length === 0 ? <SearchIcon /> : <CloseIcon />}\n        </IconButton>\n      </Box>\n    );\n  };\n  const displaySearchTabs = () => {\n    if (newTabList) {\n      return newTabList.map((tab) => (\n        <TabPanel value={tab.id}>{searchTab()}</TabPanel>\n      ));\n    } else return null;\n  };\n  const displayTabs = () => {\n    if (tabList) {\n      return tabList.map((tab) => (\n        <TabPanel value={tab.id}>{component[tab.name]}</TabPanel>\n      ));\n    } else return null;\n  };\n\n  const renderTabs = () => {\n    return (\n      <Box sx={{ width: \"100%\" }}>\n        <TabContext value={value}>\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              variant=\"scrollable\"\n              scrollButtons\n              allowScrollButtonsMobilearia-label=\"lab API tabs example\"\n            >\n              <Tab\n                icon={<MoreVert />}\n                iconPosition=\"start\"\n                label=\"Dashboard\"\n                value={0}\n              />\n\n              {displayTabsName()}\n              {displayNewTabsName()}\n\n              <Tab\n                icon={<MoreVert />}\n                iconPosition=\"start\"\n                label={\n                  <IconButton\n                    component=\"div\"\n                    onClick={() => dispatch(addNewTab())}\n                  >\n                    <AddIcon />\n                  </IconButton>\n                }\n                onClick={addSearchTab}\n                value={100}\n              />\n            </Tabs>\n          </Box>\n          <TabPanel value={0}>\n            <DashBoard />\n          </TabPanel>\n          {displayTabs()}\n          {displaySearchTabs()}\n          <TabPanel value={100}></TabPanel>\n        </TabContext>\n      </Box>\n    );\n  };\n  useEffect(() => {\n    renderTabs();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <Fragment>{renderTabs()}</Fragment>;\n};\n\nexport default AdminDashboard;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { LinearProgress, Box, Grid, Typography } from \"@mui/material\";\n\nconst ProgressBar = () => {\n  const [progress, setProgress] = useState(69);\n  return (\n    <Box paddingLeft={3} paddingRight={3}>\n      <Grid container>\n        <Grid item lg={1} xs={12}>\n          <Typography>{progress}%</Typography>\n        </Grid>\n        <Grid item lg={11} xs={12} mt={2} mb={5}>\n          <LinearProgress variant=\"determinate\" value={progress} />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default ProgressBar;\n","/** @format */\n\nimport React from \"react\";\n\nimport { Typography, Box, Paper, Grid } from \"@mui/material\";\nimport {\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n} from \"@mui/material\";\n\nconst randomDate = (start, end) => {\n  const getDateTime = new Date(\n    start.getTime() + Math.random() * (end.getTime() - start.getTime()),\n  );\n  const date = getDateTime.toLocaleDateString();\n  const hour = getDateTime.getHours();\n  const min = getDateTime.getMinutes();\n\n  return date + \" \" + hour + \":\" + min;\n};\n\nconst Task = () => {\n  return (\n    <Grid container>\n      <Grid item lg={12} xs={12}>\n        <Typography component=\"h5\" variant=\"h6\" color=\"primary\">\n          My Tasks\n        </Typography>\n        <TableContainer component={Paper}>\n          <Table size=\"small\" aria-label=\"a dense table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    ID\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Date\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Subject\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Detail\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow bgColor=\"#e85355\">\n                <TableCell>\n                  <Typography variant=\"caption\">123452</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Submit Document X</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display first 3 links\n                  </Typography>{\" \"}\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"#fd9905\">\n                <TableCell>\n                  <Typography variant=\"caption\">113457</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document Y</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display more details\n                  </Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"#28c570\">\n                <TableCell>\n                  <Typography variant=\"caption\">113455</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document Z</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Note in popup</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"white\">\n                <TableCell>\n                  <Typography variant=\"caption\">113458</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document XY</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display First 3 links\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Task;\n","/** @format */\n\nimport React from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nexport const AdminCards = () => {\n  return (\n    <>\n      <Grid container spacing={1}>\n        <Grid item lg={2} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n                Revenue In\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={2} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n                Revenue out\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={4} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Grid container>\n                <Grid item lg={5} xs={12}>\n                  <Typography\n                    sx={{ fontSize: \"1.3rem\" }}\n                    color=\"blue\"\n                    gutterBottom\n                  >\n                    New Customers\n                  </Typography>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Week:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Month:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={4} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Grid container>\n                <Grid item lg={5}>\n                  <Typography\n                    sx={{ fontSize: \"1.3rem\" }}\n                    color=\"blue\"\n                    gutterBottom\n                  >\n                    Lost Customers\n                  </Typography>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Week:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Month:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport const LawyerCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Projected Billable Hours\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat value={230} displayType={\"text\"} postfix=\"hr\" />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Annual Trending Billable Hours\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat value={768} displayType={\"text\"} postfix=\"hr\" />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nexport const FirmCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={3} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Revenue In\n              </Typography>\n              <Typography\n                variant=\"h5\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={3} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Revenue out\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={6} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Lost Customers\n              </Typography>\n              <Grid container>\n                <Grid item lg={5}>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nexport const CustomerCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={2}>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Balance\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  prefix=\"$\"\n                  thousandSeparator={\",\"}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Payment Due\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat\n                  value={12345}\n                  displayType={\"text\"}\n                  prefix=\"$\"\n                  thousandSeparator={\",\"}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nconst Cards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Revenue In\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Revenue out\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                New Matters\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={3425}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Cards;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n// import axios from 'axios';\n\nimport { Grid } from \"@mui/material\";\n\nimport Calender from \"../Calender\";\nimport ProgressBar from \"../ProgressBar\";\n\nimport Tasks from \"../Tasks\";\nimport { CustomerCards } from \"../Cards\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={3}>\n        <Grid item lg={2} xs={12}>\n          <CustomerCards />\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Calender />\n        </Grid>\n        <Grid item p={2} lg={6} xs={12}>\n          <Tasks />\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <ProgressBar />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Button, Grid, Box, List, ListItem, ListItemText } from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nconst Templates = () => {\n  return (\n    <Fragment>\n      <Grid container mt={1} spacing={1}>\n        <Grid item xs={12} m={2}>\n          <Button variant=\"contained\" size=\"small\">\n            Merge Fields.XLS\n          </Button>\n          <Box sx={{ float: \"right\" }}>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New Doc\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New PDF\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New Email\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Edit\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Save\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Close\n            </Button>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              Word Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>001 - Report Money</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>002 - Report Time</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>003 - Report Billed hours</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              PDF Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>P001 - Write of Execution</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>P002 - Memo of Cost</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>P003 - Settlement Letter</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              Email Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>001 - Invoice Email</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>002 - New Client</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>003 - Firing Client</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              padding: \"15rem 2rem 5rem 2rem\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            Templates can be opened here to edit them. user can add/ remove\n            merge fields directly to the document or PDF\n          </Box>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Templates;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Client/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\n\n\nconst ClientDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default ClientDashboard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nexport const PieChart = () => {\n  const state = {\n    series: [86, 14],\n    options: {\n      chart: {\n        height: 500,\n        type: \"pie\",\n      },\n      plotOptions: {\n        pie: {\n          donut: {\n            size: \"65%\",\n          },\n          dataLabels: {\n            enabled: true,\n            formatter: function (val) {\n              return val + \"%\";\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Prodcutive v. Non-Productive Time\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n        horizontalAlign: \"center\",\n      },\n      colors: [\"#738df5\", \"#eaa3ff\"],\n      labels: [\"Non Productive\", \"Productive\"],\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"bottom\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"pie\"\n      />\n    </Fragment>\n  );\n};\n\nexport const Chart2 = () => {\n  const state = {\n    series: [65],\n\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      labels: [\"Progress\"],\n      plotOptions: {\n        radialBar: {\n          startAngle: -90,\n          endAngle: 90,\n          track: {\n            background: \"#aaa\",\n            startAngle: -90,\n            endAngle: 90,\n          },\n          hollow: {\n            margin: 15,\n            size: \"70%\",\n          },\n        },\n      },\n      title: {\n        text: \"% of Completed Task\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        shade: \"gark\",\n        type: \"horizontal\",\n        gradientToColors: [\"#87D4F9\", \"pink\"],\n        stops: [0, 3],\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"radialBar\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart = () => {\n  const state = {\n    series: [\n      {\n        name: \"user 1\",\n        data: [44, 55, 41, 37, 22, 43, 21],\n      },\n      {\n        name: \"user 2\",\n        data: [53, 32, 33, 52, 13, 43, 32],\n      },\n      {\n        name: \"User 3\",\n        data: [12, 17, 11, 9, 15, 11, 20],\n      },\n      {\n        name: \"User 4\",\n        data: [9, 7, 5, 8, 6, 9, 4],\n      },\n    ],\n    options: {\n      chart: {\n        type: \"bar\",\n        height: 350,\n        stacked: true,\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      plotOptions: {\n        bar: {\n          horizontal: true,\n        },\n      },\n      stroke: {\n        width: 1,\n        borderRadius: 8,\n        colors: [\"#fff\"],\n      },\n\n      title: {\n        text: \"% Indicating User Ranking\",\n      },\n      xaxis: {\n        categories: [\n          \"Word per Min\",\n          \"Matter Completed\",\n          \"Revenue Generated\",\n          \"Articals Submitted\",\n          \"New Client\",\n          \"New Matter\",\n        ],\n        labels: {\n          formatter: function (val) {\n            return val + \"K\";\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: undefined,\n        },\n      },\n      tooltip: {\n        y: {\n          formatter: function (val) {\n            return val + \"K\";\n          },\n        },\n      },\n      fill: {\n        opacity: 1,\n      },\n      color: [\"#738df5\", \"#eaa3ff\", \"#738df5\", \"#eaa3ff\"],\n      legend: {\n        show: false,\n        position: \"top\",\n        horizontalAlign: \"left\",\n        offsetX: 40,\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Grid } from \"@mui/material\";\nimport Calender from \"../Calender\";\nimport Tasks from \"../Tasks\";\nimport { Chart2, PieChart, BarChart } from \"./Chart\";\nimport { LawyerCards } from \"../Cards\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item lg={2}>\n          <LawyerCards />\n        </Grid>\n        <Grid item lg={4}>\n          <PieChart />\n        </Grid>\n        <Grid item lg={6}>\n          <Tasks />\n        </Grid>\n        <Grid item lg={4}>\n          <Chart2 />\n        </Grid>\n        <Grid item lg={8}>\n          <BarChart />\n        </Grid>\n        <Grid item>\n          <Calender />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Lawyer/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\nconst LawyerDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default LawyerDashboard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nexport const Chart = () => {\n  const state = {\n    series: [110, 110, 19, 80],\n    options: {\n      chart: {\n        height: 500,\n        type: \"donut\",\n      },\n      plotOptions: {\n        pie: {\n          donut: {\n            size: \"55%\",\n          },\n          dataLabels: {\n            enabled: true,\n            formatter: function (val) {\n              return val;\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Matter by Type\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n      colors: [\"#03a5fc\", \"#fcd200\", \"#fca400\", \"#003f5c\"],\n      labels: [\n        \"Business Contacts\",\n        \"Criminal Defence\",\n        \"Personal Injury\",\n        \"Family Law\",\n      ],\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"bottom\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"donut\"\n      />\n    </Fragment>\n  );\n};\n\nexport const Chart2 = () => {\n  const state = {\n    series: [65],\n\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      labels: [\"Progress\"],\n      plotOptions: {\n        radialBar: {\n          startAngle: -90,\n          endAngle: 90,\n          track: {\n            // background: \"#333\",\n            startAngle: -90,\n            endAngle: 90,\n          },\n          hollow: {\n            margin: 15,\n            size: \"70%\",\n          },\n        },\n      },\n      title: {\n        text: \"% of Completed Task\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n    },\n    fill: {\n      type: \"solid\",\n      gradient: {\n        shade: \"dark\",\n        type: \"horizontal\",\n        gradientToColors: [\"#87D4F9\"],\n        stops: [0, 100],\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"radialBar\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart = () => {\n  const state = {\n    series: [\n      {\n        name: \"Profit\",\n        data: [640, 505, 210, 108, 760, 410, 440, 140, 660, 320],\n      },\n      {\n        name: \"Loss\",\n        data: [530, 302, 420, 220, 290, 800, 160, 490, 708, 110],\n      },\n    ],\n\n    options: {\n      colors: [\"#e85355\", \"#28c570\"],\n      chart: {\n        height: 100,\n        type: \"bar\",\n      },\n      plotOptions: {\n        bar: {\n          horizontal: false,\n        },\n      },\n      dataLabels: {\n        enabled: false,\n        formatter: function (val) {\n          return \"$\" + val;\n        },\n      },\n      tooltip: {\n        y: {\n          formatter: function (val) {\n            return \"$ \" + val + \"\";\n          },\n        },\n      },\n\n      xaxis: {\n        categories: [\n          \"Jan\",\n          \"Feb\",\n          \"Mar\",\n          \"Apr\",\n          \"May\",\n          \"Jun\",\n          \"July\",\n          \"Aug\",\n          \"Sep\",\n          \"Oct\",\n        ],\n      },\n\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"right\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart2 = () => {\n  const state = {\n    series: [\n      {\n        data: [19, 57, 78, 40, 95, 25],\n      },\n    ],\n\n    options: {\n      chart: {\n        height: 350,\n        type: \"bar\",\n      },\n      colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n      plotOptions: {\n        bar: {\n          columnWidth: \"45%\",\n          distributed: true,\n        },\n      },\n      dataLabels: {\n        enabled: true,\n        formatter: function (val) {\n          return val + \"%\";\n        },\n      },\n      legend: {\n        show: false,\n      },\n      title: {\n        text: \"% of Task Completed by User\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n      xaxis: {\n        categories: [\n          \"M. Jones\",\n          \"R. Smith\",\n          \"T.Sweeney\",\n          \"S. Booker\",\n          \"A. Knighter\",\n          \"J. King\",\n        ],\n        labels: {\n          style: {\n            // colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n            fontSize: \"12px\",\n          },\n        },\n\n        legend: {\n          show: false,\n          dropShadow: false,\n          position: \"right\",\n          labels: {\n            useSeriesColors: true,\n          },\n          onItemClick: {\n            toggleDataSeries: true,\n          },\n          formatter: function (seriesName, opts) {\n            return (\n              seriesName +\n              \":  <NumberFormat value={\" +\n              opts.w.globals.series[opts.seriesIndex] +\n              \"} displayType={'text'} thousandSeparator={true}/>\"\n            );\n          },\n        },\n      },\n    },\n  };\n\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart3 = () => {\n  const state = {\n    // colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n    options: {\n      series: [\n        {\n          data: [750, 280, 500, 720],\n        },\n      ],\n      chart: {\n        type: \"bar\",\n        height: 380,\n      },\n      plotOptions: {\n        bar: {\n          barHeight: \"100%\",\n          borderRadius: 8,\n          distributed: true,\n          horizontal: true,\n          dataLabels: {\n            position: \"top\",\n          },\n        },\n      },\n      //       light blue,  yellow, orange, dark blue,\n      colors: [\"#fcd200\", \"#fca400\", \"#003f5c\", \"#03a5fc\"],\n      dataLabels: {\n        enabled: false,\n        textAnchor: \"start\",\n        style: {\n          colors: [\"#fff\"],\n        },\n        formatter: function (val, opt) {\n          return opt.w.globals.labels[opt.dataPointIndex] + \":  \" + val;\n        },\n        offsetX: 0,\n        dropShadow: {\n          enabled: true,\n        },\n      },\n      stroke: {\n        width: 1,\n        colors: [\"#fff\"],\n      },\n      xaxis: {\n        categories: [\n          \"Criminal Defense\",\n          \"Personal Injury\",\n          \"Family Law\",\n          \"Business Contract\",\n        ],\n      },\n      yaxis: {\n        labels: {\n          show: true,\n        },\n      },\n      title: {\n        text: \"Revenue By Mater Type\",\n        align: \"center\",\n        floating: true,\n      },\n\n      tooltip: {\n        theme: \"light\",\n        x: {\n          show: false,\n        },\n        y: {\n          formatter: function (val, opt) {\n            return (\n              opt.w.globals.labels[opt.dataPointIndex] + \": $ \" + val + \" k\"\n            );\n          },\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.options.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Paper, Grid, Box } from \"@mui/material\";\n\nimport Tasks from \"../Tasks\";\nimport { FirmCards } from \"../Cards\";\n\nimport { Chart, Chart2, BarChart, BarChart2, BarChart3 } from \"./Charts\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      {/*main dashboard section for display  */}\n      <Box component={Paper} elevation={3} mt={4}>\n        <Grid container spacing={2}>\n          <Grid item lg={8} xs={12}>\n            <FirmCards />\n            <Grid container>\n              <Grid item lg={5} xs={12}>\n                <Chart2 />\n              </Grid>\n              <Grid item lg={7} xs={12}>\n                <Tasks />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item lg={4} xs={12}>\n            <Chart />\n          </Grid>\n          <Grid item lg={12} xs={12}>\n            <BarChart />\n          </Grid>\n          <Grid item lg={6} xs={6}>\n            <BarChart2 />\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <BarChart3 />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Firm/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\nconst FirmDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default FirmDashboard;\n","/** @format */\n\nimport React, { useState, useEffect, Fragment } from \"react\";\n\nimport { useSelector } from \"react-redux\";\n\nimport AdminDashboard from \"../components/Dashboard/UserRoles/AdminDashboard\";\nimport ClientDashboard from \"../components/Dashboard/UserRoles/ClientDashboard\";\nimport LawyerDashboard from \"../components/Dashboard/UserRoles/LawyerDashboard\";\nimport FirmDashboard from \"../components/Dashboard/UserRoles/FirmDashboard\";\n\nconst Dashboard = () => {\n\tconst { user } = useSelector((state) => state.auth.user);\n\n\t// checker type of user\n\tconst [localuser, setLocalUser] = useState({\n\t\tusername: \"Guest\",\n\t\tis_firm: false,\n\t\tis_lawyer: false,\n\t\tis_client: true,\n\t});\n\n\tuseEffect(() => {\n\t\tif (user) {\n\t\t\tsetLocalUser({\n\t\t\t\tusername: user.username,\n\t\t\t\tis_firm: user.is_firm,\n\t\t\t\tis_lawyer: user.is_lawyer,\n\t\t\t\tis_client: user.is_client,\n\t\t\t});\n\t\t}\n\t}, [user]);\n\n\tconst dashboardRedirect = () => {\n\t\tswitch (user.username) {\n\t\t\tcase \"admin\":\n\t\t\t\treturn <AdminDashboard />;\n\t\t\tcase \"firm\":\n\t\t\t\treturn <FirmDashboard />;\n\t\t\tcase \"lawyer\":\n\t\t\t\treturn <LawyerDashboard />;\n\t\t\tdefault:\n\t\t\t\treturn <ClientDashboard />;\n\t\t}\n\t};\n\treturn <>{dashboardRedirect()}</>;\n};\n\nexport default Dashboard;\n","/** @format */\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { signIn, reset } from \"../../redux/features/authSlice\";\n\nimport {\n\tAvatar,\n\tButton,\n\tPaper,\n\tGrid,\n\tBox,\n\tTypography,\n\tTextField,\n\tAlert,\n} from \"@mui/material\";\n\nimport AlertMassage from \"../../components/Alerts/Alerts\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport { toast } from \"react-toastify\";\nimport BackgroundImage from \"../../asserts/login_light.png\";\n\nconst Login = () => {\n\tconst {\n\t\tuser,\n\t\tisLoading,\n\t\tisError,\n\t\tisSuccess,\n\t\tisAuthenticated,\n\t\tmessage,\n\t} = useSelector((state) => state.auth);\n\tconst [formData, setFormData] = useState({\n\t\tusername: \"\",\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t});\n\n\tconst { username, email, password } = formData;\n\n\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\t\n\t\tif (isAuthenticated) {\n\t\t\treturn <Redirect to='/' />;\n\t\t\n\t\t}\n\t}, [user, isError, isSuccess, message, dispatch]);\n\n\tconst onChange = (e) => {\n\t\tsetFormData((prevState) => ({\n\t\t\t...prevState,\n\t\t\t[e.target.name]: e.target.value,\n\t\t}));\n\t};\n\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tconst userData = {\n\t\t\tusername,\n\t\t\temail,\n\t\t\tpassword,\n\t\t};\n\n\t\tdispatch(signIn(userData));\n\t};\n\n\tif (isLoading) {\n\t\treturn \"Loading...\";\n\t}\n\tif (isAuthenticated) {\n\t\treturn <Redirect to='/' />;\n\t}\n\treturn (\n\t\t<Grid container component='main' sx={{ height: \"87vh\" }}>\n\t\t\t<Grid\n\t\t\t\titem\n\t\t\t\txs={false}\n\t\t\t\tsm={4}\n\t\t\t\tmd={8}\n\t\t\t\tsx={{\n\t\t\t\t\tbackgroundImage: `url(${BackgroundImage})`,\n\t\t\t\t\tbackgroundRepeat: \"no-repeat\",\n\t\t\t\t\tbackgroundColor: (t) =>\n\t\t\t\t\t\tt.palette.mode === \"light\"\n\t\t\t\t\t\t\t? t.palette.grey[50]\n\t\t\t\t\t\t\t: t.palette.grey[900],\n\t\t\t\t\tbackgroundSize: \"cover\",\n\t\t\t\t\tbackgroundPosition: \"center\",\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t<Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n\t\t\t\t<Box\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tmy: 8,\n\t\t\t\t\t\tmx: 4,\n\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t}}>\n\t\t\t\t\t\t{isError ? <Alert severity=\"warning\"> {message}</Alert>: null}\n\t\t\t\t\t<Avatar sx={{ m: 1, bgcolor: \"warning.main\" }}>\n\t\t\t\t\t\t<LockOutlinedIcon />\n\t\t\t\t\t</Avatar>\n\t\t\t\t\t<Typography component='h1' variant='h5'>\n\t\t\t\t\t\tSign in\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Box\n\t\t\t\t\t\tcomponent='form'\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\tValidate\n\t\t\t\t\t\tsx={{ mt: 1 }}\n\t\t\t\t\t\tonSubmit={(e) => onSubmit(e)}>\n\t\t\t\t\t\t{/* csrf_token */}\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant='standard'\n\t\t\t\t\t\t\tid='username'\n\t\t\t\t\t\t\tlabel='Username'\n\t\t\t\t\t\t\tname='username'\n\t\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant='standard'\n\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\tlabel='Email Address'\n\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant='standard'\n\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\t\tid='password'\n\t\t\t\t\t\t\tminLength='6'\n\t\t\t\t\t\t\tautoComplete='password'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\tsx={{ mt: 3, mb: 2 }}>\n\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t\t<Link to='/' variant='body2'>\n\t\t\t\t\t\t\t\tForgot password?\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Link to='/signup' variant='body2'>\n\t\t\t\t\t\t\t\t{\"Don't have an account? Sign Up\"}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default Login;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../../actions/auth\";\n\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Box,\n  Typography,\n  TextField,\n  FormControlLabel,\n  FormLabel,\n  FormGroup,\n  Checkbox,\n  RadioGroup,\n  Radio,\n} from \"@mui/material\";\n\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\n\nimport BackgroundImage from \"../../asserts/signup_light.png\";\n\nconst Signup = ({ register, isAuthenticated }) => {\n  const [accountCreated, setAccountCreated] = useState(false);\n  const [isFirm, setIsFirm] = useState(false);\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    password: \"\",\n    re_password: \"\",\n  });\n\n  const { username, email, first_name, last_name, password, re_password } =\n    formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    let is_firm = isFirm;\n    let is_client = !isFirm;\n\n    if (password === re_password) {\n      register(\n        email,\n        first_name,\n        last_name,\n        username,\n        password,\n        re_password,\n        is_firm,\n        is_client,\n      );\n\n      setAccountCreated(true);\n    } else {\n      console.log(\"Password no match, Please type again!\");\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (accountCreated) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <Grid container component=\"main\" sx={{ height: \"85vh\" }}>\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={8}\n        sx={{\n          backgroundImage: `url(${BackgroundImage})`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: (t) =>\n            t.palette.mode === \"light\"\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      />\n      <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"warning.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            autoComplete=\"off\"\n            Validate\n            sx={{ mt: 1 }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  value={username}\n                  onChange={(e) => onChange(e)}\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"first_name\"\n                  label=\"First Name\"\n                  name=\"first_name\"\n                  value={first_name}\n                  onChange={(e) => onChange(e)}\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"last_name\"\n                  label=\"Last Name\"\n                  name=\"last_name\"\n                  autoComplete=\"last_name\"\n                  value={last_name}\n                  onChange={(e) => onChange(e)}\n                  autoFocus\n                />\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={email}\n                onChange={(e) => onChange(e)}\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                value={password}\n                onChange={(e) => onChange(e)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                name=\"re_password\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                value={re_password}\n                onChange={(e) => onChange(e)}\n                id=\"re_password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Sign up as a </FormLabel>\n              <RadioGroup\n                row\n                value={isFirm}\n                onChange={(e) => setIsFirm(e.target.value)}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Firm\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"Individual\"\n                />\n              </RadioGroup>\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormGroup>\n                <FormControlLabel\n                  control={<Checkbox />}\n                  label=\"Agreed on Term and Contidions\"\n                />\n              </FormGroup>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Register\n            </Button>\n          </Box>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link to=\"/login\" variant=\"body2\">\n                {\"Already have an account? Sign in\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { register })(Signup);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  Divider,\n  FormControlLabel,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { LinkButton } from \"../../styles/styles\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Company = () => {\n  const [approvel, setApprovel] = useToggle(false);\n  const [userData, setUserData] = useState({\n    f_name: \"\",\n    m_name: \"\",\n    l_name: \"\",\n    c_email: \"\",\n    rate: 0.0,\n    role: \"\",\n    time_zone: \"\",\n    group: \"\",\n    job_title: \"\",\n    bar_no: 0,\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    zip: 0,\n    ext: 0,\n    mobile: 0,\n    home: 0,\n    work_no: 0,\n\n    phone_ext: 0,\n  });\n\n  const {\n    f_name,\n    m_name,\n    l_name,\n    c_email,\n    rate,\n    role,\n    time_zone,\n    group,\n    job_title,\n    bar_no,\n    street,\n    suite,\n    city,\n    state,\n    zip,\n    ext,\n    mobile,\n    home,\n    work_no,\n    p_email,\n    phone_ext,\n  } = userData;\n  const onChange = (e) =>\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({\n      f_name,\n      m_name,\n      l_name,\n      c_email,\n      rate,\n      role,\n      time_zone,\n      group,\n      job_title,\n      bar_no,\n      street,\n      suite,\n      city,\n      state,\n      zip,\n      ext,\n      mobile,\n      home,\n      work_no,\n      p_email,\n      phone_ext,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/create-member/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Box p={3} sx={{ float: \"right\" }}>\n        <LinkButton to=\"/users\">Manage User</LinkButton>\n        <LinkButton to=\"/user-group\">Manage Group</LinkButton>\n        <LinkButton to=\"/user-role\">Manage Role</LinkButton>\n      </Box>\n\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create User\n        </Typography>\n        <Grid container spacing={2} mt={2}>\n          <Grid item xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"f_name\"\n              label=\"f_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"f_name\"\n              autoComplete=\"f_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"m_name\"\n              label=\"m_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"m_name\"\n              autoComplete=\"m_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"l_name\"\n              label=\"l_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"l_name\"\n              autoComplete=\"l_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"c_email\"\n              label=\"c_email\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"c_email\"\n              autoComplete=\"c_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"rate\"\n              label=\"rate\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"rate\"\n              autoComplete=\"rate\"\n            />\n            <FormControlLabel\n              label=\"Round Entries (Round [up/down] to nearnest 0.00 fraction of the hour\"\n              control={\n                <Switch\n                  checked={approvel}\n                  onChange={() => setApprovel(approvel)}\n                />\n              }\n              sx={{ width: \"35rem\" }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"role\"\n              label=\"role\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"role\"\n              autoComplete=\"role\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"time_zone\"\n              label=\"time_zone\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"time_zone\"\n              autoComplete=\"time_zone\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"group\"\n              label=\"group\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"group\"\n              autoComplete=\"group\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"job_title\"\n              label=\"job_title\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"job_title\"\n              autoComplete=\"job_title\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bar_no\"\n              label=\"bar_no\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"bar_no\"\n              autoComplete=\"bar_no\"\n            />\n          </Grid>\n          <Grid item mt={2}>\n            <Divider textAlign=\"left\">\n              <Typography component=\"h3\" variant=\"h5\">\n                Contact Info\n              </Typography>\n            </Divider>\n            <Box>\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"street\"\n                label=\"street\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"street\"\n                autoComplete=\"street\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"suite\"\n                label=\"suite\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"suite\"\n                autoComplete=\"suite\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"city\"\n                label=\"city\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"city\"\n                autoComplete=\"city\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"state\"\n                label=\"state\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"state\"\n                autoComplete=\"state\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"zip\"\n                label=\"zip\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"zip\"\n                autoComplete=\"zip\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"ext\"\n                label=\"ext\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"ext\"\n                autoComplete=\"ext\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"mobile\"\n                label=\"mobile\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"mobile\"\n                autoComplete=\"mobile\"\n              />\n              <Button\n                variant=\"contained\"\n                sx={{ background: \"#5cb85c\", marginTop: \"0.5rem\" }}\n              >\n                Set Password Automaticly\n              </Button>\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"home\"\n                label=\"home\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"home\"\n                autoComplete=\"home\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"work_no\"\n                label=\"work_no\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"work_no\"\n                autoComplete=\"work_no\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"p_email\"\n                label=\"p_email\"\n                type=\"email\"\n                onChange={(e) => onChange(e)}\n                id=\"p_email\"\n                autoComplete=\"p_email\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"phone_ext\"\n                label=\"phone_ext\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"phone_ext\"\n                autoComplete=\"phone_ext\"\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={12}>\n            <Box\n              sx={{\n                \"& .MuiButton-root\": { m: 1 },\n                float: \"right\",\n              }}\n            >\n              <Button variant=\"contained\" type=\"submit\">\n                Create Member\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Company;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box } from \"@mui/material\";\nimport Filters from \"../../components/Matter/Filters\";\nimport MatterCards from \"../../components/Matter/MatterCards\";\nimport MatterListLong from \"../../components/Matter/MatterListLong\";\n\nconst Matters = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container>\n          <Grid item xs={12}>\n            <Filters />\n          </Grid>\n          <Grid item xs={12}>\n            <MatterCards />\n          </Grid>\n          <Grid item xs={12} mt={2}>\n            <MatterListLong />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Matters;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport TextField from \"@mui/material/TextField\"\nimport Grid from \"@mui/material/Grid\"\nimport Box from \"@mui/material/Box\"\nimport Switch from \"@mui/material/Switch\"\nimport MenuItem from \"@mui/material/MenuItem\"\nimport Typography from \"@mui/material/Typography\"\nimport Button from \"@mui/material/Button\";\nimport Divider from \"@mui/material/Divider\"\nimport FormControlLabel from \"@mui/material/FormControlLabel\"\nimport Stack from \"@mui/material/Stack\"\nimport axios from \"axios\";\nimport NumberFormat from 'react-number-format';\nimport {ActionAlerts}  from \"../../utils/ActionAlerts\";\nimport {useToggle}  from \"../../context/useToggle\";\nimport  {CONFIG}  from \"../../api/MatterApi\";\n\nconst CreateUser = ({userId}) => {\n  console.log(userId)\n  // const [data, setData] = useState([])\n  const [roles, setRoles] = useState([]);\n  const [role, setRole] = useState(\"\");\n  const [group, setGroup] = useState(\"\");\n  const [groups, setGroups] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loading2, setLoading2] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  // const [rateType, setRateType] = useState(\"\");\n\n  \n  const [approvel, setApprovel] = useToggle(false);\n  const [userData, setUserData] = useState({\n    first_name: \"\",\n    middle_name: \"\",\n    last_name: \"\",\n    c_email: \"\",\n    rate_type: \"\",\n    rate: \" \",\n    time_zone: \"\",\n    job_title: \"\",\n    bar_no: \" \",\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    zip: \"\",\n    ext: \"\",\n    mobile: \"\",\n    home: \"\",\n    work_no: \"\",\n    p_email: \"\",\n    phone_ext: \"\",\n  });\n  const {\n    first_name,\n    middle_name,\n    last_name,\n    c_email,\n    rate,\n    time_zone,\n    job_title,\n    bar_no,\n    street,\n    suite,\n    city,\n    state,\n    zip,\n    ext,\n    mobile,\n    home,\n    work_no,\n    p_email,\n    phone_ext,\n  } = userData;\n  const onChange = (e) =>\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n\n  const FetchRoleData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/user/auth/roles/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setRoles(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  const FetchGroupData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/user/auth/groups/`, CONFIG)\n      .then((res) => {\n        setLoading2(false);\n        setGroups(res.data);\n      })\n      .catch((err) => {\n        setLoading2(false);\n      });\n  };\n  useEffect(() => {\n    if(userId >= 0){\n    \n    }\n    \n  }, []);\n  useEffect(() => {\n    FetchRoleData();\n    FetchGroupData();\n  }, []);\n\nconst handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/create-member/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\nconst handleDeactivate = (id) => {\n    axios\n      .patch(\n        `${process.env.REACT_APP_API_URL}/user/auth/is-active-user/${id}/`, false,\n        CONFIG,\n      )\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\nconst handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(\"some thing happen\")\n    const username = first_name.toLowerCase() + last_name.toLowerCase()\n    const password = username\n    const email = c_email\n    \n    const member = {\n      first_name,\n      middle_name,\n      last_name,\n      p_email,\n      role,\n      c_email,\n      rate,\n      time_zone,\n      group,\n      job_title,\n      bar_no,\n      street,\n      suite,\n      city,\n      state,\n      zip,\n      ext,\n      mobile,\n      home,\n      work_no,\n      phone_ext,\n    };\n    const body = JSON.stringify({username, first_name, last_name, email, password, member})\n      axios.post(`${process.env.REACT_APP_API_URL}/user/auth/create-user-member/`,body, CONFIG)\n    \n      .then((res) => {\n      \n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n      \n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Box component=\"form\" autoComplete=\"off\"\n            Validate onSubmit={(e) => handleSubmit(e)}>\n        <Typography component=\"h3\" variant=\"h4\">\n          Create User\n        </Typography>\n     \n           <Grid\n                container\n                spacing={2}\n                mt={2}\n                sx={{\n                  \"& .MuiTextField-root\": { m: 1, width: \"14rem\", \"input::-webkit-outer-spin-button\": {\n                    webkitAappearance: \"none\"\n                  },  },\n                }}\n\n              >\n                <Grid item lg={3}>\n                  <TextField\n                    required\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"first_name\"\n                    label=\"First Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"first_name\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"middle_name\"\n                    label=\"Middle Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"middle_name\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    required\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"last_name\"\n                    label=\"Last Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"last_name\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    required\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"c_email\"\n                    label=\"Company Email\"\n                    type=\"email\"\n                    onChange={(e) => onChange(e)}\n                    id=\"c_email\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n              \n                  <NumberFormat\n                      required\n                      id=\"rate\"\n                      customInput={TextField}\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"rate\"\n                      label=\"Rate $\"\n                      onChange={(e) => onChange(e)}\n                      type=\"number\"\n                      decimalScale={2}\n                      InputProps={{\n                            inputProps: { \n                                max: 100, min: 10 \n                            }\n                        }}\n                      thousandSeparator={true}\n                    />\n                </Grid>\n                <Grid item lg={6}>\n                  <Stack direction=\"row\" spacing={2} ml={2}>\n                    <FormControlLabel\n                      sx={{ fontSize: \"2rem\" }}\n                      label=\"\"\n                      control={\n                        <Switch\n                          checked={approvel}\n                          onChange={() => setApprovel(approvel)}\n                        />\n                      }\n                    />\n                    <Typography>\n                      Round Entries (Round [up/down] to nearnest\n                      <TextField\n                        margin=\"dense\"\n                        variant=\"standard\"\n                        type=\"text\"\n                        size=\"small\"\n                        placeholder=\"0.00\"\n                        sx={{\n                          maxWidth: \"5rem\",\n                        }}\n                      />\n                      fraction of the hour\n                    </Typography>\n                  </Stack>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    required\n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"role\"\n                    label=\"Role\"\n                    onChange={(e) => setRole(e.target.value)}\n                    id=\"role\"\n                  >\n                    {!loading ? (\n                      roles.map((data) => (\n                        <MenuItem key={data.id} value={data.name}>\n                          {data.name}\n                        </MenuItem>\n                      ))\n                    ) : (\n                      <span>Loading ...</span>\n                    )}\n                  </TextField>\n                </Grid>\n\n                <Grid item lg={3}>\n                  <TextField\n                    required\n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"time_zone\"\n                    label=\"Time Zone\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"time_zone\"\n                  >\n                    <MenuItem value=\"AKST\">Alaska Standard Time</MenuItem>\n                    <MenuItem value=\"PST\">Pacific Standard Time</MenuItem>\n                    <MenuItem value=\"CST\">Central Standard Time</MenuItem>\n                    <MenuItem value=\"EST\">Eastern Standard Time</MenuItem>\n                  </TextField>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    required\n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"group\"\n                    label=\"Group\"\n                    type=\"text\"\n                    onChange={(e) => setGroup(e.target.value)}\n                    id=\"group\"\n                  >\n                    {!loading2 ? (\n                      groups.map((data) => (\n                        <MenuItem key={data.id} value={data.name}>\n                          {data.name}\n                        </MenuItem>\n                      ))\n                    ) : (\n                      <span>Loading ...</span>\n                    )}\n                  </TextField>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                  required\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"job_title\"\n                    label=\"Job Title\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"job_title\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  {role === \"Sr. Atterney\" || role === \"Jr. Atterney\"  ? <NumberFormat\n                      customInput={TextField}\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"bar_no\"\n                      label=\"Bar #\"\n                      onChange={(e) => onChange(e)}\n                      id=\"bar_no\"\n\n                      format=\"######\"\n                      type=\"tel\"\n                    />: <NumberFormat\n                      disabled\n                      customInput={TextField}\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"bar_no\"\n                      label=\"Bar #\"\n                      onChange={(e) => onChange(e)}\n                      id=\"bar_no\"\n\n                      format=\"######\"\n                      type=\"tel\"\n                    />}\n                   \n                </Grid>\n              </Grid>\n              <Box mt={4} mb={2}>\n                <Divider />\n                <Typography mt={2} component=\"h3\" color=\"primary\" variant=\"h5\">\n                  Contact Info\n                </Typography>\n              </Box>Admin\n              <Grid\n                container\n                spacing={2}\n                sx={{\n                  \"& .MuiTextField-root\": { m: 1, width: \"14rem\" },\n                }}\n              >\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"street\"\n                    label=\"Street\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"street\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"suite\"\n                    label=\"Suite\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"suite\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"city\"\n                    label=\"City\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"city\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"state\"\n                    label=\"State\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"state\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"#####\"\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"zip\"\n                      label=\"Zip\"\n                      type=\"tel\"\n                      onChange={(e) => onChange(e)}\n                      id=\"zip\"\n\n                    />\n                </Grid>\n                <Grid item lg={3}> \n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"####\"\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"ext\"\n                      label=\"+4\"\n                      type=\"tel\"\n                      onChange={(e) => onChange(e)}\n                      id=\"ext\"\n\n                    />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"p_email\"\n                    label=\"Personal Email\"\n                    type=\"email\"\n                    onChange={(e) => onChange(e)}\n                    id=\"p_email\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <Box mt={1} ml={1}>\n                    <Button variant=\"contained\" color=\"primary\">\n                      Reset Password\n                    </Button>\n                  </Box>\n                </Grid>\n                <Grid item lg={3}>\n                  \n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"### ### ####\"\n                       size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"mobile\"\n                      label=\"Mobile #\"\n                      type=\"phone\"\n                      onChange={(e) => onChange(e)}\n                      id=\"mobile\"\n\n                    />\n                </Grid>\n                <Grid item lg={3}>\n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"### ### ####\"\n                       size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"home\"\n                      label=\"Home #\"\n                      type=\"phone\"\n                      onChange={(e) => onChange(e)}\n                      id=\"home\"\n\n                    />\n                </Grid>\n                <Grid item lg={3}>\n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"### ### ####\"\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"work\"\n                      label=\"Work #\"\n                      type=\"phone\"\n                      onChange={(e) => onChange(e)}\n                      id=\"work\"\n\n                    />\n                </Grid>\n                <Grid item lg={3}>\n              \n                  <NumberFormat\n                    customInput={TextField}\n                    format=\"####\"\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"phone_ext\"\n                    label=\"Extesion\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"phone_ext\"\n                    />\n                </Grid>\n              </Grid>\n              <Grid item lg={12}>\n                <Box\n                  sx={{\n                    \"& .MuiButton-root\": { m: 1, mr:5 },\n                    float: \"right\",\n                    color:\"white\"\n                  }}\n                >\n                 <Button\n                    variant=\"contained\"\n                    color=\"success\"\n                    type=\"submit\"\n                    sx={{ color: \"white\" }}\n                    \n                  >\n                    Create\n                  </Button>\n                  \n                  <Button variant=\"contained\" color=\"warning\"sx={{color:\"#fff\"}}>\n                    Deactivate\n                  </Button>\n                  <Button variant=\"contained\" color=\"error\" sx={{color:\"#fff\"}}>\n                    Delete\n                  </Button>\n                </Box>\n              </Grid>\n       \n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateUser;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport TextField from \"@mui/material/TextField\"\nimport Grid from \"@mui/material/Grid\"\nimport Box from \"@mui/material/Box\"\nimport Switch from \"@mui/material/Switch\"\nimport MenuItem from \"@mui/material/MenuItem\"\nimport Typography from \"@mui/material/Typography\"\nimport Button from \"@mui/material/Button\";\nimport Divider from \"@mui/material/Divider\"\nimport FormControlLabel from \"@mui/material/FormControlLabel\"\nimport Stack from \"@mui/material/Stack\"\nimport axios from \"axios\";\nimport NumberFormat from 'react-number-format';\nimport {ActionAlerts}  from \"../../utils/ActionAlerts\";\nimport {useToggle}  from \"../../context/useToggle\";\nimport  {CONFIG}  from \"../../api/MatterApi\";\n\n\n\naxios.defaults.xsrfHeaderName = \"X-CERFTOKEN\";\naxios.defaults.xsrfCookieName =\"XCSRF-TOKEN\"\n\nconst UpdateUser = ( {data} ) => {\n  const [roles, setRoles] = useState([]);\n  const [role, setRole] = useState(\"\");\n  const [group, setGroup] = useState(\"\");\n  const [groups, setGroups] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loading2, setLoading2] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [user, setUser] = useState([])\n  const [approvel, setApprovel] = useToggle(false);\n  const [userData, setUserData] = useState({\n      first_name:data.first_name,\n      middle_name:data.middle_name,\n      last_name:data.last_name,\n      c_email:data.c_email,\n      rate_type:data.rate_type,\n      rate:data.rate,\n      time_zone:data.time_zone,\n      job_title:data.job_title,\n      bar_no:data.bar_no,\n      street:data.street,\n      suite:data.suite,\n      city:data.city,\n      state:data.state,\n      zip:data.zip,\n      ext:data.ext,\n      mobile:data.mobile,\n      home:data.home,\n      work_no:data.work_no,\n      p_email:data.p_email,\n      phone_ext:data.phone_ext,\n  });\n  const {\n    first_name,\n    middle_name,\n    last_name,\n    c_email,\n    rate,\n    time_zone,\n    job_title,\n    bar_no,\n    street,\n    suite,\n    city,\n    state,\n    zip,\n    ext,\n    mobile,\n    home,\n    work_no,\n    p_email,\n    phone_ext,\n  } = userData;\n  const onChange = (e) =>\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n\n  const FetchRoleData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/user/auth/roles/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setRoles(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  const FetchGroupData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/user/auth/groups/`, CONFIG)\n      .then((res) => {\n        setLoading2(false);\n        setGroups(res.data);\n      })\n      .catch((err) => {\n        setLoading2(false);\n      });\n  };\n\n  useEffect(() => {\n    FetchRoleData();\n    FetchGroupData();\n  }, []);\n\nconst handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/create-member/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\nconst handleDeactivate = (id) => {\n    axios\n      .patch(\n        `${process.env.REACT_APP_API_URL}/user/auth/is-active-user/${id}/`, false,\n        CONFIG,\n      )\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\nconst handleSubmit = (e) => {\n    e.preventDefault();    \n    const body = JSON.stringify({first_name,\n      middle_name,\n      last_name,\n      p_email,\n      role,\n      c_email,\n      rate,\n      time_zone,\n      group,\n      job_title,\n      bar_no,\n      street,\n      suite,\n      city,\n      state,\n      zip,\n      ext,\n      mobile,\n      home,\n      work_no,\n      phone_ext,})\n      axios.put(`${process.env.REACT_APP_API_URL}/api/members/${data.id}`,body, CONFIG)\n      .then((res) => {\n      \n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n          \n        );\n      })\n      .catch((err) => {\n      \n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Box component=\"form\" autoComplete=\"off\"\n            Validate onSubmit={(e) => handleSubmit(e)}>\n        <Typography component=\"h3\" variant=\"h4\">\n          Update User {data.id}\n        </Typography>\n     \n           <Grid\n                container\n                spacing={2}\n                mt={2}\n                sx={{\n                  \"& .MuiTextField-root\": { m: 1, width: \"14rem\", \"input::-webkit-outer-spin-button\": {\n                    webkitAappearance: \"none\"\n                  },  },\n                }}\n\n              >\n                <Grid item lg={3}>\n                  <TextField\n                    required\n                    size=\"small\"\n                    margin=\"normal\"\n                    value={first_name}\n                    variant=\"filled\"\n                    name=\"first_name\"\n                    label=\"First Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"first_name\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    value = {middle_name}\n                    name=\"middle_name\"\n                    label=\"Middle Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"middle_name\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    required\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    value = {last_name}\n                    name=\"last_name\"\n                    label=\"Last Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"last_name\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    required\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"c_email\"\n                    value = {c_email}\n                    label=\"Company Email\"\n                    type=\"email\"\n                    onChange={(e) => onChange(e)}\n                    id=\"c_email\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n              \n                  <NumberFormat\n                      id=\"rate\"\n                      customInput={TextField}\n                      size=\"small\"\n                      margin=\"normal\"\n                      value={rate}\n                      variant=\"outlined\"\n                      name=\"rate\"\n                      label=\"Rate $\"\n                      onChange={(e) => onChange(e)}\n                      type=\"number\"\n                      decimalScale={2}\n                      InputProps={{\n                            inputProps: { \n                                max: 100, min: 10 \n                            }\n                        }}\n                      thousandSeparator={true}\n                    />\n                </Grid>\n                <Grid item lg={6}>\n                  <Stack direction=\"row\" spacing={2} ml={2}>\n                    <FormControlLabel\n                      sx={{ fontSize: \"2rem\" }}\n                      label=\"\"\n                      control={\n                        <Switch\n                          checked={approvel}\n                          onChange={() => setApprovel(approvel)}\n                        />\n                      }\n                    />\n                    <Typography>\n                      Round Entries (Round [up/down] to nearnest\n                      <TextField\n                        margin=\"dense\"\n                        variant=\"standard\"\n                        type=\"text\"\n                        size=\"small\"\n                        placeholder=\"0.00\"\n                        sx={{\n                          maxWidth: \"5rem\",\n                        }}\n                      />\n                      fraction of the hour\n                    </Typography>\n                  </Stack>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    value = {role}\n                    name=\"role\"\n                    label=\"Role\"\n                    onChange={(e) => setRole(e.target.value)}\n                    id=\"role\"\n                  >\n                    {!loading ? (\n                      roles.map((data) => (\n                        <MenuItem key={data.id} value={data.name}>\n                          {data.name}\n                        </MenuItem>\n                      ))\n                    ) : (\n                      <span>Loading ...</span>\n                    )}\n                  </TextField>\n                </Grid>\n\n                <Grid item lg={3}>\n                  <TextField\n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    value ={time_zone}\n                    variant=\"outlined\"\n                    name=\"time_zone\"\n                    label=\"Time Zone\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"time_zone\"\n                  >\n                    <MenuItem value=\"AKST\">Alaska Standard Time</MenuItem>\n                    <MenuItem value=\"PST\">Pacific Standard Time</MenuItem>\n                    <MenuItem value=\"CST\">Central Standard Time</MenuItem>\n                    <MenuItem value=\"EST\">Eastern Standard Time</MenuItem>\n                  </TextField>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n             \n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    value={group}\n                    variant=\"outlined\"\n                    name=\"group\"\n                    label=\"Group\"\n                    type=\"text\"\n                    onChange={(e) => setGroup(e.target.value)}\n                    id=\"group\"\n                  >\n                    {!loading2 ? (\n                      groups.map((data) => (\n                        <MenuItem key={data.id} value={data.name}>\n                          {data.name}\n                        </MenuItem>\n                      ))\n                    ) : (\n                      <span>Loading ...</span>\n                    )}\n                  </TextField>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n           \n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"job_title\"\n                    value={job_title}\n                    label=\"Job Title\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"job_title\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  {role === \"Sr. Atterney\" || role === \"Jr. Atterney\"  ? <NumberFormat\n                      customInput={TextField}\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"bar_no\"\n                      value={bar_no}\n                      label=\"Bar #\"\n                      onChange={(e) => onChange(e)}\n                      id=\"bar_no\"\n\n                      format=\"######\"\n                      type=\"tel\"\n                    />: <NumberFormat\n                      disabled\n                      customInput={TextField}\n                      size=\"small\"\n                      margin=\"normal\"\n                      value={bar_no}\n                      variant=\"outlined\"\n                      name=\"bar_no\"\n                      label=\"Bar #\"\n                      onChange={(e) => onChange(e)}\n                      id=\"bar_no\"\n                      format=\"######\"\n                      type=\"tel\"\n                    />}\n                   \n                </Grid>\n              </Grid>\n              <Box mt={4} mb={2}>\n                <Divider />\n                <Typography mt={2} component=\"h3\" color=\"primary\" variant=\"h5\">\n                  Contact Info\n                </Typography>\n              </Box>Admin\n              <Grid\n                container\n                spacing={2}\n                sx={{\n                  \"& .MuiTextField-root\": { m: 1, width: \"14rem\" },\n                }}\n              >\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"street\"\n                    label=\"Street\"\n                    value={street}\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"street\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"suite\"\n                    value={suite}\n                    label=\"Suite\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"suite\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"city\"\n                    label=\"City\"\n                    value={city}\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"city\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"state\"\n                    label=\"State\"\n                    value={state}\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"state\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"#####\"\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      value={zip}\n                      name=\"zip\"\n                      label=\"Zip\"\n                      type=\"tel\"\n                      onChange={(e) => onChange(e)}\n                      id=\"zip\"\n\n                    />\n                </Grid>\n                <Grid item lg={3}> \n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"####\"\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"ext\"\n                      value={ext}\n                      label=\"+4\"\n                      type=\"tel\"\n                      onChange={(e) => onChange(e)}\n                      id=\"ext\"\n\n                    />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"p_email\"\n                    value={p_email}\n                    label=\"Personal Email\"\n                    type=\"email\"\n                    onChange={(e) => onChange(e)}\n                    id=\"p_email\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <Box mt={1} ml={1}>\n                    <Button variant=\"contained\" color=\"primary\">\n                      Reset Password\n                    </Button>\n                  </Box>\n                </Grid>\n                <Grid item lg={3}>\n                  \n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"### ### ####\"\n                       size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"mobile\"\n                      value={mobile}\n                      label=\"Mobile #\"\n                      type=\"phone\"\n                      onChange={(e) => onChange(e)}\n                      id=\"mobile\"\n\n                    />\n                </Grid>\n                <Grid item lg={3}>\n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"### ### ####\"\n                       size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"home\"\n                      value={home}\n                      label=\"Home #\"\n                      type=\"phone\"\n                      onChange={(e) => onChange(e)}\n                      id=\"home\"\n\n                    />\n                </Grid>\n                <Grid item lg={3}>\n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"### ### ####\"\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"work_no\"\n                      value={work_no}\n                      label=\"Work #\"\n                      type=\"phone\"\n                      onChange={(e) => onChange(e)}\n                      id=\"work_no\"\n\n                    />\n                </Grid>\n                <Grid item lg={3}>\n              \n                  <NumberFormat\n                    customInput={TextField}\n                    format=\"####\"\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"phone_ext\"\n                    value={phone_ext}\n                    label=\"Extesion\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"phone_ext\"\n                    />\n                </Grid>\n              </Grid>\n              <Grid item lg={12}>\n                <Box\n                  sx={{\n                    \"& .MuiButton-root\": { m: 1, mr:5 },\n                    float: \"right\",\n                    color:\"white\"\n                  }}\n                >\n                 <Button\n                    variant=\"contained\"\n                    color=\"success\"\n                    type=\"submit\"\n                    sx={{ color: \"white\" }}\n                    \n                  >\n                    Update\n                  </Button>\n                  \n                  <Button variant=\"contained\" color=\"warning\"sx={{color:\"#fff\"}} onClick={()=>handleDeactivate(data.id)}>\n                    {data.is_active ? 'Deactivate': 'Activate'}\n                  </Button>\n                  <Button variant=\"contained\" color=\"error\" sx={{color:\"#fff\"}} onClick={()=>handleDelete(data.id)}>\n                    Delete\n                  </Button>\n                </Box>\n              </Grid>\n       \n      </Box>\n    </Fragment>\n  );\n};\n\nexport default UpdateUser;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport Table from \"@mui/material/Table\"\nimport TableCell from \"@mui/material/TableCell\"\nimport TableContainer from \"@mui/material/TableContainer\"\nimport TableHead from \"@mui/material/TableHead\"\nimport TableRow from \"@mui/material/TableRow\"\nimport TableBody from \"@mui/material/TableBody\"\nimport Switch from \"@mui/material/Switch\"\nimport Dialog from \"@mui/material/Dialog\"\nimport DialogActions from \"@mui/material/DialogActions\"\nimport DialogContent from \"@mui/material/DialogContent\"\nimport DialogTitle from \"@mui/material/DialogTitle\"\nimport Button from \"@mui/material/Button\"\nimport Box from \"@mui/material/Box\"\nimport Typography from \"@mui/material/Typography\"\nimport Stack from \"@mui/material/Stack\"\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport CreateUser from \"./CreateUser\";\nimport {\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\n\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { useToggle } from \"../../context/useToggle\";\nimport{ useDispatch} from \"react-redux\"\nimport UpdateUser from \"./UpdateUser\";\n\nconst User = () => {\n  const [usersData, setUsersData] = useState([]);\n  const [userId, setUserId] = useState(null)\n  const [isActive, setIsActive] = useToggle(false);\n  const [searchItem, setSearchItem] = useState(\"\")\n\n\n  const [loading, setLoading] = useState(true);\n  const [loading2, setLoading2] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [rateType, setRateType] = useState(\"\");\n\n  const dispatch = useDispatch()\n  \n  const handleChange = (event) => {\n    setRateType(event.target.value);\n  };\n  \n  const [open, setOpen] = useState(false);\n  const [open2, setOpen2] = useState(false);\n\n  const handleClickOpen = (data) => {\n    setOpen(true);\n  };\n const handleClickOpen2 = (data) => {\n    setUserId(data)\n    setOpen2(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n const handleClose2 = () => {\n    setOpen2(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/create-member/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setUsersData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  \n  const showUsers = () => {\n    if (usersData.length === 0) {\n      return <p>No data found...</p>;\n    } else\n      return usersData.filter((val)=>{\n        if (searchItem === \"\"){\n          return val\n        } else if(val.first_name.toLowerCase().includes(searchItem.toLowerCase())) {\n          return val\n        }else if(val.last_name.toLowerCase().includes(searchItem.toLowerCase())) {\n          return val\n        }\n\n      }).map((data) => {if(isActive){\n        return data.is_active === \"True\"? (<TableRow>\n          <TableCell>{data.first_name}</TableCell>\n          <TableCell>{data.last_name}</TableCell>\n          <TableCell>{data.c_email}</TableCell>\n          <TableCell>{data.role}</TableCell>\n          <TableCell>{data.group}</TableCell>\n          <TableCell>{data.last_login}</TableCell>\n          <TableCell>{data.is_active === \"True\" ? \"active\":\"inactive\"}</TableCell>\n          <TableCell><Button onClick={()=>handleClickOpen2(data)}>View {data.id}</Button></TableCell>\n          <TableCell></TableCell>\n        </TableRow>) : null\n      }\n    else return <TableRow>\n          <TableCell> {data.first_name}</TableCell>\n          <TableCell>{data.last_name}</TableCell>\n          <TableCell>{data.c_email}</TableCell>\n          <TableCell>{data.role}</TableCell>\n          <TableCell>{data.group}</TableCell>\n          <TableCell>{data.last_login}</TableCell>\n          <TableCell>{data.is_active === \"True\" ? \"active\":\"inactive\"}</TableCell>\n          <TableCell><Button onClick={()=>handleClickOpen2(data)}>View{data.id}</Button></TableCell>\n          <TableCell></TableCell>\n        </TableRow>});\n  };\n\n  return (\n    <Fragment>\n      <Box mb={7} >\n        <Typography component=\"h4\" variant=\"h5\" color=\"primary\" mb={2}>\n          Manage Users\n        </Typography>\n        <Stack p={3} direction=\"row\" spacing={2} sx={{ float: \"right\" }}>\n          <Search sx={{ width: \"15rem\" }}>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n              onChange ={e => setSearchItem(e.target.value)}\n            />\n          </Search>\n          <Button\n            color=\"success\"\n            onClick={()=>handleClickOpen()}\n            variant=\"contained\"\n            sx={{ color: \"white\", background: \"#28c570\" }}\n          >\n            + Add User\n          </Button>\n          <Dialog\n           \n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth=\"true\"\n            maxWidth=\"xl\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New User\"}</DialogTitle>\n            <DialogContent>\n              <CreateUser/>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Close</Button>\n            </DialogActions>\n          </Dialog>\n          <Dialog\n           \n            open={open2}\n            onClose={handleClose2}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth=\"true\"\n            maxWidth=\"xl\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New User\"}</DialogTitle>\n            <DialogContent>\n              <UpdateUser data={userId}/>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose2}>Close</Button>\n            </DialogActions>\n          </Dialog>\n        </Stack>\n\n        <TableContainer>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow bgColor=\"#796ef0\">\n                <TableCell>\n                  <Typography color=\"white\">First Name</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Last Name</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Role</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Group</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Last Login</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Status</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Action</Typography>\n                </TableCell>\n                \n                <TableCell>\n                  <Switch\n                    color=\"success\"\n                    value={isActive}\n                    onChange={() => setIsActive()}\n                  />\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {!loading ? showUsers() : <Typography>Loading ...</Typography>}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default User;","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ManageUser from \"./ManageUser\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <ManageUser/>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst TimeList = () => {\n  const [timeData, setTimeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setTimeData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Fragment>\n      <Box>\n        <LinkButton to=\"/ledgers\" sx={{ float: \"right\" }}>\n          Ledger Dashboard\n        </LinkButton>\n        <Box p={3}>\n          <LinkButton to=\"/time\" sx={{ float: \"right\" }}>\n            Ledger Dashbaord\n          </LinkButton>\n          <LinkButton to=\"/time\" sx={{ float: \"right\" }}>\n            Add Time\n          </LinkButton>\n          <LinkButton to=\"/ledger-list\" sx={{ float: \"right\" }}>\n            Ledger List\n          </LinkButton>\n          <LinkButton to=\"/ledger-documents\" sx={{ float: \"right\" }}>\n            Documents\n          </LinkButton>\n        </Box>\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Add</TableCell>\n\n                <TableCell>Matter #</TableCell>\n                <TableCell>Matter Name</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Billable Time</TableCell>\n                <TableCell>Amount</TableCell>\n                <TableCell>Category</TableCell>\n                <TableCell>Activity</TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading\n              ? null\n              : timeData?.map((data) => {\n                  return (\n                    <TableBody id={data.id}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>{data.matter_name}</TableCell>\n\n                      <TableCell>{data.conatact}</TableCell>\n                      <TableCell>{data.date}</TableCell>\n                      <TableCell>{data.time}</TableCell>\n                      <TableCell>{data.rate}</TableCell>\n                      <TableCell>{data.category}</TableCell>\n                      <TableCell>{data.sub_category}</TableCell>\n                    </TableBody>\n                  );\n                })} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default TimeList;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport axios from \"axios\";\nimport { TextField, Box, Grid, Switch, FormControlLabel } from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nimport { LinkButton } from \"../../styles/styles\";\n\nconst Search = () => {\n  const [longestTenure, setLongestTenure] = useState(\"\");\n  const [averageTenure, setAverageTenure] = useState(\"\");\n  const [currentTenure, setCurrentTenure] = useState(\"\");\n  const [gradYear, setGradYear] = useState(\"\");\n  const [barDate, setBarDate] = useState(\"\");\n  const [searchData, setSearchData] = useState({\n    state: \"\",\n    city: \"\",\n    practice_area: \"\",\n    law_school: \"\",\n\n    undergrad_study: \"\",\n    lamguages: \"\",\n    admitted_state: \"\",\n    relocate: false,\n  });\n\n  const {\n    state,\n    city,\n    practice_area,\n    law_school,\n\n    undergrad_study,\n    lamguages,\n    admitted_state,\n    relocate,\n  } = searchData;\n\n  const onChange = (e) =>\n    setSearchData({ ...searchData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"state\"\n              type=\"number\"\n              min=\"0\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"law_school\"\n              label=\"law_school\"\n              type=\"text\"\n              value={law_school}\n              onChange={(e) => onChange(e)}\n              id=\"law_school\"\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Longest tenure (months / years)\"\n              id=\"longest_tenure\"\n              name=\"longest_tenure\"\n              value={longestTenure}\n              type=\"text\"\n              onValueChange={(e) => setLongestTenure(e.value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Average tenure (months / years)\"\n              value={averageTenure}\n              id=\"average_tenure\"\n              name=\"average_tenure\"\n              type=\"text\"\n              onValueChange={(e) => setAverageTenure(e.value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Time at Current Company (months / years)\"\n              id=\"current_tenure\"\n              name=\"current_tenure\"\n              value={currentTenure}\n              type=\"text\"\n              onValueChange={(e) => setCurrentTenure(e.value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"admitted_state\"\n              label=\"admitted_state\"\n              type=\"text\"\n              value={admitted_state}\n              onChange={(e) => onChange(e)}\n              id=\"admitted_state\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"city\"\n              type=\"text\"\n              value={city}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Grad year\"\n              id=\"grad_year\"\n              format=\"####\"\n              placeholder=\"YYYY\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n              customInput={TextField}\n              name=\"grad_year\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={gradYear}\n              onValueChange={(e) => setGradYear(e.value)}\n            />\n\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"undergrad_study\"\n              label=\"undergrad_study\"\n              step=\"0.01\"\n              type=\"text\"\n              value={undergrad_study}\n              onChange={(e) => onChange(e)}\n              id=\"undergrad_study\"\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  name=\"relocate\"\n                  value={relocate}\n                  onChange={(e) => onChange(e)}\n                />\n              }\n              label=\"Relocate\"\n              labelPlacement=\"start\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"practice_area\"\n              label=\"practice_area\"\n              type=\"text\"\n              value={practice_area}\n              onChange={(e) => onChange(e)}\n              id=\"practice_area\"\n              disabled\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              label=\"Bar Admittance Date\"\n              id=\"bar_admit_date\"\n              name=\"bar_admit_date\"\n              value={barDate}\n              onValueChange={(e) => setBarDate(e.value)}\n            />\n\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"lamguages\"\n              label=\"lamguages\"\n              type=\"text\"\n              value={lamguages}\n              onChange={(e) => onChange(e)}\n              id=\"lamguages\"\n            />\n            {/* <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{ float: \"right\" }}\n              endIcon={<SaveIcon />}\n            >\n              Apply\n            </Button> */}\n            <Box m={3}>\n              <LinkButton to=\"/job-result\" sx={{ float: \"right\" }}>\n                Apply\n              </LinkButton>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Search;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\n// import axios from \"axios\";\n// import { CONFIG } from \"../../api/MatterApi\";\n// import { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst Result = () => {\n  const [activityData, setActivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  // const [error, setError] = useState(\"\");\n  // const [status, setStatus] = useState(\"\");\n  //   const FetchData = () => {\n  //     axios\n  //       .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n  //       .then((res) => {\n  //         setLoading(false);\n  //         setStatus(res.statusText);\n  //         setActivityData(res.data);\n  //       })\n  //       .catch((err) => {\n  //         setLoading(false);\n  //         setStatus(err.statusText);\n  //       });\n  //   };\n  //   useEffect(() => {\n  //     FetchData();\n  //   }, []);\n  return (\n    <Fragment>\n      <Box>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow bgColor=\"#796ef0\">\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Rate</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Name</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">City</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">State</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Active</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Grage Year</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Practice Area</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Relocation</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Practicing</Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading ? (\n              <TableBody>\n                <TableRow>\n                  <TableCell>74%</TableCell>\n                  <TableCell>Smith, John</TableCell>\n                  <TableCell>San Diego</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>2000</TableCell>\n                  <TableCell>Criminal</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>22y - 03M</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>72%</TableCell>\n                  <TableCell>Cassidy, Butch</TableCell>\n                  <TableCell>Los Angeles</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>2021</TableCell>\n                  <TableCell>Transctional</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>0y - 02M</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>50%</TableCell>\n                  <TableCell>Short, Mart</TableCell>\n                  <TableCell>Sacramento</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>2013</TableCell>\n                  <TableCell>Civil</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>06y - 11M</TableCell>\n                </TableRow>\n              </TableBody>\n            ) : (\n              activityData?.map((data) => {\n                return (\n                  <TableBody id={data.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n                    <TableCell>{data.date}</TableCell>\n                    <TableCell>x</TableCell>\n                    <TableCell>{data.category}</TableCell>\n                    <TableCell>{data.sub_category}</TableCell>\n                    <TableCell>{data.note}</TableCell>\n                    <TableCell>\n                      {data.billable ? \"email\" : \"workflow\"}\n                    </TableCell>\n                    <TableCell>{data.bill_by}</TableCell>\n                    <TableCell>{data.billable ? \"In\" : \"Out\"}</TableCell>\n                  </TableBody>\n                );\n              })\n            )} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Result;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  FormControlLabel,\n  FormGroup,\n  Checkbox,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nconst Saved = () => {\n  const [pickTime, setPickTime] = useState(new Date(\"2021-12-01T21:00:00\"));\n  const [pickDate, setPickDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [jobData, setJobData] = useState({\n    name: \"\",\n    state: \"\",\n    city: \"\",\n    email: \"\",\n    mobile: \"\",\n    home: \"\",\n    law_school: \"\",\n    grad_year: \"\",\n    bar_adm_year: \"\",\n    practice_area: \"\",\n    mail_add: \"\",\n    relocate: false,\n    date: \"\",\n    time: \"\",\n    link: \"\",\n    notes: \"\",\n    file: \"\",\n  });\n\n  const {\n    name,\n    state,\n    city,\n    email,\n    mobile,\n    home,\n    law_school,\n    grad_year,\n    bar_adm_year,\n    practice_area,\n    mail_add,\n    relocate,\n    date,\n    time,\n    link,\n    notes,\n    file,\n  } = jobData;\n\n  const onChange = (e) =>\n    setJobData({ ...jobData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <FormGroup aria-label=\"position\" row>\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Save\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Contacted\"\n                labelPlacement=\"start\"\n              />\n              <Typography component=\"label\" m={1}>\n                Interested :\n              </Typography>\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Yes\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"No\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Interviewed\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Accept\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Reject\"\n                labelPlacement=\"start\"\n              />\n              <Box ml={3}>\n                <Typography component=\"h4\" color=\"success\" variant=\"h5\">\n                  Overall Score: 74%\n                </Typography>\n              </Box>\n            </FormGroup>\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"name\"\n              label=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={(e) => onChange(e)}\n              id=\"name\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"city\"\n              type=\"text\"\n              value={city}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"state\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email\"\n              label=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => onChange(e)}\n              id=\"email\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Mobile #\"\n              id=\"mobile\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"mobile\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={mobile}\n              onValueChange={(value) => onChange(value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Home #\"\n              id=\"home\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"home\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={home}\n              onValueChange={(value) => onChange(value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"law_school\"\n              label=\"law_school\"\n              type=\"text\"\n              value={law_school}\n              onChange={(e) => onChange(e)}\n              id=\"law_school\"\n            />\n\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Grad year\"\n              id=\"grad_year\"\n              format=\"####\"\n              placeholder=\"YYYY\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n              customInput={TextField}\n              name=\"grad_year\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={grad_year}\n              onValueChange={(value) => onChange(value)}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              label=\"Bar Admittance\"\n              id=\"bar_adm_year\"\n              name=\"bar_adm_year\"\n              value={bar_adm_year}\n              type=\"text\"\n              onValueChange={(value) => onChange(value)}\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"mail_add\"\n              label=\"mail_add\"\n              type=\"text\"\n              value={mail_add}\n              onChange={(e) => onChange(e)}\n              id=\"mail_add\"\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  name=\"relocate\"\n                  value={relocate}\n                  onChange={(e) => onChange(e)}\n                />\n              }\n              label=\"Relocate\"\n              labelPlacement=\"start\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container spacing={2}>\n              <Grid item xs={4}>\n                <Box m={1}>\n                  <Typography component=\"lable\"> Writing Sample </Typography>\n\n                  <Button variant=\"contained\" disabled>\n                    + Attach File\n                  </Button>\n                </Box>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <TimePicker\n                    label=\"Pick Time\"\n                    name=\"picktime\"\n                    id=\"picktime\"\n                    value={pickTime}\n                    onChange={(e) => {\n                      setPickTime(e);\n                    }}\n                    renderInput={(params) => (\n                      <TextField size=\"small\" fullWidth {...params} />\n                    )}\n                  />\n                </LocalizationProvider>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DatePicker\n                    inputFormat=\"yyyy-MM-dd\"\n                    mask=\"____-__-__\"\n                    label=\"Pick Date\"\n                    value={pickDate}\n                    name=\"pickdate\"\n                    id=\"pickdate\"\n                    onChange={(e) => setPickDate(e)}\n                    renderInput={(params) => (\n                      <TextField size=\"small\" fullWidth {...params} />\n                    )}\n                  />\n                </LocalizationProvider>\n\n                <TextField\n                  size=\"small\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"link\"\n                  type=\"link\"\n                  defaultValue=\"2021-12-01\"\n                  value={link}\n                  onChange={(e) => onChange(e)}\n                  id=\"link\"\n                />\n              </Grid>\n              <Grid item xs={8}>\n                <TextField\n                  fullWidth\n                  multiline\n                  rows={8}\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"notes\"\n                  type=\"text\"\n                  value=\"Notes ...\"\n                  id=\"notes\"\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Saved;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport Search from \"./Search\";\nimport Result from \"./Result\";\nimport Saved from \"./Saved\";\nconst index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Search\">\n          <Search />\n        </div>\n        <div label=\"Result\">\n          <Result />\n        </div>\n        <div label=\"Saved\">\n          <Saved />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default index;\n","/** @format */\n\nimport React, { Fragment,  useEffect } from \"react\";\nimport axios from \"axios\"\nimport { CONFIG } from \"../../api/MatterApi\";\nimport TableCell from \"@mui/material/TableCell\"\nimport TableRow from \"@mui/material/TableRow\"\nimport Button from \"@mui/material/Button\"\nimport RectangleIcon from '@mui/icons-material/Rectangle';\nimport { useToggle } from \"../../context/useToggle\";\n\nconst RoleFuncions = ({permission}) => {\n  const name = permission.name\n  const id =  permission.id\n  const role = permission.role\n\n  const [isView, setIsView] = useToggle(permission.is_view)\n  const [isEdit, setIsEdit] = useToggle(permission.is_edit)\n  const [isCreate, setIsCreate] = useToggle(permission.is_create)\n  const [isDelete, setIsDelete] = useToggle(permission.is_delete)\n  const [isContacts, setIsContacts] = useToggle(permission.is_contacts)\n  const [isTeam, setIsTeam] = useToggle(permission.is_team)\n  const [isOffice, setIsOffice] = useToggle(permission.is_office)\n  const [isRegion, setIsRegion] = useToggle(permission.is_region)\n  const [isAll, setIsAll] = useToggle(false)\n         \nconst updateFunctions = () =>{\n  const is_view = isView\n  const is_edit = isEdit\n  const is_create = isCreate\n  const is_delete = isDelete\n  const is_contacts = isContacts\n  const is_team = isTeam\n  const is_office = isOffice\n  const is_region = isRegion\n\n  const body =  JSON.stringify({ id, name, role, is_view, is_edit, is_create,is_delete,is_contacts,is_team,is_office,is_region})\n\n  axios.patch(\n\t\t`http://localhost:8000/user/auth/permissions/${id}/`,\n\t\tbody, \n\t\tCONFIG,\n\t).then((res)=>{\n    // dispatch(getPermissions)\n    console.log(res)\n  }).catch((err)=>{\n    console.log(err)\n  });\n  // dispatch(updatePermission({id, permissions}))\n}\nconst settingAll = () =>{\n  setIsAll(isAll)\n    if (isAll === false) {\n      if (isContacts === false){\n        setIsContacts(isContacts)\n      }\n      if (isTeam === false){\n        setIsTeam(isTeam)\n      }\n      if (isOffice === false){\n        setIsOffice(isOffice)\n      }\n      if (isRegion === false){\n        setIsRegion(isRegion)\n      }\n    }\n    else {\n      if (isContacts === true){\n        setIsContacts(isContacts)\n      }\n      if (isTeam === true){\n        setIsTeam(isTeam)\n      }\n      if (isOffice === true){\n        setIsOffice(isOffice)\n      }\n      if (isRegion === true){\n        setIsRegion(isRegion)\n      }\n      \n    }\n }\n  \n\nuseEffect(() => {\n  updateFunctions()\n}, [isView,isEdit,isCreate,isDelete,isContacts,isTeam,isOffice,isRegion])\n\n  return (\n    <Fragment>\n      <TableRow>\n        <TableCell>{name}</TableCell>\n        <TableCell>\n          <Button\n            sx={\n              isView\n                ? {\n                    \"color\": \"#4BB543\",\n                    \"backgroundColor\": \"#4BB543\",\n                    \"&:hover\": {\n                      backgroundColor: \"#4BB545\",\n                      color: \"#4BB545\",\n                    },\n                  }\n                : {\n                    \"color\": \"#D3D3D3\",\n                    \"backgroundColor\": \"#D3D3D3\",\n                    \"&:hover\": {\n                      backgroundColor: \"#D3D3D3\",\n                      color: \"#D3D3D3\",\n                    },\n                  }\n            }\n            onClick ={()=> setIsView(isView)}\n            size='large'\n            aria-label='toggle'>\n            <RectangleIcon />\n          </Button>\n        </TableCell>\n        <TableCell>\n          <Button\n          \n            sx={\n                isEdit           \n                ? {\n                    \"color\": \"#4BB543\",\n                    \"backgroundColor\": \"#4BB543\",\n                    \"&:hover\": {\n                      backgroundColor: \"#4BB545\",\n                      color: \"#4BB545\",\n                    },\n                  }\n                : {\n                    \"color\": \"#D3D3D3\",\n                    \"backgroundColor\": \"#D3D3D3\",\n                    \"&:hover\": {\n                      backgroundColor: \"#D3D3D3\",\n                      color: \"#D3D3D3\",\n                    },\n                  }\n            }\n            onClick ={()=> setIsEdit(isEdit)}\n            size='large'\n            aria-label='toggle'>\n            <RectangleIcon />\n          </Button>\n        </TableCell>\n        <TableCell>\n          <Button\n            \n            sx={\n              isCreate\n                ? {\n                    \"color\": \"#4BB543\",\n                    \"backgroundColor\": \"#4BB543\",\n                    \"&:hover\": {\n                      backgroundColor: \"#4BB545\",\n                      color: \"#4BB545\",\n                    },\n                  }\n                : {\n                    \"color\": \"#D3D3D3\",\n                    \"backgroundColor\": \"#D3D3D3\",\n                    \"&:hover\": {\n                      backgroundColor: \"#D3D3D3\",\n                      color: \"#D3D3D3\",\n                    },\n                  }\n            }\n            onClick ={()=>setIsCreate(isCreate)}\n            size='large'\n            aria-label='toggle'>\n            <RectangleIcon />\n          </Button>\n        </TableCell>\n        <TableCell>\n          <Button\n           \n            sx={\n              isDelete\n                ? {\n                    \"color\": \"#4BB543\",\n                    \"backgroundColor\": \"#4BB543\",\n                    \"&:hover\": {\n                      backgroundColor: \"#4BB545\",\n                      color: \"#4BB545\",\n                    },\n                  }\n                : {\n                    \"color\": \"#D3D3D3\",\n                    \"backgroundColor\": \"#D3D3D3\",\n                    \"&:hover\": {\n                      backgroundColor: \"#D3D3D3\",\n                      color: \"#D3D3D3\",\n                    },\n                  }\n            }\n            onClick={()=>setIsDelete(isDelete)}\n            size='large'\n            aria-label='toggle'>\n            <RectangleIcon />\n          </Button>\n        </TableCell>\n\n        {permission.name === \"Contact\" ? (\n          <>\n            <TableCell>\n              <Button\n               \n                sx={\n                  isContacts\n                    ? {\n                        \"color\": \"#4BB543\",\n                        \"backgroundColor\": \"#4BB543\",\n                        \"&:hover\": {\n                          backgroundColor: \"#4BB545\",\n                          color: \"#4BB545\",\n                        },\n                      }\n                    : {\n                        \"color\": \"#D3D3D3\",\n                        \"backgroundColor\": \"#D3D3D3\",\n                        \"&:hover\": {\n                          backgroundColor: \"#D3D3D3\",\n                          color: \"#D3D3D3\",\n                        },\n                      }\n                }\n                onClick={()=>setIsContacts(isContacts)}\n                size='large'\n                aria-label='toggle'>\n                <RectangleIcon />\n              </Button>\n            </TableCell>\n            <TableCell>\n              <Button\n               \n                sx={\n                  isTeam\n                    ? {\n                        \"color\": \"#4BB543\",\n                        \"backgroundColor\": \"#4BB543\",\n                        \"&:hover\": {\n                          backgroundColor: \"#4BB545\",\n                          color: \"#4BB545\",\n                        },\n                      }\n                    : {\n                        \"color\": \"#D3D3D3\",\n                        \"backgroundColor\": \"#D3D3D3\",\n                        \"&:hover\": {\n                          backgroundColor: \"#D3D3D3\",\n                          color: \"#D3D3D3\",\n                        },\n                      }\n                }\n                onClick={()=>setIsTeam(isTeam)}\n                size='large'\n                aria-label='toggle'>\n                <RectangleIcon />\n              </Button>\n            </TableCell>\n            <TableCell>\n              <Button\n               \n                sx={\n                  isOffice\n                    ? {\n                        \"color\": \"#4BB543\",\n                        \"backgroundColor\": \"#4BB543\",\n                        \"&:hover\": {\n                          backgroundColor: \"#4BB545\",\n                          color: \"#4BB545\",\n                        },\n                      }\n                    : {\n                        \"color\": \"#D3D3D3\",\n                        \"backgroundColor\": \"#D3D3D3\",\n                        \"&:hover\": {\n                          backgroundColor: \"#D3D3D3\",\n                          color: \"#D3D3D3\",\n                        },\n                      }\n                }\n                onClick={()=> setIsOffice(isOffice)}\n                size='large'\n                aria-label='toggle'>\n                <RectangleIcon />\n              </Button>\n            </TableCell>\n            <TableCell>\n              <Button\n               \n                sx={\n                  isRegion\n                    ? {\n                        \"color\": \"#4BB543\",\n                        \"backgroundColor\": \"#4BB543\",\n                        \"&:hover\": {\n                          backgroundColor: \"#4BB545\",\n                          color: \"#4BB545\",\n                        },\n                      }\n                    : {\n                        \"color\": \"#D3D3D3\",\n                        \"backgroundColor\": \"#D3D3D3\",\n                        \"&:hover\": {\n                          backgroundColor: \"#D3D3D3\",\n                          color: \"#D3D3D3\",\n                        },\n                      }\n                }\n                onClick={()=>setIsRegion(isRegion)}\n                size='large'\n                aria-label='toggle'>\n                <RectangleIcon />\n              </Button>\n            </TableCell>\n            <TableCell>\n              <Button\n                sx={\n                  isAll ? {\n                        \"color\": \"#4BB543\",\n                        \"backgroundColor\": \"#4BB543\",\n                        \"&:hover\": {\n                          backgroundColor: \"#4BB545\",\n                          color: \"#4BB545\",\n                        },\n                      }\n                    : {\n                        \"color\": \"#D3D3D3\",\n                        \"backgroundColor\": \"#D3D3D3\",\n                        \"&:hover\": {\n                          backgroundColor: \"#D3D3D3\",\n                          color: \"#D3D3D3\",\n                        },\n                      }\n                }\n                onClick={()=>settingAll()}\n                size='large'\n                aria-label='toggle'>\n                <RectangleIcon />\n              </Button>\n            </TableCell>\n           \n          </>\n        ) : (\n          <>\n            <TableCell>\n              <Button\n                sx={{\n                  color: \"#eee\",\n                  backgroundColor: \"#eee\",\n                }}\n                size='large'\n                aria-label='toggle'>\n                <RectangleIcon />\n              </Button>\n            </TableCell>\n            <TableCell>\n              <Button\n                sx={{\n                  color: \"#eee\",\n                  backgroundColor: \"#eee\",\n                }}\n                size='large'\n                aria-label='toggle'>\n                <RectangleIcon />\n              </Button>\n            </TableCell>\n            <TableCell>\n              <Button\n                sx={{\n                  color: \"#eee\",\n                  backgroundColor: \"#eee\",\n                }}\n                size='large'\n                aria-label='toggle'>\n                <RectangleIcon />\n              </Button>\n            </TableCell>\n            <TableCell>\n              <Button\n                sx={{\n                  color: \"#eee\",\n                  backgroundColor: \"#eee\",\n                }}\n                size='large'\n                aria-label='toggle'>\n                <RectangleIcon />\n              </Button>\n            </TableCell>\n             <TableCell>\n              <Button\n                sx={{\n                  color: \"#eee\",\n                  backgroundColor: \"#eee\",\n                }}\n                size='large'\n                aria-label='toggle'>\n                <RectangleIcon />\n              </Button>\n            </TableCell>\n            \n            \n          </>\n        )}\n      </TableRow>\n    </Fragment>\n  );\n};\n\nexport default RoleFuncions;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\n\n\nimport axios from \"axios\";\nimport Table from \"@mui/material/Table\"\nimport TableCell from \"@mui/material/TableCell\"\nimport TableBody from \"@mui/material/TableBody\"\nimport TableContainer from \"@mui/material/TableContainer\"\nimport TableHead from \"@mui/material/TableHead\"\nimport TableRow from \"@mui/material/TableRow\"\nimport Button from \"@mui/material/Button\"\nimport List from \"@mui/material/List\"\nimport Grid from \"@mui/material/Grid\"\nimport Box from \"@mui/material/Box\"\nimport Typography from \"@mui/material/Typography\"\nimport ListItem from \"@mui/material/ListItem\"\nimport IconButton from \"@mui/material/IconButton\"\nimport Dialog from \"@mui/material/Dialog\"\nimport DialogActions from \"@mui/material/DialogActions\"\nimport DialogContent from \"@mui/material/DialogContent\"\nimport DialogTitle from \"@mui/material/DialogTitle\"\nimport TextField from \"@mui/material/TextField\"\nimport Paper from \"@mui/material/Paper\"\nimport RoleFunctions from \"./RoleFuncions\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {getPermissions} from \"../../redux/features/permissionSlice\";\n\n\nconst ManageRole = () => {\n\tconst dispatch = useDispatch();\n\tconst { permissions } = useSelector(\n\t\t(state) => state.permissions,\n\t);\n\n\tconst [roles, setRoles] = useState([]);\n\tconst [role, setRole] = useState(null);\n\tconst [loading, setLoading] = useState(true);\n\tconst [error, setError] = useState(\"\");\n\tconst [status, setStatus] = useState(\"\");\n\n\tconst [formData, setFormData] = useState({\n\t\tname: \"\",\n\t});\n\n\tconst { name } = formData;\n\n\tconst onChange = (e) =>\n\t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\n\n\tconst [open, setOpen] = useState(false);\n\n\tconst handleClickOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\n\tconst FetchData = () => {\n\t\taxios\n\t\t\t.get(`${process.env.REACT_APP_API_URL}/user/auth/roles/`, CONFIG)\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res.data);\n\t\t\t\tsetLoading(false);\n\t\t\t\tsetStatus(res.statusText);\n\t\t\t\tsetRoles(res.data);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tsetLoading(false);\n\t\t\t\tsetError(err.message);\n\t\t\t});\n\t};\n\tuseEffect(() => {\n\t\tFetchData();\n\t}, []);\n\tconst handleDelete = (id) => {\n\t\taxios\n\t\t\t.delete(`${process.env.REACT_APP_API_URL}/user/auth/roles/${id}/`, CONFIG)\n\t\t\t.then((res) => {\n\t\t\t\tFetchData();\n\t\t\t\treturn (\n\t\t\t\t\t<ActionAlerts\n\t\t\t\t\t\tvalue={{ status: res.statusText, message: \"Success\" }}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t});\n\t};\n\tconst selectRole = (id) => {\n\t\tsetRole(id);\n\t\tdispatch(getPermissions(id));\n\t};\n\t\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconst body = JSON.stringify({ name });\n\t\taxios\n\t\t\t.post(`${process.env.REACT_APP_API_URL}/user/auth/roles/`, body, CONFIG)\n\t\t\t.then((res) => {\n\t\t\t\tFetchData();\n\t\t\t\treturn (\n\t\t\t\t\t<ActionAlerts\n\t\t\t\t\t\tvalue={{ status: res.statusText, message: \"Success\" }}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tFetchData();\n\t\t\t\treturn (\n\t\t\t\t\t<ActionAlerts\n\t\t\t\t\t\tvalue={{ status: err.statusText, message: \"Success\" }}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t});\n\t};\n\treturn (\n\t\t<Fragment>\n\t\t\t<Grid container spacing={2}>\n\t\t\t\t<Grid item lg={12}></Grid>\n\t\t\t\t<Grid item lg={2} component={Paper} elevation={5}>\n\t\t\t\t\t<Box p={2}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\tonClick={handleClickOpen}\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\tborderRadius: \"0.5rem\",\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t+ New Role\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Dialog\n\t\t\t\t\t\t\tcomponent='form'\n\t\t\t\t\t\t\tValidate\n\t\t\t\t\t\t\tonSubmit={(e) => handleSubmit(e)}\n\t\t\t\t\t\t\topen={open}\n\t\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t\t\taria-labelledby='alert-dialog-title'\n\t\t\t\t\t\t\taria-describedby='alert-dialog-description'>\n\t\t\t\t\t\t\t<DialogTitle id='alert-dialog-title'>\n\t\t\t\t\t\t\t\t{\"Add New Role\"}\n\t\t\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\tlabel='Role Name'\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\t\t\t\tid='name'\n\t\t\t\t\t\t\t\t\tautoComplete='name'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t<Button onClick={handleClose}>Close</Button>\n\t\t\t\t\t\t\t\t<Button type='submit' autoFocus>\n\t\t\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t{!loading ? (\n\t\t\t\t\t\t\troles.map((data, index) => (\n\t\t\t\t\t\t\t\t<Box key={index}>\n\t\t\t\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t\t\t\t<ListItem disablePadding>\n\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tsx={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.id === role\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? { backgroundColor: \"#796ef0\", color: \"white\" }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => selectRole(data.id)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{data.name}\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={data.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleDelete(data.id)}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: \"0.5rem\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfloat: \"right\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ClearIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Typography>Loading ...</Typography>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Box>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item lg={10}>\n\t\t\t\t\t<TableContainer sx={{ overflowX: \"auto\" }}>\n\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\"fontSize\": \"1rem\",\n\t\t\t\t\t\t\t\t\"&MuiTableCell\": {\n\t\t\t\t\t\t\t\t\tborder: \"solid 2px black\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t\t<TableRow bgColor='#796ef0'>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Function</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>View </Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Edit</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Create</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Delete</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Contacts</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Team</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Office</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Region</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>All</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t{role !== null && permissions.permissions.length > 0 ? (\n\t\t\t\t\t\t\t\t\tpermissions.permissions.map((permission, index) => (\n\t\t\t\t\t\t\t\t\t\t<RoleFunctions key={permission.id} permission={permission}/>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>please selete a role</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t</TableContainer>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Fragment>\n\t);\n};\n\nexport default ManageRole;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Button from \"@mui/material/Button\"\nimport Box from \"@mui/material/Box\"\nimport List from \"@mui/material/List\"\nimport Table from \"@mui/material/Table\"\nimport Paper from \"@mui/material/Paper\"\nimport Grid from \"@mui/material/Grid\"\nimport TableCell from \"@mui/material/TableCell\"\nimport TableContainer from \"@mui/material/TableContainer\"\nimport TableHead from \"@mui/material/TableHead\"\nimport TableRow from \"@mui/material/TableRow\"\nimport TableBody from \"@mui/material/TableBody\"\nimport ListItem from \"@mui/material/ListItem\"\nimport ListItemText from \"@mui/material/ListItemText\"\nimport Typography from \"@mui/material/Typography\"\nimport Dialog from \"@mui/material/Dialog\"\nimport DialogActions from \"@mui/material/DialogActions\"\nimport DialogContent from \"@mui/material/DialogContent\"\nimport DialogTitle from \"@mui/material/DialogTitle\"\nimport Stack from \"@mui/material/Stack\"\nimport TextField from \"@mui/material/TextField\"\nimport FormControl from \"@mui/material/FormControl\"\nimport InputLabel from \"@mui/material/InputLabel\"\nimport Select from \"@mui/material/Select\"\nimport MenuItem from \"@mui/material/MenuItem\"\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst ManageUserGroup = () => {\n  const [filter, setFilter] = useState(\"\");\n  const [searchItem, setSearchItem] = useState(\"\")\n\n  const handleChange = (event) => {\n    setFilter(event.target.value);\n  };\n  const [group, setGroup] = useState([]);\n  const [usersData, setUsersData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loadingUser, setLoadingUser] = useState(true);\n  const [status, setStatus] = useState(\"\")\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const FetchUserData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/create-member/`, CONFIG)\n      .then((res) => {\n        // setLoading(false);\n        setStatus(res.statusText);\n        setUsersData(res.data);\n        setLoadingUser(false);\n        console.log(usersData)\n\n      })\n      .catch((err) => {\n        setLoadingUser(false);\n      });\n  };\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/user/auth/groups/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setGroup(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n    FetchUserData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/user/auth/groups/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/user/auth/groups/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const showGroup = () => {\n    if (group.length === 0) {\n      return <p> No data found...</p>;\n    } else {\n      return group.map((data) => (\n        <Box mt={1}>\n          <List>\n            <ListItem disablePadding>\n              <ListItemText>{data.name}</ListItemText>\n              <Button\n                variant=\"contained\"\n                value={data.id}\n                onClick={() => handleDelete(data.id)}\n                sx={{\n                  borderRadius: \"0.5rem\",\n                  float: \"right\",\n                }}\n              >\n                <ClearIcon />\n              </Button>\n            </ListItem>\n          </List>\n        </Box>\n      ));\n    }\n  };\n  const showUser = () => {\n    if (usersData.length === 0) {\n      return <p>No data found...</p>;\n    } else\n      return usersData.filter((val)=>{\n        if (searchItem === \"\"){\n          return val\n        } else if((filter === \"group\") && (val.group.toLowerCase().includes(searchItem.toLowerCase()))) {\n          return val\n        }else if((filter === \"role\") &&(val.role.toLowerCase().includes(searchItem.toLowerCase()))){\n          return val\n        }\n        else if((filter === \"name\") &&(val.last_name.toLowerCase().includes(searchItem.toLowerCase()))){\n          return val\n        }\n        else if((filter === \"name\") &&(val.first_name.toLowerCase().includes(searchItem.toLowerCase()))){\n          return val\n        }\n      }).map((data) => \n          <TableRow>\n            <TableCell>{data.first_name}</TableCell>\n            <TableCell>{data.last_name} </TableCell>\n            <TableCell>{data.role}</TableCell>\n            <TableCell>{data.group}</TableCell>\n          </TableRow>\n  );\n    \n  };\n  return (\n    <Fragment>\n      <Grid container spacing={3}>\n        <Grid item lg={12}>\n          <Grid container spacing={3} direction=\"row\">\n            <Grid item lg={3}>\n              <Typography variant=\"h5\" component=\"h5\" m={1} color=\"primary\">\n                Manage Group\n              </Typography>\n            </Grid>\n            <Grid item lg={9}>\n              <Stack direction=\"row\" sx={{ float: \"right\" }}>\n                <Typography m={2} component=\"span\" color=\"primary\">\n                  Filter & Sort By\n                </Typography>\n                <FormControl sx={{ width: \"10rem\", height: \"2.5rem\" }}>\n                  <InputLabel id=\"demo-simple-select-label\" color=\"primary\">\n                    Custom Sort\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={filter}\n                    label=\"Age\"\n                    onChange={handleChange}\n                  >\n                    <MenuItem value=\"name\">By Name</MenuItem>\n                    <MenuItem value=\"role\">By Role</MenuItem>\n                    <MenuItem value=\"group\">By Group</MenuItem>\n                  </Select>\n                </FormControl>\n                <Search sx={{ width: \"20rem\", height: \"2.5rem\", m: 1 }}>\n                  <SearchIconWrapper>\n                    <SearchIcon />\n                  </SearchIconWrapper>\n                  <StyledInputBase\n                    placeholder=\"Search…\"\n                    inputProps={{ \"aria-label\": \"search\" }}\n                    onChange ={e => setSearchItem(e.target.value)}\n                  />\n                </Search>\n              </Stack>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item lg={3} component={Paper} p={3} elevation={3}>\n          <Typography\n            variant=\"h5\"\n            component=\"h5\"\n            color=\"primary\"\n            align=\"center\"\n          >\n            Groups\n          </Typography>\n          <Button\n            variant=\"contained\"\n            onClick={handleClickOpen}\n            fullWidth\n            sx={{\n              borderRadius: \"0.5rem\",\n            }}\n          >\n            + New Group\n          </Button>\n          <Dialog\n            component=\"form\"\n            Validate\n            onSubmit={(e) => handleSubmit(e)}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New Group\"}</DialogTitle>\n            <DialogContent>\n              <TextField\n                required\n                fullWidth\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"name\"\n                label=\"Group Name\"\n                type=\"text\"\n                value={name}\n                onChange={(e) => onChange(e)}\n                id=\"name\"\n                autoComplete=\"name\"\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Close</Button>\n              <Button type=\"submit\" autoFocus>\n                Add\n              </Button>\n            </DialogActions>\n          </Dialog>\n          {!loading ? showGroup() : <Typography>Loading ...</Typography>}\n        </Grid>\n        <Grid item lg={9}>\n          <TableContainer>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow bgColor=\"#796ef0\">\n                  <TableCell>\n                    <Typography color=\"white\">First Name</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Last Name</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Role</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Group</Typography>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>{!loadingUser ? showUser() : <>Loading.. </>}</TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item lg={12}>\n          <Box sx={{ float: \"right\" }}>\n            <Button variant=\"contained\" color=\"success\" sx={{ color: \"white\" }}>\n              Done\n            </Button>\n          </Box>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ManageUserGroup;\n","/** @format */\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\n\nimport { Provider } from \"react-redux\";\n\nimport store, { persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport Layout from \"./hocs/Layout\";\n\nimport PrivateRoutes from \"./utils/PrivateRoute\";\n\nimport { UserProvider } from \"./context/User\";\n\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport theme from \"./hocs/Theme\";\n\nimport Home from \"./containers/Home\";\n\n// Authentication links\nimport Login from \"./containers/Auth/Login\";\nimport Signup from \"./containers/Auth/Signup\";\n\nimport Profile from \"./components/Profile/Profile\";\nimport Company from \"./components/Profile/Company\";\n\nimport Matter from \"./components/Matter\";\n\nimport Matters from \"./containers/Matters/Matters\";\nimport MatterDetail from \"./components/Matter/MatterDetail\";\nimport NewMatter from \"./components/Matter/NewMatter\";\n\nimport Invoice from \"./components/Invoice\";\n\nimport CreateInvoice from \"./components/Invoice/CreateInvoice\";\n\nimport Payment from \"./components/Invoice/Payment\";\nimport ManageCategory from \"./components/Category/ManageCategory\";\n\nimport User from \"./components/User\";\n\nimport Time from \"./components/Ledger/Time\";\nimport TimeList from \"./components/Ledger/TimeList\";\n\nimport Ledger from \"./components/Ledger\";\n\nimport LedgerTImeList from \"./components/Ledger/LedgerTImeList\";\nimport LedgerActivity from \"./components/Ledger/LedgerActivity\";\n\nimport Tasks from \"./components/Tasks\";\nimport CreateTask from \"./components/Tasks/CreateTask\";\nimport ViewTasks from \"./components/Tasks/ViewTasks\";\nimport LedgerDoc from \"./components/Ledger/LedgerDoc\";\n\nimport Employee from \"./components/Employee\";\nimport Templates from \"./components/Template/Templates\";\n\nimport Contact from \"./components/Contact/Contact\";\nimport UserRole from \"./components/User/UserRole\";\nimport ManageRole from \"./components/User/ManageRole\";\nimport ManageUserGroup from \"./components/User/ManageUserGroup\";\nimport \"./styles/main.css\"\n\nconst App = () => {\n  const alertOptions = {\n    timeout: 3000,\n    position: \"top center\",\n  };\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <UserProvider>\n          <ThemeProvider theme={theme}>\n            <AlertProvider template={AlertTemplate} {...alertOptions}>\n              <Router>\n                <Layout>\n                  <Switch>\n                    {/* loging regierter routes */}\n                    <Route path=\"/login\" component={Login} />\n                    <Route path=\"/signup\" component={Signup} />\n\n                    {/* private route after login  */}\n\n                    <PrivateRoutes exact path=\"/\" component={Home} />\n                    <PrivateRoutes path=\"/profile\" component={Profile} />\n                    <PrivateRoutes path=\"/company-detail\" component={Company} />\n\n                    <PrivateRoutes\n                      path=\"/matter-dashboard\"\n                      component={Matter}\n                    />\n                    <PrivateRoutes path=\"/matters\" component={Matters} />\n                    <PrivateRoutes\n                      path=\"/matter-detail\"\n                      component={MatterDetail}\n                    />\n                    <PrivateRoutes\n                      path=\"/create-matter\"\n                      component={NewMatter}\n                    />\n\n                    <PrivateRoutes path=\"/invoices\" component={Invoice} />\n                    <PrivateRoutes\n                      path=\"/create-invoice\" \n                      component={CreateInvoice}\n                    />\n                    <PrivateRoutes path=\"/recive-invoice\" component={Payment} />\n\n                    {/* <PrivateRoutes path=\"/create-user\" component={CreateUser} /> */}\n                    <PrivateRoutes path=\"/users\" component={User} />\n                    <PrivateRoutes path=\"/user-roles\" component={ManageRole} />\n                    <PrivateRoutes\n                      path=\"/user-groups\"\n                      component={ManageUserGroup}\n                    />\n\n                    <PrivateRoutes\n                      path=\"/manage-categories\"\n                      component={ManageCategory}\n                    />\n                    <PrivateRoutes\n                      path=\"/ledger-documents\"\n                      component={LedgerDoc}\n                    />\n                    <PrivateRoutes path=\"/time\" component={Time} />\n                    <PrivateRoutes path=\"/time-list\" component={TimeList} />\n                    <PrivateRoutes path=\"/ledgers\" component={Ledger} />\n                    <PrivateRoutes\n                      path=\"/ledger-list\"\n                      component={LedgerTImeList}\n                    />\n                    <PrivateRoutes\n                      path=\"/activity-list\"\n                      component={LedgerActivity}\n                    />\n\n                    <PrivateRoutes path=\"/tasks\" component={Tasks} />\n                    <PrivateRoutes path=\"/create-task\" component={CreateTask} />\n                    <PrivateRoutes path=\"/view-tasks\" component={ViewTasks} />\n\n                    <PrivateRoutes\n                      path=\"/employee-search\"\n                      component={Employee}\n                    />\n\n                    <PrivateRoutes path=\"/templates\" component={Templates} />\n                    <PrivateRoutes path=\"/contact\" component={Contact} />\n                  </Switch>\n                </Layout>\n              </Router>\n            </AlertProvider>\n          </ThemeProvider>\n        </UserProvider>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { Box } from \"@mui/material\";\n// import NumberFormat from \"react-number-format\";\n\nexport const Appointments = () => {\n  const options = {\n    chart: {\n      type: \"bar\",\n      height: 500,\n    },\n    series: [\n      {\n        data: [\n          {\n            x: \"Zoom\",\n            y: 150,\n            fillColor: \"#33b2df\",\n            strokeColor: \"#33b2df\",\n          },\n          {\n            x: \"Phone\",\n            y: 250,\n            fillColor: \"#546E7A\",\n            strokeColor: \"#546E7A\",\n          },\n          {\n            x: \"In Person\",\n            y: 500,\n            fillColor: \"#f48024\",\n            strokeColor: \"#f48024\",\n          },\n          {\n            x: \"Met\",\n            y: 300,\n            fillColor: \"#13d8aa\",\n            strokeColor: \"#13d8aa\",\n          },\n          {\n            x: \"Rescheduled\",\n            y: 125,\n            fillColor: \"#33b2df\",\n            strokeColor: \"#33b2df\",\n          },\n          {\n            x: \"Canceled\",\n            y: 30,\n            fillColor: \"#A5978B\",\n            strokeColor: \"#A5978B\",\n          },\n        ],\n      },\n    ],\n\n    options: {\n      plotOptions: {\n        bar: {\n          barHeight: \"50%\",\n          borderRadius: 4,\n\n          horizontal: true,\n          dataLabels: {\n            position: \"bottom\",\n          },\n        },\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      title: {\n        text: \"Appointments\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n    },\n    xaxis: {\n      style: {\n        fontSize: \"20px\",\n      },\n    },\n  };\n\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={options.options}\n          series={options.series}\n          height=\"300\"\n          type=\"bar\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\nexport const Marketing = () => {\n  const config = {\n    series: [\n      {\n        name: \"Google\",\n        data: [10, 51, 35, 41, 29, 62, 99, 41, 18],\n      },\n      {\n        name: \"Youtube\",\n        data: [10, 80, 35, 41, 99, 62, 79, 21, 68],\n      },\n      {\n        name: \"Website\",\n        data: [60, 21, 45, 41, 89, 62, 59, 71, 98],\n      },\n    ],\n    options: {\n      chart: {\n        height: 250,\n        toolbar: {\n          show: false,\n        },\n      },\n\n      legend: {\n        position: \"top\",\n        horizontalAlign: \"right\",\n        onItemHover: {\n          highlightDataSeries: true,\n        },\n        labels: {\n          colors: \"#dddddd\",\n          useSeriesColors: true,\n        },\n      },\n\n      dataLabels: {\n        enabled: false,\n      },\n\n      stroke: {\n        curve: \"smooth\",\n        width: 2,\n      },\n\n      title: {\n        text: \"Marketing\",\n        align: \"left\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      xaxis: {\n        categories: [\n          \"31/01\",\n          \"01/02\",\n          \"02/03\",\n          \"03/04\",\n          \"31/05\",\n          \"04/06\",\n          \"06/07\",\n          \"02/08\",\n          \"09/09\",\n        ],\n        style: {\n          fontSize: \"20px\",\n        },\n      },\n\n      yaxis: {},\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={config.options}\n        series={config.series}\n        height=\"250\"\n        type=\"line\"\n      />\n    </Fragment>\n  );\n};\nexport const Calls = () => {\n  const state = {\n    series: [73, 83, 93],\n    options: {\n      chart: {\n        height: 300,\n        type: \"radialBar\",\n      },\n      plotOptions: {\n        radialBar: {\n          dataLabels: {\n            name: {\n              show: true,\n              lable: \"Total\",\n            },\n            value: {\n              show: true,\n            },\n            total: {\n              show: true,\n              formatter: function(w) {\n                return 249;\n              },\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Calls\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      labels: [\"Inbound\", \"Outbound\", \"Sales\"],\n      legend: {\n        show: true,\n        floating: true,\n        fontSize: \"auto\",\n        position: \"left\",\n\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function(seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={state.options}\n          series={state.series}\n          type=\"radialBar\"\n          height=\"200\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\n\nexport const Email = () => {\n  const state = {\n    series: [73, 83, 93],\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      plotOptions: {\n        radialBar: {\n          dataLabels: {\n            name: {\n              show: true,\n              lable: \"Total Emails\",\n            },\n            value: {\n              show: true,\n            },\n            total: {\n              show: true,\n              formatter: function(w) {\n                return 249;\n              },\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Email\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      labels: [\"Send\", \"Open\", \"Delete\"],\n      legend: {\n        show: true,\n        floating: true,\n        fontSize: \"auto\",\n        position: \"left\",\n\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function(seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={state.options}\n          series={state.series}\n          type=\"radialBar\"\n          height=\"200\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { revenueInActive } from \"../../../../redux/features/sidebarSlice\";\n\nexport const RevenueInCards = ({ isWeekly }) => {\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 460;\n      case \"weekly\":\n        return 3254;\n      case \"monthly\":\n        return 32564;\n      case \"quarterly\":\n        return 130256;\n      case \"yearly\":\n        return 521024;\n      case \"range\":\n        return 1500;\n    }\n  };\n  return (\n    <Grid container>\n      <Grid item lg={12}>\n        <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n          Revenue In\n        </Typography>\n        <Typography\n          variant=\"h3\"\n          mt={3}\n          component=\"h4\"\n          sx={{ fontSize: \"2.2rem\" }}\n        >\n          <NumberFormat\n            value={amount()}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix=\"$\"\n          />\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(RevenueInCards);\n","/** @format */\n\nimport React from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { revenueOutActive } from \"../../../../redux/features/sidebarSlice\";\n\nexport const RevenueOutCards = ({ isWeekly }) => {\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 35;\n      case \"weekly\":\n        return 240;\n      case \"monthly\":\n        return 4520;\n      case \"quarterly\":\n        return 18080;\n      case \"yearly\":\n        return 72320;\n      case \"range\":\n        return 500;\n    }\n  };\n  return (\n    <Grid container>\n      <Grid item lg={12}>\n        <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n          Revenue out\n        </Typography>\n        <Typography\n          variant=\"h3\"\n          mt={3}\n          component=\"h4\"\n          sx={{ fontSize: \"2.2rem\" }}\n        >\n          <NumberFormat\n            value={amount()}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix=\"$\"\n          />\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(RevenueOutCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  TextField,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { newCustomerActive } from \"../../../../redux/features/sidebarSlice\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\n\nexport const NewCustomerCards = ({ isWeekly }) => {\n  const [dateValue, setDateValue] = useState([null, null]);\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 2;\n      case \"weekly\":\n        return 23;\n      case \"monthly\":\n        return 69;\n      case \"quarterly\":\n        return 200;\n      case \"yearly\":\n        return 610;\n      case \"range\":\n        return 10;\n    }\n  };\n  const [option, setOption] = useState(\"\");\n  return (\n    <Grid container>\n      <Grid item>\n        <Grid container>\n          <Grid item lg={6}>\n            <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n              New Customers\n            </Typography>\n            <Typography\n              variant=\"h3\"\n              mt={2}\n              component=\"h4\"\n              sx={{ fontSize: \"2.2rem\" }}\n            >\n              <NumberFormat\n                value={isWeekly ? 23 : 69}\n                displayType={\"text\"}\n                thousandSeparator={true}\n              />\n            </Typography>\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <ul style={{ listStyleType: \"none\" }}>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Today:</span>\n                  <NumberFormat\n                    value={2}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Week:</span>\n                  <NumberFormat\n                    value={23}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Month:</span>\n                  <NumberFormat\n                    value={69}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Week:</span>\n                  <NumberFormat\n                    value={15}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Month:</span>\n                  <NumberFormat\n                    value={50}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Quarter:</span>\n                  <NumberFormat\n                    value={200}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField size=\"small\" {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField size=\"small\" {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              </li>\n            </ul>\n          </Grid>\n          {/* <Grid lg={1}>\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={() => dispatch(newCustomerActive())}\n                >\n                  <CloseIcon fontSize=\"small\" />\n                </IconButton>\n              </Grid> */}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(NewCustomerCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  TextField,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n  Button,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { lostCustomerActive } from \"../../../../redux/features/sidebarSlice\";\n\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\n\nexport const LostCustomerCards = ({ isWeekly }) => {\n  const [dateValue, setDateValue] = useState([null, null]);\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 0;\n      case \"weekly\":\n        return 0;\n      case \"monthly\":\n        return 3;\n      case \"quarterly\":\n        return 6;\n      case \"yearly\":\n        return 15;\n      case \"range\":\n        return 3;\n    }\n  };\n  const [option, setOption] = useState(\"\");\n  return (\n    <Grid container>\n      <Grid item>\n        <Grid container>\n          <Grid item lg={6}>\n            <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n              Lost Customers\n            </Typography>\n            <Typography\n              variant=\"h3\"\n              mt={2}\n              component=\"h4\"\n              sx={{ fontSize: \"2.2rem\" }}\n            >\n              <NumberFormat\n                value={isWeekly ? 0 : 3}\n                displayType={\"text\"}\n                thousandSeparator={true}\n              />\n            </Typography>\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <ul style={{ listStyleType: \"none\" }}>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Today:</span>\n                  <NumberFormat\n                    value={0}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Week:</span>\n                  <NumberFormat\n                    value={0}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Month:</span>\n                  <NumberFormat\n                    value={3}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Week:</span>\n                  <NumberFormat\n                    value={1}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Month:</span>\n                  <NumberFormat\n                    value={2}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Quarter:</span>\n                  <NumberFormat\n                    value={6}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField size=\"small\" {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField size=\"small\" {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              </li>\n            </ul>\n          </Grid>\n          {/* <Grid lg={1}>\n                <Button\n                  component={IconButton}\n                  aria-label=\"delete\"\n                  onClick={() => dispatch(lostCustomerActive())}\n                >\n                  <CloseIcon fontSize=\"small\" />\n                </Button>\n              </Grid> */}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(LostCustomerCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport ReactMapGL, { Marker } from \"react-map-gl\";\nimport { Circle } from \"@mui/icons-material\";\nimport MAP_STYLE from \"../../../utils/style.json\";\nimport mapboxgl from \"mapbox-gl\";\nimport MapboxWorker from \"mapbox-gl/dist/mapbox-gl-csp-worker\";\nmapboxgl.workerClass = MapboxWorker;\n\nconst MAPBOX_TOKEN =\n  \"pk.eyJ1IjoicmlkYXJhZmlzeWVkIiwiYSI6ImNreTkydGE2bzAyZTQydnA0dWF1Y2xrdWQifQ.BA1u_ZGDHrpvj0WVuypIIQ\";\n\nconst Map = () => {\n  const [viewport, setViewport] = useState({\n    latitude: 38.7577,\n    longitude: -95.4376,\n    zoom: 3,\n  });\n\n  return (\n    <Fragment>\n      <ReactMapGL\n        {...viewport}\n        width=\"100%\"\n        height=\"100%\"\n        mapStyle={MAP_STYLE}\n        onViewportChange={setViewport}\n        mapboxApiAccessToken={\n          \"pk.eyJ1IjoicmlkYXJhZmlzeWVkIiwiYSI6ImNreTkydGE2bzAyZTQydnA0dWF1Y2xrdWQifQ.BA1u_ZGDHrpvj0WVuypIIQ\"\n        }\n        style={{ zIndex: 200 }}\n      >\n        <Marker\n          latitude={40.7128}\n          longitude={-74.006}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n        <Marker\n          latitude={47.6062}\n          longitude={-74.006}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n        <Marker\n          latitude={41.8781}\n          longitude={-87.6298}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n      </ReactMapGL>\n    </Fragment>\n  );\n};\n\nexport default Map;\n","/** @format */\n\nimport {\n  Paper,\n  Box,\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  Typography,\n  TableCell,\n} from \"@mui/material\";\nimport React, { Fragment } from \"react\";\n\nconst NewAccounts = () => {\n  return (\n    <Fragment>\n      <Box p={1}>\n        <Typography color=\"blue\">New Accounts</Typography>\n        <TableContainer>\n          <Table fullWidth>\n            <TableHead color=\"blue\">\n              <TableRow>\n                <TableCell>\n                  <Typography color=\"blue\">Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"blue\">Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"blue\">Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"blue\">City/State</Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default NewAccounts;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Box, Grid, Typography } from \"@mui/material\";\n\nimport NumberFormat from \"react-number-format\";\n\nconst EmpOversite = () => {\n  return (\n    <Fragment>\n      <Typography color=\"blue\" sx={{ fontSize: \"1.1rem\" }}>\n        Employee Oversite\n      </Typography>\n      <Typography variant=\"h3\" component=\"h3\" sx={{ fontSize: \"1.8rem\" }}>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n\n      <Typography component=\"h4\" sx={{ fontSize: \"1.1rem\" }}>\n        Employees logged in\n      </Typography>\n\n      <Typography component=\"h4\" sx={{ fontSize: \"1.2rem\" }}>\n        <span style={{ color: \"purple\" }}> Total ticket issued:</span>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n      <Typography component=\"h4\" sx={{ fontSize: \"1.2rem\" }}>\n        <span style={{ color: \"seagreen\" }}>Trouble ticket Resolved: </span>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n    </Fragment>\n  );\n};\n\nexport default EmpOversite;\n","/** @format */\n\nimport React from \"react\";\n\nimport {\n  IconButton,\n  Typography,\n  Card,\n  CardContent,\n  CardActions,\n} from \"@mui/material\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport { Appointments, Calls, Marketing, Email } from \"../Charts\";\n\nimport RevenueInCards from \"../Cards/RevenueIn\";\nimport RevenueOutCards from \"../Cards/RevenueOut\";\nimport NewCustomerCards from \"../Cards/NewCustomer\";\nimport LostCustomerCards from \"../Cards/LostCustomer\";\n\nimport Map from \"../Map\";\n\nimport NewAccounts from \"../NewAccounts\";\nimport EmpOversite from \"../EmpOversite\";\n\nconst widgetNames = {\n  a: <RevenueInCards />,\n  b: <RevenueOutCards />,\n  c: <NewCustomerCards />,\n  d: <LostCustomerCards />,\n  e: <NewAccounts />,\n  f: <Map />,\n  g: <EmpOversite />,\n  h: <Calls />,\n  i: <Appointments />,\n  j: <Marketing />,\n  k: <Email />,\n};\n\nexport default function Widget({ id, onRemoveItem }) {\n  return (\n    <Card\n      sx={{\n        width: \"100%\",\n        height: \"100%\",\n        paddingTop: \"0.5rem\",\n        padding: \"1rem\",\n      }}\n    >\n      <CardActions>\n        <IconButton\n          aria-label=\"delete\"\n          onClick={() => onRemoveItem(id)}\n          sx={{ position: \"fixed\", right: \"16px\" }}\n        >\n          <CloseIcon fontSize=\"small\" />\n        </IconButton>\n      </CardActions>\n      {widgetNames[id]}\n    </Card>\n  );\n}\n"],"sourceRoot":""}